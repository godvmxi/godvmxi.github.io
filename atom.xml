<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Godvmxi Blog</title>
  
  <subtitle>Ball Virtual Blog | 蛋种的博客</subtitle>
  <link href="http://vball.fun/atom.xml" rel="self"/>
  
  <link href="http://vball.fun/"/>
  <updated>2021-12-08T08:49:11.896Z</updated>
  <id>http://vball.fun/</id>
  
  <author>
    <name>Bright Jiang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Switch to Github Actions and F Travis CI</title>
    <link href="http://vball.fun/2021/12/08/use-github-actions-push-blog/"/>
    <id>http://vball.fun/2021/12/08/use-github-actions-push-blog/</id>
    <published>2021-12-08T07:43:07.000Z</published>
    <updated>2021-12-08T08:49:11.896Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="fxxk-travis-ci-stopped-generating-my-page">Fxxk Travis Ci stopped generating my page</span></h1><p>One day, After I updated some blog and there was no update on my Github page blog, then I checked the Travis-CI, it showed <strong>Builds have been temporarily disabled for public repositories</strong><br><img src="travis_down.png" alt="Down"><br>Then, whatever, F it. I spent more than 2 hours setting up my Credit Card to activate the Travis-CI service, and now It just down and without any notifications.</p><h1><span id="back-to-github-actions">Back to GitHub actions</span></h1><p>Luckily, Github provides the workflows with actions.</p><pre class="mermaid">sequenceDiagramparticipant LA as Localparticipant RM as Repo Master Branchparticipant RP as Repo gh-pages Branchparticipant GA as Github ActionsLA ->> LA: hexo new pageLA ->> LA: hexo s, setup preview serverLA ->> LA: http://127.0.0.1:4000 previewLA --> LA: add github actions workflow yamlLA ->> RM: Push to MasterRM ->> GA: Trigger actionsGA ->> GA: Setup nodeGA ->> GA: Install packageGA ->> GA: Generate static blog pageGA ->> RP: Push to Repo publish branch</pre><h2><span id="github-workflow-yaml-setting">Github workflow yaml setting</span></h2><p>Code talks firstly</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This workflow will do a clean install of</span></span><br><span class="line"><span class="comment"># node dependencies, cache/restore them,</span></span><br><span class="line"><span class="comment"># build the source code and run tests across different versions of node</span></span><br><span class="line"><span class="comment"># For more information see:</span></span><br><span class="line"><span class="comment"># https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">Node.js</span> <span class="string">CI</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;14&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Env</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm install -g hexo-cli@4.0.0</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string">          hexo generate</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">deploy_key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_PRI</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">          <span class="attr">publish_branch:</span> <span class="string">gh_pages</span>  <span class="comment"># deploying branch</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1><span id="workflow-detail">Workflow detail</span></h1><h2><span id="setup-basic-node-based-on-ubuntu">Setup basic Node based on ubuntu</span></h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;14&#x27;</span></span><br></pre></td></tr></table></figure><h2><span id="install-hexo-to-ci-system-and-build">Install hexo to CI system and build</span></h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Env</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">hexo-cli@4.0.0</span></span><br></pre></td></tr></table></figure><p>if we do not install this version globally, then the CI will not find the hexo command.</p><h2><span id="install-other-packages-and-generate-the-static-page">Install other packages and generate the static page</span></h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">generate</span></span><br></pre></td></tr></table></figure><h2><span id="deploy-to-repo-gh-pages-branch-with-deploy-tools">Deploy to Repo gh-pages branch with deploy tools</span></h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">deploy_key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_PRI</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">    <span class="attr">publish_branch:</span> <span class="string">gh_pages</span>  <span class="comment"># deploying branch</span></span><br></pre></td></tr></table></figure><p>It will deploy your Ci public directory to your repo gh_pages branch.</p><h2><span id="actions-related-resource">Actions Related Resource</span></h2><p>If you need more help, just <a href="https://github.com/marketplace/actions/github-pages-action">peaceiris/actions-gh-pages@v3</a> pages for more help.</p><h3><span id="this-actions-support-many-tokens">This actions support many tokens</span></h3><p><img src="tokens.png" alt="Tokens"></p><p>If you just need https, choose github_token, and if you prefer to ssh, you can use deploy_key(it’s my style)</p><h2><span id="last-do-not-forget-to-update-your-page-setting-to-your-gh-pages-branch">Last, DO NOT forget to update your page setting to your gh-pages branch</span></h2><p><img src="gh_pages.png" alt="Page"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;fxxk-travis-ci-stopped-generating-my-page&quot;&gt;Fxxk Travis Ci stopped generating my page&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;One day, After I updated so</summary>
      
    
    
    
    
    <category term="Github" scheme="http://vball.fun/tags/Github/"/>
    
    <category term="Actions" scheme="http://vball.fun/tags/Actions/"/>
    
  </entry>
  
  <entry>
    <title>pynput stop key echo in bash</title>
    <link href="http://vball.fun/2021/12/07/pynput-stop-echo-in-bash/"/>
    <id>http://vball.fun/2021/12/07/pynput-stop-echo-in-bash/</id>
    <published>2021-12-07T09:16:18.000Z</published>
    <updated>2021-12-08T08:49:11.892Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="optional-descriptions">Optional descriptions</span></h1><ol><li>optionally block propagation of keyboard events</li><li>python block key events</li><li>python listen to keyboards and stop the event message</li></ol><h1><span id="code-talk-first">Code talk first</span></h1><p>set suppress=True will swallow. ALL keypresses</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">from</span> pynput.keyboard <span class="keyword">import</span> Key, Listener</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_press</span>(<span class="params">key</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;0&#125; pressed&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">        key))</span><br><span class="line">    <span class="keyword">if</span> key == Key.esc:</span><br><span class="line">        <span class="comment"># Stop listener</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Collect events until released</span></span><br><span class="line"><span class="keyword">with</span> Listener(</span><br><span class="line">        on_press=on_press, suppress=<span class="literal">True</span>) <span class="keyword">as</span> listener:</span><br><span class="line">    listener.join()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1><span id="issue">Issue</span></h1><p>When use pynput to capture keyboard input like this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> Listener(</span><br><span class="line">        on_press=on_press) <span class="keyword">as</span> listener:</span><br><span class="line">    listener.join()</span><br></pre></td></tr></table></figure><p>the terminal will auto echo the key info, even special echo for up/down , such as:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ python3 key_listener.py </span><br><span class="line">Key.up pressed</span><br><span class="line">^[[AKey.right pressed</span><br><span class="line">^[[CKey.left pressed</span><br><span class="line">^[[DKey.down pressed</span><br><span class="line">^[[BKey.right pressed</span><br><span class="line">^[[CKey.left pressed</span><br><span class="line">^[[DKey.up pressed</span><br><span class="line">^[[A<span class="string">&#x27;a&#x27;</span> pressed</span><br><span class="line">a<span class="string">&#x27;s&#x27;</span> pressed</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Now the world is slient and clean.</p><h1><span id="note">NOTE</span></h1><p>but if you forget to exit the app, other apps will never get a valid key input forever.</p><h1><span id="you-can-also-just-read-input-from-stdinuse-get_char-to-do-it">You can also just read input from stdin,use get_char to do it</span></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;optional-descriptions&quot;&gt;Optional descriptions&lt;/span&gt;&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;optionally block propagation of keyboard events&lt;/li&gt;
&lt;li&gt;pyth</summary>
      
    
    
    
    
    <category term="Python" scheme="http://vball.fun/tags/Python/"/>
    
    <category term="pynput" scheme="http://vball.fun/tags/pynput/"/>
    
  </entry>
  
  <entry>
    <title>build 7yuv snap package, run 7yuv in no-qt4 system</title>
    <link href="http://vball.fun/2021/11/23/build-7yuv-snap-package/"/>
    <id>http://vball.fun/2021/11/23/build-7yuv-snap-package/</id>
    <published>2021-11-23T07:00:53.000Z</published>
    <updated>2021-12-08T08:49:11.868Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#7yuv">7YUV</a></li><li><a href="#about-snap">About Snap</a></li><li><a href="#my-snap-build-file-for-7yuv">My snap build file for 7yuv</a></li><li><a href="#snap-build-instructions">Snap build instructions</a><ul><li><a href="#snap-base">snap base</a></li><li><a href="#build-plugin">build plugin</a></li><li><a href="#add-qt4-runtime-to-snap">add Qt4 runtime to snap</a></li><li><a href="#add-dbus-and-slot">Add dbus and slot</a></li></ul></li><li><a href="#manual-build-snap-from-code">manual build snap from code</a><ul><li><a href="#i-will-ignore-steps-about-installing-snap-and-snapcrash">I will ignore steps about installing snap and snapcrash</a></li><li><a href="#build-snap-package-with-lxd">build snap package – with lxd</a></li><li><a href="#install-your-snap">Install your snap</a></li></ul></li></ul><!-- tocstop --><h1><span id="7yuv">7YUV</span></h1><p>As a video software developer, 7yuv is a nice YUV sequence analysis tool(Of course, Vooya is another good option), but the developer of 7YUV does not punish the Qt5 version and the latest Linux system has removed the support of Qt4. So I chose to build a snap package for 7yuv to make sure it can works well in any snap supported system. </p><h1><span id="about-snap">About Snap</span></h1><p>Snaps are app packages for desktop, cloud and IoT that are easy to install, secure, cross‐platform and dependency‐free. Snaps are discoverable and installable from the Snap Store, the app store for Linux with an audience of millions.</p><h1><span id="my-snap-build-file-for-7yuv">My snap build file for 7yuv</span></h1><p>You can find my full code in <a href="https://github.com/godvmxi/7yuv_snap_wrap">LINK</a></p><h1><span id="snap-build-instructions">Snap build instructions</span></h1><h2><span id="snap-base">snap base</span></h2><p>The qt4 is still support on snap core18, so I choose the core18 as the base system</p><h2><span id="build-plugin">build plugin</span></h2><p>I have the raw 7yuv binnary, so I choose the dump plugin to install the 7yuv to my snap packge, the plugin will install all source dirtory to the system and keep the origin directory layout.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">parts:</span><br><span class="line">  7yuv:</span><br><span class="line">    <span class="comment"># See &#x27;snapcraft plugins&#x27;</span></span><br><span class="line">    plugin: dump</span><br><span class="line">    <span class="built_in">source</span>: 7yuv-2.5_x64_pre_build/</span><br></pre></td></tr></table></figure><h2><span id="add-qt4-runtime-to-snap">add Qt4 runtime to snap</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">parts:</span><br><span class="line">  7yuv:</span><br><span class="line">------------</span><br><span class="line">    stage-packages:</span><br><span class="line">      - libqtcore4</span><br><span class="line">      - libqtgui4</span><br><span class="line">      - libstdc++6</span><br><span class="line">      - libqt4-opengl</span><br><span class="line">      - libalglib3.11</span><br><span class="line">      - libgcc1</span><br><span class="line">      - libgl1</span><br><span class="line">      - libgl1-mesa-glx</span><br><span class="line">      - libgl2ps1.4</span><br><span class="line">      - libglu1</span><br><span class="line">      - libglu1-mesa</span><br><span class="line">      - libgsl23</span><br><span class="line">      - libgslcblas0</span><br><span class="line">      - libmuparser2v5</span><br><span class="line">      - libqt4-network</span><br><span class="line">      - libqt4-qt3support</span><br><span class="line">      - libqt4-svg</span><br><span class="line">      - libqt4-xml</span><br><span class="line">      - libqtassistantclient4</span><br><span class="line">      - libqtexengine1</span><br><span class="line">      - libtamuanova-0.2</span><br><span class="line">      - zlib1g</span><br><span class="line">      - sip-api-12.3</span><br></pre></td></tr></table></figure><h2><span id="add-dbus-and-slot">Add dbus and slot</span></h2><p>Do not ask why, I do not know, you can check the snap doc for it.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">slots:</span><br><span class="line">  dbus-daemon:</span><br><span class="line">    interface: dbus</span><br><span class="line">    bus: session</span><br><span class="line">    name: de.datahammer.7yuv</span><br><span class="line"></span><br><span class="line">plugs:</span><br><span class="line">  config-7yuv:</span><br><span class="line">    interface: system-files</span><br><span class="line">    <span class="built_in">read</span>:</span><br><span class="line">      - /</span><br><span class="line">    write:</span><br><span class="line">      - /</span><br></pre></td></tr></table></figure><h1><span id="manual-build-snap-from-code">manual build snap from code</span></h1><h2><span id="i-will-ignore-steps-about-installing-snap-and-snapcrash">I will ignore steps about installing snap and snapcrash</span></h2><h2><span id="build-snap-package-with-lxd">build snap package – with lxd</span></h2><p>I use the lxd to replace the multpass, the multipass has a lot trouble in ubuntu20, so I give up it.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snapcraft --debug --use-lxd</span><br></pre></td></tr></table></figure><p>you will find the target snap file in build directory.</p><h2><span id="install-your-snap">Install your snap</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap install --devmode --dangerous   7yuv_0.1_amd64.snap</span><br></pre></td></tr></table></figure><p>Now you can run 7yuv from any snap system</p>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#7yuv&quot;&gt;7YUV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#about-snap&quot;&gt;About Snap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#my-snap-build-file-for-7yuv</summary>
      
    
    
    
    
    <category term="7yuv" scheme="http://vball.fun/tags/7yuv/"/>
    
    <category term="Snap" scheme="http://vball.fun/tags/Snap/"/>
    
    <category term="Qt4" scheme="http://vball.fun/tags/Qt4/"/>
    
    <category term="Ubuntu" scheme="http://vball.fun/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>add watermarker to bitstream tool</title>
    <link href="http://vball.fun/2021/11/16/add-watermarker-to-h264-tool/"/>
    <id>http://vball.fun/2021/11/16/add-watermarker-to-h264-tool/</id>
    <published>2021-11-16T07:58:29.000Z</published>
    <updated>2021-12-08T08:49:11.864Z</updated>
    
    <content type="html"><![CDATA[<p>Index:</p><!-- toc --><ul><li><a href="#usage">Usage</a><ul><li><a href="#read-and-write-bitstream-by-frames-with-opencv2">read and write bitstream by frames with opencv2</a></li><li><a href="#use-freetype-to-render-the-string-and-add-to-frame">use freetype to render the string and add to frame</a></li><li><a href="#show-new-frame-with-opencv2">Show new frame with opencv2</a></li><li><a href="#font-load-note">font load note</a></li></ul></li><li><a href="#usage-guide">Usage Guide</a><ul><li><a href="#code-help">Code Help:</a></li><li><a href="#basic-usage">Basic Usage:</a></li><li><a href="#advanced-usage">Advanced Usage:</a></li><li><a href="#parameters-guide">Parameters Guide</a></li></ul></li><li><a href="#talk-is-cheap-show-me-the-code">Talk is cheap, show me the code</a></li></ul><!-- tocstop --><h2><span id="usage">Usage</span></h2><p>In daily test, I need to add number watermarker to the bitstream, then dump it to different yuv formats.</p><h3><span id="read-and-write-bitstream-by-frames-with-opencv2">read and write bitstream by frames with opencv2</span></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">cap = cv2.VideoCapture(args.<span class="built_in">input</span>)</span><br><span class="line">total_frames = <span class="built_in">int</span>( cap.get(cv2.CAP_PROP_FRAME_COUNT) )</span><br><span class="line">input_width = <span class="built_in">int</span>(cap.get(<span class="number">3</span>))</span><br><span class="line">input_height = <span class="built_in">int</span>(cap.get(<span class="number">4</span>))</span><br><span class="line">video_info = <span class="string">&#x27;video : &#123;0&#125;x&#123;1&#125; frames:&#123;2&#125;&#x27;</span>.<span class="built_in">format</span>(input_width, input_height, total_frames)</span><br><span class="line"><span class="built_in">print</span>(video_info)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;total frames :&quot;</span>, total_frames)</span><br><span class="line"></span><br><span class="line">fourcc = cv2.VideoWriter_fourcc(*<span class="string">&#x27;X264&#x27;</span>)</span><br><span class="line">video_output = cv2.VideoWriter(args.output, fourcc, <span class="number">30.0</span>, (input_width, input_height))</span><br><span class="line"><span class="keyword">if</span> args.frame_number &gt; <span class="number">0</span> <span class="keyword">and</span> args.frame_number &lt; total_frames:</span><br><span class="line">    total_frames = args.frame_number</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;processing frame number is : &quot;</span>, total_frames)</span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(total_frames):</span><br><span class="line">    <span class="comment"># set frame position</span></span><br><span class="line">    <span class="comment">#cap.set(cv2.CAP_PROP_POS_FRAMES,index)</span></span><br><span class="line">    ret, frame = cap.read()</span><br><span class="line">    marker_text = <span class="string">&#x27;&#123;0&#125;&#123;1:0&gt;2&#125;&#x27;</span>.<span class="built_in">format</span>(args.prefix, index)</span><br><span class="line">    add_watermark_to_frame(frame, marker_text,args.text_height, (args.offset_x, args.offset_y))</span><br><span class="line">    video_output.write(frame)</span><br><span class="line">    <span class="keyword">if</span> args.show:</span><br><span class="line">        cv2.imshow(<span class="string">&quot;Video&quot;</span>, frame)</span><br><span class="line">        <span class="keyword">if</span> cv2.waitKey(<span class="number">5000</span>) &amp; <span class="number">0xFF</span> == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">cap.release()</span><br><span class="line">video_output.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h3><span id="use-freetype-to-render-the-string-and-add-to-frame">use freetype to render the string and add to frame</span></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_watermark_to_frame</span>(<span class="params">frame, txt, text_height,offset</span>):</span></span><br><span class="line">    ft = cv2.freetype.createFreeType2()</span><br><span class="line">    ft.loadFontData(fontFileName=<span class="string">&#x27;UbuntuMono-Regular.ttf&#x27;</span>,</span><br><span class="line">                    <span class="built_in">id</span>=<span class="number">0</span>)</span><br><span class="line">    ft_size, baseline= ft.getTextSize(txt, text_height, -<span class="number">1</span>)</span><br><span class="line">    <span class="comment">#print(&quot;Msg: &#123;0&#125; &#123;1&#125; dat: &#123;2&#125;&quot;.format(ft_size, baseline, txt))</span></span><br><span class="line">    magin_pixel = <span class="number">5</span></span><br><span class="line">    rectangle_start = (offset[<span class="number">0</span>] + baseline - magin_pixel, offset[<span class="number">1</span>] - ft_size[<span class="number">1</span>] - baseline - magin_pixel )</span><br><span class="line">    rectangle_end = (offset[<span class="number">0</span>] + ft_size[<span class="number">0</span>] + magin_pixel ,  offset[<span class="number">1</span>] + baseline + magin_pixel) <span class="comment">#</span></span><br><span class="line">    <span class="comment">#print(&quot;start: &#123;0&#125; -&gt; end: &#123;1&#125;&quot;.format(rectangle_start, rectangle_end))</span></span><br><span class="line">    cv2.rectangle(frame,</span><br><span class="line">        rectangle_start,</span><br><span class="line">        rectangle_end,</span><br><span class="line">        (<span class="number">250</span>,<span class="number">240</span>,<span class="number">240</span>),</span><br><span class="line">        -<span class="number">1</span></span><br><span class="line">        )</span><br><span class="line">    ft.putText(img=frame,</span><br><span class="line">            text=txt,</span><br><span class="line">            org=(offset[<span class="number">0</span>], offset[<span class="number">1</span>]),</span><br><span class="line">            fontHeight=text_height,</span><br><span class="line">            color=(<span class="number">255</span>,  <span class="number">10</span>, <span class="number">10</span>),</span><br><span class="line">            thickness=-<span class="number">1</span>,</span><br><span class="line">            line_type=cv2.LINE_AA,</span><br><span class="line">            bottomLeftOrigin=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> frame</span><br></pre></td></tr></table></figure><h3><span id="show-new-frame-with-opencv2">Show new frame with opencv2</span></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cv2.imshow(<span class="string">&quot;Video&quot;</span>, frame)</span><br></pre></td></tr></table></figure><h3><span id="font-load-note">font load note</span></h3><ol><li>the code will auto load “UbuntuMono-Regular.ttf” to render the picture with freetype, please put this font to the script dir</li><li>the code need opencv2 support, install it by yourself</li></ol><h2><span id="usage-guide">Usage Guide</span></h2><h3><span id="code-help">Code Help:</span></h3><p><img src="image2021-4-26_16-44-37.png" alt="usage"></p><h3><span id="basic-usage">Basic Usage:</span></h3><p>It will get first 10 frames and add number watermarker in each frame, then save to output.mp4 file.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 cv_watermark.py -i origin.mp4 -o output.mp4 -n 10</span><br></pre></td></tr></table></figure><p><img src="image2021-4-26_16-48-17.png" alt="usage"></p><h3><span id="advanced-usage">Advanced Usage:</span></h3><p>It will get first 10 frames and add number watermarker in each frame, then save to output.mp4 file.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 ./cv_watermark.py -i Mix_BostonHarbor_MainStreet_GrandBendPatio_1920x1088.mp4  -prefix  <span class="string">&quot;AMD is awesome: &quot;</span>  -s</span><br></pre></td></tr></table></figure><p><img src="image2021-4-26_17-15-37.png" alt="usage"></p><h3><span id="parameters-guide">Parameters Guide</span></h3><table><thead><tr><th>parameter</th><th>description</th></tr></thead><tbody><tr><td>test</td><td>tset</td></tr><tr><td>i</td><td>input bitstream file name</td></tr><tr><td>n</td><td>frame number</td></tr><tr><td>o</td><td>output bitstream file name</td></tr><tr><td>ox</td><td>watermarker offset x in target bitstream</td></tr><tr><td>oy</td><td>watermarker offset y in target bitstream</td></tr><tr><td>prefix</td><td>prefix info in front of the number watermarker</td></tr><tr><td>s</td><td>show the picture frame by frame, q: exit ; space : next frame</td></tr><tr><td>th</td><td>watermarker text height</td></tr></tbody></table><h2><span id="talk-is-cheap-show-me-the-code">Talk is cheap, show me the code</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> sp</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line">args = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_args_parse</span>():</span></span><br><span class="line">    parser = argparse.ArgumentParser(<span class="string">&#x27;传入参数：***.py&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-iw&#x27;</span>,<span class="string">&#x27;--width&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">1920</span>, <span class="built_in">help</span>=<span class="string">&quot;input frame width&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-ih&#x27;</span>,<span class="string">&#x27;--height&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">1088</span>, <span class="built_in">help</span>=<span class="string">&quot;input frame height&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-ox&#x27;</span>,<span class="string">&#x27;--offset_x&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">64</span>, <span class="built_in">help</span>=<span class="string">&quot;watermark start offset x&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-oy&#x27;</span>,<span class="string">&#x27;--offset_y&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">128</span>, <span class="built_in">help</span>=<span class="string">&quot;watermark start offset y&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-i&#x27;</span>,<span class="string">&#x27;--input&#x27;</span>, default=<span class="string">&quot;input.yuv&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-o&#x27;</span>,<span class="string">&#x27;--output&#x27;</span>, default=<span class="string">&quot;out.yuv&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-th&#x27;</span>,<span class="string">&#x27;--text_height&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">100</span>, <span class="built_in">help</span>=<span class="string">&quot;watermark text height&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-prefix&#x27;</span>,<span class="string">&#x27;--prefix&#x27;</span>, default=<span class="string">&quot;&quot;</span>, <span class="built_in">help</span>=<span class="string">&quot;watermarker prefix, such as AMD-0&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-s&#x27;</span>,<span class="string">&#x27;--show&#x27;</span>,<span class="built_in">help</span>=<span class="string">&quot;show image one by one&quot;</span>, action=<span class="string">&quot;store_true&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-n&#x27;</span>,<span class="string">&#x27;--frame_number&#x27;</span>,<span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">0</span>,<span class="built_in">help</span>=<span class="string">&quot;handle n frames&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> parser</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_watermark_to_frame</span>(<span class="params">frame, txt, text_height,offset</span>):</span></span><br><span class="line">    ft = cv2.freetype.createFreeType2()</span><br><span class="line">    ft.loadFontData(fontFileName=<span class="string">&#x27;UbuntuMono-Regular.ttf&#x27;</span>,</span><br><span class="line">                    <span class="built_in">id</span>=<span class="number">0</span>)</span><br><span class="line">    ft_size, baseline= ft.getTextSize(txt, text_height, -<span class="number">1</span>)</span><br><span class="line">    <span class="comment">#print(&quot;Msg: &#123;0&#125; &#123;1&#125; dat: &#123;2&#125;&quot;.format(ft_size, baseline, txt))</span></span><br><span class="line">    magin_pixel = <span class="number">5</span></span><br><span class="line">    rectangle_start = (offset[<span class="number">0</span>] + baseline - magin_pixel, offset[<span class="number">1</span>] - ft_size[<span class="number">1</span>] - baseline - magin_pixel )</span><br><span class="line">    rectangle_end = (offset[<span class="number">0</span>] + ft_size[<span class="number">0</span>] + magin_pixel ,  offset[<span class="number">1</span>] + baseline + magin_pixel) <span class="comment">#</span></span><br><span class="line">    <span class="comment">#print(&quot;start: &#123;0&#125; -&gt; end: &#123;1&#125;&quot;.format(rectangle_start, rectangle_end))</span></span><br><span class="line">    cv2.rectangle(frame,</span><br><span class="line">        rectangle_start,</span><br><span class="line">        rectangle_end,</span><br><span class="line">        (<span class="number">250</span>,<span class="number">240</span>,<span class="number">240</span>),</span><br><span class="line">        -<span class="number">1</span></span><br><span class="line">        )</span><br><span class="line">    ft.putText(img=frame,</span><br><span class="line">            text=txt,</span><br><span class="line">            org=(offset[<span class="number">0</span>], offset[<span class="number">1</span>]),</span><br><span class="line">            fontHeight=text_height,</span><br><span class="line">            color=(<span class="number">255</span>,  <span class="number">10</span>, <span class="number">10</span>),</span><br><span class="line">            thickness=-<span class="number">1</span>,</span><br><span class="line">            line_type=cv2.LINE_AA,</span><br><span class="line">            bottomLeftOrigin=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> frame</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    args = get_args_parse().parse_args()</span><br><span class="line">    <span class="built_in">print</span>(args)</span><br><span class="line">    <span class="built_in">print</span>(args.width)</span><br><span class="line">    <span class="comment">#get_watermark(&quot;temp&quot;)</span></span><br><span class="line">    cap = cv2.VideoCapture(args.<span class="built_in">input</span>)</span><br><span class="line">    total_frames = <span class="built_in">int</span>( cap.get(cv2.CAP_PROP_FRAME_COUNT) )</span><br><span class="line">    input_width = <span class="built_in">int</span>(cap.get(<span class="number">3</span>))</span><br><span class="line">    input_height = <span class="built_in">int</span>(cap.get(<span class="number">4</span>))</span><br><span class="line">    video_info = <span class="string">&#x27;video : &#123;0&#125;x&#123;1&#125; frames:&#123;2&#125;&#x27;</span>.<span class="built_in">format</span>(input_width, input_height, total_frames)</span><br><span class="line">    <span class="built_in">print</span>(video_info)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;total frames :&quot;</span>, total_frames)</span><br><span class="line"></span><br><span class="line">    fourcc = cv2.VideoWriter_fourcc(*<span class="string">&#x27;X264&#x27;</span>)</span><br><span class="line">    video_output = cv2.VideoWriter(args.output, fourcc, <span class="number">30.0</span>, (input_width, input_height))</span><br><span class="line">    <span class="keyword">if</span> args.frame_number &gt; <span class="number">0</span> <span class="keyword">and</span> args.frame_number &lt; total_frames:</span><br><span class="line">        total_frames = args.frame_number</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;processing frame number is : &quot;</span>, total_frames)</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(total_frames):</span><br><span class="line">        <span class="comment"># set frame position</span></span><br><span class="line">        <span class="comment">#cap.set(cv2.CAP_PROP_POS_FRAMES,index)</span></span><br><span class="line">        ret, frame = cap.read()</span><br><span class="line">        marker_text = <span class="string">&#x27;&#123;0&#125;&#123;1:0&gt;2&#125;&#x27;</span>.<span class="built_in">format</span>(args.prefix, index)</span><br><span class="line">        add_watermark_to_frame(frame, marker_text,args.text_height, (args.offset_x, args.offset_y))</span><br><span class="line">        video_output.write(frame)</span><br><span class="line">        <span class="keyword">if</span> args.show:</span><br><span class="line">            cv2.imshow(<span class="string">&quot;Video&quot;</span>, frame)</span><br><span class="line">            <span class="keyword">if</span> cv2.waitKey(<span class="number">5000</span>) &amp; <span class="number">0xFF</span> == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    cap.release()</span><br><span class="line">    video_output.release()</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Index:&lt;/p&gt;
&lt;!-- toc --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#usage&quot;&gt;Usage&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#read-and-write-bitstream-by-frames-with-opencv2&quot;&gt;read and </summary>
      
    
    
    
    
    <category term="Python" scheme="http://vball.fun/tags/Python/"/>
    
    <category term="Opencv" scheme="http://vball.fun/tags/Opencv/"/>
    
    <category term="Freetype" scheme="http://vball.fun/tags/Freetype/"/>
    
    <category term="Font" scheme="http://vball.fun/tags/Font/"/>
    
  </entry>
  
  <entry>
    <title>generate different yuv in different formats</title>
    <link href="http://vball.fun/2021/11/16/ffmpeg-generate-yuv-format/"/>
    <id>http://vball.fun/2021/11/16/ffmpeg-generate-yuv-format/</id>
    <published>2021-11-16T07:44:02.000Z</published>
    <updated>2021-12-08T08:49:11.868Z</updated>
    
    <content type="html"><![CDATA[<p>Index:</p><!-- toc --><ul><li><a href="#ffmpeg-convet-basic-usage">FFMPEG convet basic usage</a><ul><li><a href="#show-all-support-formats-by-ffmpeg">Show all support formats by ffmpeg</a></li><li><a href="#ffmpeg-convert-mp4-to-yuv-with-resolution-and-format">FFMPEG convert mp4 to yuv with resolution and format</a></li><li><a href="#convert-yuv-to-h264mp4">Convert yuv to H264/mp4</a></li></ul></li><li><a href="#how-to-generate-rgb444-fp16-file">How to generate RGB444 FP16 file</a><ul><li><a href="#install-ffmpeg-and-imagemagick">Install ffmpeg and imagemagick.</a></li><li><a href="#first-convert-the-image-to-rgb-format-from-yuv420">First convert the image to RGB format from YUV420.</a></li><li><a href="#convert-more-formats">Convert more formats</a></li><li><a href="#display-the-rgba-fp16-image">Display the RGBA FP16 image</a></li></ul></li><li><a href="#my-work-flow-to-generate-custom-yuv-formats">My work flow to generate custom yuv formats</a></li><li><a href="#yuv-view-tools">YUV view tools</a></li></ul><!-- tocstop --><p>ffmpeg can be used to generate many kinds of format. just enum it and record it.</p><h1><span id="ffmpeg-convet-basic-usage">FFMPEG convet basic usage</span></h1><h2><span id="show-all-support-formats-by-ffmpeg">Show all support formats by ffmpeg</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -pix_fmts</span><br></pre></td></tr></table></figure><p>use “-pix_fmt “ to define the output formats in ffmpeg</p><table><thead><tr><th>name</th><th>format</th><th>bit depth</th><th>Note</th></tr></thead><tbody><tr><td>yuv420p</td><td>YUV420</td><td>8</td><td>NV12</td></tr><tr><td>yuv420p16le</td><td>YUV420</td><td>10</td><td>P0101?</td></tr><tr><td>yuv444p</td><td>YUV444</td><td>8</td><td></td></tr><tr><td>yuv444p10le</td><td>YUV444</td><td>10</td><td></td></tr></tbody></table><h2><span id="ffmpeg-convert-mp4-to-yuv-with-resolution-and-format">FFMPEG convert mp4 to yuv with resolution and format</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -y -i <span class="variable">$&#123;file_name&#125;</span>_<span class="variable">$&#123;in_res&#125;</span>.mp4 -pix_fmt yuv420p -s <span class="variable">$out_res</span> <span class="variable">$&#123;file_name&#125;</span>_<span class="variable">$&#123;out_res&#125;</span>.yuv</span><br></pre></td></tr></table></figure><h2><span id="convert-yuv-to-h264mp4">Convert yuv to H264/mp4</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -f rawvideo -pix_fmt yuv420p -s:v 720x480 -r 25 -i Mix_BostonHarbor_MainStreet_GrandBendPatio_720x480.yuv -c:v libx264 output.mp4</span><br></pre></td></tr></table></figure><h1><span id="how-to-generate-rgb444-fp16-file">How to generate RGB444 FP16 file</span></h1><p>Here is the guideline from Osman</p><h2><span id="install-ffmpeg-and-imagemagick">Install ffmpeg and imagemagick.</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install imagemagick ffmpeg</span><br></pre></td></tr></table></figure><h2><span id="first-convert-the-image-to-rgb-format-from-yuv420">First convert the image to RGB format from YUV420.</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -pix_fmt yuv420p -s 1920x1080 -i BostonHarbor_1920x1080.yuv -frames:v 10 -pix_fmt rgb48le BostonHarbor_1920x1080-rgb48le.rgb</span><br></pre></td></tr></table></figure><h2><span id="convert-more-formats">Convert more formats</span></h2><p>Then use the following imagemagick command to convert from RGB to RGBA FP16 format.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -size 1920x1080 -depth 16 -colorspace rgb rgb:BostonHarbor_1920x1080-rgb48le.rgb -size 1920x1080 -depth 16 -define quantum:format=floating-point -colorspace rgb rgba:BostonHarbor_1920x1080-rgbafp16.rgb</span><br></pre></td></tr></table></figure><h2><span id="display-the-rgba-fp16-image">Display the RGBA FP16 image</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display -size 1920x1080 -depth 16 -define quantum:format=floating-point -endian lsb rgba:BostonHarbor_1920x1080-rgbafp16.rgb</span><br></pre></td></tr></table></figure><h1><span id="my-work-flow-to-generate-custom-yuv-formats">My work flow to generate custom yuv formats</span></h1><blockquote><ol><li>Get some reference yuv files with ffmpeg or from web</li><li>Manual split and combine your custom YUV files with split\cat&gt;&gt; commond.</li><li>Encode your custom yuv to h264 with FFMPEG</li><li>Add number watermarker to your custom yuv file</li><li>Decode your custom bitstreams to different resolutions and formats.</li></ol></blockquote><h1><span id="yuv-view-tools">YUV view tools</span></h1><blockquote><p>vooya<br>7yuv</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Index:&lt;/p&gt;
&lt;!-- toc --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#ffmpeg-convet-basic-usage&quot;&gt;FFMPEG convet basic usage&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#show-all-support-f</summary>
      
    
    
    
    
    <category term="FFMPEG" scheme="http://vball.fun/tags/FFMPEG/"/>
    
    <category term="H264" scheme="http://vball.fun/tags/H264/"/>
    
    <category term="YUV" scheme="http://vball.fun/tags/YUV/"/>
    
  </entry>
  
  <entry>
    <title>Zhuyin Pinyin 拼音注音編輯器</title>
    <link href="http://vball.fun/2021/11/02/toneoz/"/>
    <id>http://vball.fun/2021/11/02/toneoz/</id>
    <published>2021-11-02T08:37:22.000Z</published>
    <updated>2021-12-08T08:49:11.892Z</updated>
    
    <content type="html"><![CDATA[<p>好东西记录下来，并且安利一下。如果有人能看到的话。</p><h1><span id="遇到了一个好东西刚好给孩子学习拼音使用toneoz">遇到了一个好东西，刚好给孩子学习拼音使用–toneoz</span></h1><p>作者实现方法比较有意思，直接使用字体来实现注音标注，于是这个就可以在任意一个编辑器上使用，如果你的应用支持字体更换，那应用范围就更广了。</p><blockquote><p><a href="https://toneoz.com/">https://toneoz.com/</a><br><img src="ksnip_20211103-154448.png"></p></blockquote><h2><span id="字体安装">字体安装</span></h2><p><a href="https://github.com/jeffreyxuan/toneoz-font-pinyin-kai">github</a>上边直接下载安装到系统字体库即可。。。大神，跪了</p><h2><span id="在线选音编辑器">在线选音编辑器</span></h2><p><a href="https://toneoz.com/ime">https://toneoz.com/ime</a></p><h2><span id="多音字处理">多音字处理</span></h2><p>考虑到中文存在多音字问题，作者提供了一个选音编辑器，可以非常方便的支持多音字的标注选择，选择完成后可以直接复制到word或者导出成图片。<br><img src="ksnip_20211103-154040.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;好东西记录下来，并且安利一下。如果有人能看到的话。&lt;/p&gt;
&lt;h1&gt;&lt;span id=&quot;遇到了一个好东西刚好给孩子学习拼音使用toneoz&quot;&gt;遇到了一个好东西，刚好给孩子学习拼音使用–toneoz&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;作者实现方法比较有意思，直接使用字体来实现注音标</summary>
      
    
    
    
    
    <category term="toneoz" scheme="http://vball.fun/tags/toneoz/"/>
    
    <category term="pinyin" scheme="http://vball.fun/tags/pinyin/"/>
    
  </entry>
  
  <entry>
    <title>COVID-1984 is ready, will infect all the world, no one can survive</title>
    <link href="http://vball.fun/2021/10/27/1984/"/>
    <id>http://vball.fun/2021/10/27/1984/</id>
    <published>2021-10-27T07:56:47.000Z</published>
    <updated>2021-12-08T08:49:11.864Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="covid-1984-is-ready-will-infect-all-the-world-no-one-can-survive">COVID-1984 is ready, will infect all the world, no one can survive!</span></h1><p><img src="ksnip_20211027-161028.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;covid-1984-is-ready-will-infect-all-the-world-no-one-can-survive&quot;&gt;COVID-1984 is ready, will infect all the world, no one can s</summary>
      
    
    
    
    
    <category term="1984" scheme="http://vball.fun/tags/1984/"/>
    
    <category term="Shit" scheme="http://vball.fun/tags/Shit/"/>
    
  </entry>
  
  <entry>
    <title>csdn blog export / 博客导出</title>
    <link href="http://vball.fun/2021/10/27/csdn-export/"/>
    <id>http://vball.fun/2021/10/27/csdn-export/</id>
    <published>2021-10-27T06:46:42.000Z</published>
    <updated>2021-12-08T08:49:11.868Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="csdn垃圾">CSDN垃圾</span></h2><p>CSDN 垃圾不用多说了，以前只是看不到别人的博客，不过还有谷歌可以弥补，不过最近朋友和我说你的几个文章怎么变成vip独享了。。。我突然发现我的烂文字竟然还被CSDN偷偷摸摸对部分用户VIP，汗颜。。导出来算了</p><h2><span id="导出到hexo">导出到hexo</span></h2><p>考虑导出到hexo，搜罗了半天，没有合适的工具和代码，就自己写一个吧，需要解决三个问题</p><ol><li>博客列表获取</li><li>博客文章内容转换成markdown</li><li>导出配套的图片数据</li></ol><h3><span id="博客列表获取">博客列表获取</span></h3><h4><span id="csdn-文章列表接口-httpsblogcsdnnetgodvmxiarticlelistid">CSDN 文章列表接口： </span></h4><p>获得后从html中提取对应的xpath节点，使用lxml提取出来博客的目录link id.<br><img src="ksnip_20211027-145628.png" alt="获取节点的xpath"><br>然后拼接文章接口获取到文章链接： <a href="https://blog.csdn.net/godvmxi/article/details/%7Blink">https://blog.csdn.net/godvmxi/article/details/{link</a> id}<br>二话不说贴代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> locale</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> pprint</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sys.getfilesystemencoding())</span><br><span class="line"><span class="built_in">print</span>(locale.getpreferredencoding())</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_acticle_list</span>(<span class="params">user, page_start, page_end</span>):</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.81 Safari/537.36&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    link_list = []</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(page_start), <span class="built_in">int</span>(page_end)+<span class="number">1</span> ):</span><br><span class="line">        <span class="built_in">print</span>(index)</span><br><span class="line">        base_url= <span class="string">&quot;https://blog.csdn.net/godvmxi/article/list/%s&quot;</span>%index</span><br><span class="line">        res = requests.get(url = base_url,headers=headers)</span><br><span class="line">        <span class="built_in">print</span>(res.url)</span><br><span class="line">        <span class="built_in">print</span>(res.status_code)</span><br><span class="line"></span><br><span class="line">        page_html = etree.HTML(res.content)</span><br><span class="line">        article_list = page_html.xpath(<span class="string">&#x27;//*[@id=&quot;articleMeList-blog&quot;]/div[2]&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">len</span>(article_list))</span><br><span class="line">        <span class="keyword">for</span> obj <span class="keyword">in</span> article_list:</span><br><span class="line">            <span class="built_in">id</span> =  obj.attrib[<span class="string">&quot;data-articleid&quot;</span>]</span><br><span class="line">            link = <span class="string">&quot;https://blog.csdn.net/godvmxi/article/details/%s\n&quot;</span>%<span class="built_in">id</span></span><br><span class="line">            link_list.append(link)</span><br><span class="line">    pprint.pprint(link_list)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;link.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)  <span class="keyword">as</span> fd:</span><br><span class="line">        fd.writelines(link_list)</span><br><span class="line">    <span class="comment">#print(len(link_list))</span></span><br><span class="line">    <span class="keyword">return</span> link_list</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">down_load_articals</span>(<span class="params">link_list</span>):</span></span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> link_list:</span><br><span class="line">        link = link.replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Download : %s&quot;</span>%link)</span><br><span class="line">        file_name = link.split(<span class="string">&quot;/&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;target file name-&gt;%s&quot;</span>%file_name)</span><br><span class="line">        cmd = <span class="string">&quot;clean-mark %s -o download/%s&quot;</span>%(link,file_name)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;cmd-&gt;   %s&quot;</span>%cmd)</span><br><span class="line">        os.system(cmd)</span><br><span class="line">        time.sleep(<span class="number">5</span>)</span><br><span class="line">        <span class="comment">#break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span> :</span><br><span class="line">    user= sys.argv[<span class="number">1</span>]</span><br><span class="line">    page_start = sys.argv[<span class="number">2</span>]</span><br><span class="line">    page_end  = sys.argv[<span class="number">3</span>]</span><br><span class="line">    link_list  = get_acticle_list(user, page_start, page_end)</span><br><span class="line">    down_load_articals(link_list)</span><br></pre></td></tr></table></figure><h3><span id="使用clean-mark-将网页转换成markdown">使用clean-mark  将网页转换成markdown</span></h3><ol><li>安装clean-mark<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g  clean-mark</span><br></pre></td></tr></table></figure>2: 网页转换<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clean-mark <span class="variable">$&#123;link&#125;</span> -o download/target.md<span class="string">&quot;</span></span><br></pre></td></tr></table></figure></li></ol><h2><span id="处理markdown中的图片">处理markdown中的图片</span></h2><p>因为图片都在csdn服务器或者其他第三方服务器，这里需要处理脚本，把对应的图片下载下来。 解析，上代码了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> locale</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> pprint</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_image_line</span>(<span class="params">line, img_dir, index</span>):</span></span><br><span class="line">    line = line.replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;![](&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;)&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;will handle line -&gt; &quot;</span> + line)</span><br><span class="line">    link_name = line</span><br><span class="line">    file_name = line.split(<span class="string">&quot;/&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">    </span><br><span class="line">    post_fix = file_name.split(<span class="string">&quot;.&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(post_fix) &gt; <span class="number">0</span>:</span><br><span class="line">        post_fix = post_fix.lower()</span><br><span class="line">    final_file_name = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;link file_name -&gt; &quot;</span> + file_name + <span class="string">&quot;  post-&gt;&quot;</span> + post_fix + <span class="string">&quot;&lt;-&quot;</span>)</span><br><span class="line">    cmd = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> line.find(<span class="string">&quot;img-blog&quot;</span>) &gt; <span class="number">0</span>:</span><br><span class="line">        link_name = link_name.split(<span class="string">&quot;?&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">        file_name = link_name.split(<span class="string">&quot;/&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line">        target_file_name = img_dir + <span class="string">&quot;/&quot;</span> + file_name</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;csdn img link name:&quot;</span> + link_name)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;csdn file name : &quot;</span> + file_name)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;target_file_name: &quot;</span> + target_file_name)</span><br><span class="line">        cmd=<span class="string">&quot;wget %s -O %s&quot;</span>%(link_name, target_file_name)</span><br><span class="line">    <span class="keyword">elif</span> post_fix <span class="keyword">in</span> [<span class="string">&quot;png&quot;</span>, <span class="string">&#x27;jpg&#x27;</span>, <span class="string">&#x27;jpeg&#x27;</span>, <span class="string">&quot;gif&quot;</span>]:</span><br><span class="line">        target_file_name = img_dir + <span class="string">&quot;/&quot;</span> + file_name</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;##normal target file : &quot;</span>+ target_file_name)</span><br><span class="line">        cmd =  <span class="string">&quot;wget %s -O %s&quot;</span>%(link_name, target_file_name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;downlink is not support&quot;</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;will run cmd: &quot;</span> + cmd)</span><br><span class="line">    os.system(cmd)</span><br><span class="line">    line = <span class="string">&quot;![](%s)\n&quot;</span>%file_name</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> line</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_origin_markdown</span>(<span class="params">source_dir, file_name, target_dir, index</span>):</span></span><br><span class="line">    <span class="comment">#img_dir = target_dir  + &quot;/csdn_&quot; + file_name.replace(&quot;.md&quot;, &quot;&quot;)</span></span><br><span class="line">    <span class="comment">#target_file = target_dir + &quot;/csdn_&quot; + file_name</span></span><br><span class="line">    img_dir = <span class="string">&quot;%s/z_csdn_%03d_%s&quot;</span>%(target_dir, index, file_name.replace(<span class="string">&quot;.md&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    target_file = <span class="string">&quot;%s/z_csdn_%03d_%s&quot;</span>%(target_dir, index, file_name)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;target file   -&gt; &quot;</span> + target_file)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;target img dir-&gt; &quot;</span> + img_dir)</span><br><span class="line">    <span class="comment">#os.remove(target_file)</span></span><br><span class="line">    shutil.rmtree(path = img_dir,ignore_errors=<span class="literal">True</span>)</span><br><span class="line">    os.mkdir(img_dir)</span><br><span class="line">    out_lines = []</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(source_dir + <span class="string">&quot;/&quot;</span> +file_name, <span class="string">&quot;r&quot;</span>)  <span class="keyword">as</span> fd:</span><br><span class="line">        lines = fd.readlines()</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">            <span class="keyword">if</span> line.startswith(<span class="string">&quot;link&quot;</span>):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> line.startswith(<span class="string">&quot;keywords:&quot;</span>):</span><br><span class="line">                line = <span class="string">&quot;tags: CSDN\n&quot;</span></span><br><span class="line">            <span class="keyword">if</span> line.startswith(<span class="string">&quot;![]&quot;</span>) : </span><br><span class="line">                line = handle_image_line(line, img_dir, index) + <span class="string">&quot;\n&quot;</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;img line : &quot;</span> + line)</span><br><span class="line">            out_lines.append(line)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(out_lines) &gt; <span class="number">0</span> :</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(target_file, <span class="string">&quot;w+&quot;</span>)  <span class="keyword">as</span> fd:</span><br><span class="line">            fd.writelines(out_lines)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    source_dir = sys.argv[<span class="number">1</span>]</span><br><span class="line">    target_dir = sys.argv[<span class="number">2</span>]</span><br><span class="line">    start_files = <span class="built_in">int</span>(sys.argv[<span class="number">3</span>])</span><br><span class="line">    end_files = <span class="built_in">int</span>(sys.argv[<span class="number">4</span>])</span><br><span class="line">    source_file_list = os.listdir(source_dir)</span><br><span class="line">    <span class="comment">#pprint.pprint(source_file_list)</span></span><br><span class="line">    index = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> source_file_list :</span><br><span class="line">        <span class="keyword">if</span> index &gt; end_files:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;########################## handle file -&gt; start: %3d end:%3d index:%3d file: %s&quot;</span>%(start_files,end_files, index, file))</span><br><span class="line">        <span class="keyword">if</span> index &gt;= start_files:</span><br><span class="line">            process_origin_markdown(source_dir,  file, target_dir,index)</span><br><span class="line">        index  = index + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3><span id="手动处理部分冲突问题">手动处理部分冲突问题</span></h3><p>因为hexo对部分的关键词不好，这里需要对部分关键词进行修改，比如：</p><blockquote><p>link 删掉即可<br>description , 手动截断或者删除特殊字符</p></blockquote><p>脚本提供了调试方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python3 get_img.py  download/  /srv/chia/disk/1/work/code/github/blog/<span class="built_in">source</span>/_posts/ 74 90</span><br><span class="line"></span><br><span class="line">arg1： 原始markdown文件位置</span><br><span class="line">arg2： hexo博客陌路</span><br><span class="line">arg3： 起始文件index</span><br><span class="line">arg4： 结束文件index</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;csdn垃圾&quot;&gt;CSDN垃圾&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;CSDN 垃圾不用多说了，以前只是看不到别人的博客，不过还有谷歌可以弥补，不过最近朋友和我说你的几个文章怎么变成vip独享了。。。我突然发现我的烂文字竟然还被CSDN偷偷摸摸对部分用户VIP，汗</summary>
      
    
    
    
    
    <category term="Python" scheme="http://vball.fun/tags/Python/"/>
    
    <category term="CSDN" scheme="http://vball.fun/tags/CSDN/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://vball.fun/2021/10/25/hello-world/"/>
    <id>http://vball.fun/2021/10/25/hello-world/</id>
    <published>2021-10-25T12:46:25.000Z</published>
    <updated>2021-12-08T08:49:11.892Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2><span id="quick-start">Quick Start</span></h2><h3><span id="create-a-new-post">Create a new post</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3><span id="run-server">Run server</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3><span id="generate-static-files">Generate static files</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3><span id="deploy-to-remote-sites">Deploy to remote sites</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mount samba with current user</title>
    <link href="http://vball.fun/2021/10/25/mount-samba-with-user/"/>
    <id>http://vball.fun/2021/10/25/mount-samba-with-user/</id>
    <published>2021-10-25T07:35:08.000Z</published>
    <updated>2021-12-08T08:49:11.892Z</updated>
    
    <content type="html"><![CDATA[<p>When you want to mount a samba to modify the file , there are always some issues :</p><ul><li>all kind of file permission issues</li><li>how to auto mount samba</li><li>Samba server setting</li></ul><h2><span id="file-permission">file permission</span></h2><p>gid=1000,uid=1000,<code>you can use id command to find your current user info </code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ id</span><br><span class="line">uid=1000(user) gid=1000(user) groups=1000(user),4(adm),</span><br><span class="line">24(cdrom),27(sudo),30(dip),46(plugdev),112(lpadmin),128(sambashare)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="how-to-auto-mount-samba">how to auto mount samba</span></h2><p>here is my /etc/fstab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//dbs-04/data /nfs/data/ cifs credentials=/home/.smbcredentials,uid=1000,gid=1000 0 0</span><br><span class="line">//dbs-04/home /nfs/home/ cifs credentials=/home/.smbcredentials,uid=1000,gid=1000 0 0</span><br></pre></td></tr></table></figure><p>the client user info is in /home/user/.smbcredentials,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat /home/user/.smbcredentials</span><br><span class="line">username=smbuser</span><br><span class="line">password=smbuserpasswd</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="my-server-setting">my server setting</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[data]</span><br><span class="line">    comment = user</span><br><span class="line">    path = /data/user</span><br><span class="line">    browseable = yes</span><br><span class="line">    writeable = yes</span><br><span class="line">    guest ok = yes</span><br><span class="line">    force user = jbright</span><br></pre></td></tr></table></figure><p>remember add your samba user into your server</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;When you want to mount a samba to modify the file , there are always some issues :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;all kind of file permission issues&lt;/li&gt;
&lt;</summary>
      
    
    
    
    
    <category term="Linux" scheme="http://vball.fun/tags/Linux/"/>
    
    <category term="Samba" scheme="http://vball.fun/tags/Samba/"/>
    
  </entry>
  
  <entry>
    <title>老头乐 Batocera plus 2.0 精美界面-中文64G复古游戏包-by游戏方块 + 飞行模拟器</title>
    <link href="http://vball.fun/2021/10/25/game/betocera_all_pc/"/>
    <id>http://vball.fun/2021/10/25/game/betocera_all_pc/</id>
    <published>2021-10-25T02:44:42.000Z</published>
    <updated>2021-12-08T08:49:11.868Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="最近又燃起了玩老头乐的想法">最近又燃起了玩老头乐的想法</span></h2><p>于是就有了这篇垃圾</p><h2><span id="batocera-plus-20-精美界面-中文64g复古游戏包-by游戏方块64位电脑">Batocera plus 2.0 精美界面-中文64G复古游戏包-by游戏方块（64位电脑）</span></h2><p>Batocera plus 2.0 精美界面-中文64G复古游戏包-by游戏方块（64位电脑)–<a href="https://www.bilibili.com/video/BV1oZ4y1G7SX?from=search&seid=17388397281457202904">游戏方块</a><br><a href="https://batocera.org/">About Batocera.linux</a><br><img src="ksnip_20211025-104753.png" alt="游戏方块"></p><h2><span id="凤凰模拟器">凤凰模拟器</span></h2><p><img src="20201121221905300.png" alt="凤凰模拟器"></p><h2><span id="无聊就玩老头乐">无聊就玩老头乐</span></h2><p>既然是老头乐，伴随了童年的接机+小霸王肯定是必须，之前用了905机顶盒改装的游戏盒子（各种坑，什么tf卡丢失，数据丢失，无法启动各种问题），但是麻，又想玩飞行模拟器，干脆二合一算了，果断换回了Batocera这款神器，但是你让我重新从零开始搭建一套游戏包，还是不符合老头乐的风格。</p><h2><span id="batocera">Batocera</span></h2><h2><span id="飞行模拟器">飞行模拟器</span></h2><h3><span id="硬件方案">硬件方案</span></h3><table><thead><tr><th>设备</th><th>来源</th><th>价格</th><th>是否必须</th></tr></thead><tbody><tr><td>H61主板</td><td>海鲜市场</td><td>80</td><td>是</td></tr><tr><td>i3 3220</td><td>海鲜市场</td><td>60</td><td>是</td></tr><tr><td>DDR3 4G</td><td>主板赠送</td><td>0</td><td>是</td></tr><tr><td>风扇</td><td>主办赠送</td><td>0</td><td>是</td></tr><tr><td>游戏硬盘</td><td>海鲜市场</td><td>20</td><td>是</td></tr><tr><td>VGA转HDMI</td><td>海鲜市场</td><td>20</td><td>非</td></tr><tr><td>以下是飞行模拟器，非必须</td><td>—-</td><td>—-</td><td>—-</td></tr><tr><td>模拟器硬盘</td><td>海鲜市场</td><td>20</td><td>是</td></tr><tr><td>模拟器手柄MC6C</td><td>海鲜市场</td><td>80</td><td>是</td></tr><tr><td>USB加密狗</td><td>海鲜市场</td><td>20</td><td>是</td></tr></tbody></table><h2><span id="batocera-下载">Batocera 下载</span></h2><h3><span id></span></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">magnet:?xt=urn:btih:CE3792AEED1D44CA57897C8AAC86883A6A42345B=</span><br></pre></td></tr></table></figure><h3><span id="55寸大屏玩游戏真爽">55寸大屏玩游戏真爽</span></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;最近又燃起了玩老头乐的想法&quot;&gt;最近又燃起了玩老头乐的想法&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;于是就有了这篇垃圾&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;batocera-plus-20-精美界面-中文64g复古游戏包-by游戏方块64位电脑&quot;&gt;Batocera </summary>
      
    
    
    
    <category term="game" scheme="http://vball.fun/categories/game/"/>
    
    
    <category term="game" scheme="http://vball.fun/tags/game/"/>
    
    <category term="daily" scheme="http://vball.fun/tags/daily/"/>
    
  </entry>
  
  <entry>
    <title>How to view STL under GDB</title>
    <link href="http://vball.fun/2020/08/13/view-stl-under-gdb/"/>
    <id>http://vball.fun/2020/08/13/view-stl-under-gdb/</id>
    <published>2020-08-13T12:46:25.000Z</published>
    <updated>2021-12-08T08:49:11.900Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="there-are-two-methods-to-view-stl-types-under-gdb">There are two methods to view STL types under GDB.</span></h1><p>From Zhangxu </p><h2><span id="method-1-gdb-stl-views">Method 1: gdb-stl-views</span></h2><p>gdb-stl-views is a set of GDB macros that can display the contents of many STL containers: list, vector, map, multimap, set, multiset, dequeue, stack, queue, priority_queue, bitset, string, and widestring.</p><ul><li>You can download it <a href="https://sourceware.org/gdb/wiki/STLSupport?action=AttachFile&do=view&target=stl-views-1.0.3.gdb">LINK1</a> <a href="http://www.yolinux.com/TUTORIALS/src/dbinit_stl_views-1.03.txt">LINK2</a> or at end of file <a href="#db_init_stl_view">LINK</a></li><li>Tutorials and an alternative download are hosted at here.</li></ul><h3><span id="enable-marco">Enable Marco</span></h3><p>Two ways to enable this Marco:</p><ul><li>copy the content in stl-views-1.0.3.gdb to to ~/.gdbinit</li><li>source path/to/stl-views-1.0.3.gdb in gdb anytime before you want to use it. In this way you will need to source it every time after open gdb</li></ul><p>Here is an example after Macro is loaded:</p><p><img src="image2020-8-13_17-4-3.png" alt="图片pic1"></p><h2><span id="method-2-python-printer">Method 2: Python printer</span></h2><p>GDB7.0 or higer version include support for writing pretty-printers in Python. </p><h3><span id="check-out-the-latest-python-libstdc-printers-to-a-place-on-your-machine">Check-out the latest Python libstdc++ printers to a place on your machine</span></h3><p>In a local directory, clone gcc code, Then you can find SomeLocalDir/gcc/libstdc++-v3/python/libstdcxx/v6/printers.py</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gcc.gnu.org/git/gcc.git  SomeLocalDir</span><br></pre></td></tr></table></figure><h3><span id="add-the-following-to-your-~gdbinit">Add the following to your ~/.gdbinit.</span></h3><p>The path needs to match where the python module above was checked-out. So if checked out to: SomeLocalDir, the path would be as written in the example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.insert(<span class="number">0</span>, <span class="string">&#x27;SomeLocalDir/gcc/libstdc++-v3/python&#x27;</span>)</span><br><span class="line"><span class="keyword">from</span> libstdcxx.v6.printers <span class="keyword">import</span> register_libstdcxx_printers</span><br><span class="line">register_libstdcxx_printers (<span class="literal">None</span>)</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>Once loaded, STL classes that the printers support should printed in a more human-readable format. To print the classes in the old style, use the /r (raw) switch in the print command (i.e., print /r foo). This will print the classes as if the Python pretty-printers were not loaded.</p><p>Here is an example after the Python printer is loaded:</p><p><img src="image2020-8-13_16-56-4.png" alt="图片pic1"></p><p>Reference Links<br><a href="https://sourceware.org/gdb/wiki/STLSupport">https://sourceware.org/gdb/wiki/STLSupport</a></p><p><a href="https://gcc.gnu.org/git.html">https://gcc.gnu.org/git.html</a></p><p>some links in Chinese(mainly translation of above link): </p><p><a href="https://www.xuebuyuan.com/817423.html">https://www.xuebuyuan.com/817423.html</a></p><p><a href="https://www.cnblogs.com/yylingyao/p/6747589.html">https://www.cnblogs.com/yylingyao/p/6747589.html</a></p><h3><span id="db_init_stl_view">db_init_stl_view</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#                                                                                                        </span></span><br><span class="line"><span class="comment">#   STL GDB evaluators/views/utilities - 1.03</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   The new GDB commands:                                                         </span></span><br><span class="line"><span class="comment">#     are entirely non instrumental                                             </span></span><br><span class="line"><span class="comment">#     do not depend on any &quot;inline&quot;(s) - e.g. size(), [], etc</span></span><br><span class="line"><span class="comment">#       are extremely tolerant to debugger settings</span></span><br><span class="line"><span class="comment">#                                                                                 </span></span><br><span class="line"><span class="comment">#   This file should be &quot;included&quot; in .gdbinit as following:</span></span><br><span class="line"><span class="comment">#   source stl-views.gdb or just paste it into your .gdbinit file</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   The following STL containers are currently supported:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#       std::vector&lt;T&gt; -- via pvector command</span></span><br><span class="line"><span class="comment">#       std::list&lt;T&gt; -- via plist or plist_member command</span></span><br><span class="line"><span class="comment">#       std::map&lt;T,T&gt; -- via pmap or pmap_member command</span></span><br><span class="line"><span class="comment">#       std::multimap&lt;T,T&gt; -- via pmap or pmap_member command</span></span><br><span class="line"><span class="comment">#       std::set&lt;T&gt; -- via pset command</span></span><br><span class="line"><span class="comment">#       std::multiset&lt;T&gt; -- via pset command</span></span><br><span class="line"><span class="comment">#       std::deque&lt;T&gt; -- via pdequeue command</span></span><br><span class="line"><span class="comment">#       std::stack&lt;T&gt; -- via pstack command</span></span><br><span class="line"><span class="comment">#       std::queue&lt;T&gt; -- via pqueue command</span></span><br><span class="line"><span class="comment">#       std::priority_queue&lt;T&gt; -- via ppqueue command</span></span><br><span class="line"><span class="comment">#       std::bitset&lt;n&gt; -- via pbitset command</span></span><br><span class="line"><span class="comment">#       std::string -- via pstring command</span></span><br><span class="line"><span class="comment">#       std::widestring -- via pwstring command</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   The end of this file contains (optional) C++ beautifiers</span></span><br><span class="line"><span class="comment">#   Make sure your debugger supports $argc</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   Simple GDB Macros writen by Dan Marinescu (H-PhD) - License GPL</span></span><br><span class="line"><span class="comment">#   Inspired by intial work of Tom Malnar, </span></span><br><span class="line"><span class="comment">#     Tony Novac (PhD) / Cornell / Stanford,</span></span><br><span class="line"><span class="comment">#     Gilad Mishne (PhD) and Many Many Others.</span></span><br><span class="line"><span class="comment">#   Contact: dan_c_marinescu@yahoo.com (Subject: STL)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   Modified to work with g++ 4.3 by Anders Elton</span></span><br><span class="line"><span class="comment">#   Also added _member functions, that instead of printing the entire class in map, prints a member.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># std::vector&lt;&gt;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">define pvector</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 0</span><br><span class="line"><span class="built_in">help</span> pvector</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$size</span> = <span class="variable">$arg0</span>._M_impl._M_finish - <span class="variable">$arg0</span>._M_impl._M_start</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$capacity</span> = <span class="variable">$arg0</span>._M_impl._M_end_of_storage - <span class="variable">$arg0</span>._M_impl._M_start</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$size_max</span> = <span class="variable">$size</span> - 1</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 1</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span> = 0</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$i</span> &lt; <span class="variable">$size</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u]: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p *(<span class="variable">$arg0</span>._M_impl._M_start + <span class="variable">$i</span>)</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span>++</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 2</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$idx</span> = <span class="variable">$arg1</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">$idx</span> &lt; 0 || <span class="variable">$idx</span> &gt; <span class="variable">$size_max</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;idx1, idx2 are not in acceptable range: [0..%u].\n&quot;</span>, <span class="variable">$size_max</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u]: &quot;</span>, <span class="variable">$idx</span></span><br><span class="line">p *(<span class="variable">$arg0</span>._M_impl._M_start + <span class="variable">$idx</span>)</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 3</span><br><span class="line">  <span class="built_in">set</span> <span class="variable">$start_idx</span> = <span class="variable">$arg1</span></span><br><span class="line">  <span class="built_in">set</span> <span class="variable">$stop_idx</span> = <span class="variable">$arg2</span></span><br><span class="line">  <span class="keyword">if</span> <span class="variable">$start_idx</span> &gt; <span class="variable">$stop_idx</span></span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$tmp_idx</span> = <span class="variable">$start_idx</span></span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$start_idx</span> = <span class="variable">$stop_idx</span></span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$stop_idx</span> = <span class="variable">$tmp_idx</span></span><br><span class="line">  end</span><br><span class="line">  <span class="keyword">if</span> <span class="variable">$start_idx</span> &lt; 0 || <span class="variable">$stop_idx</span> &lt; 0 || <span class="variable">$start_idx</span> &gt; <span class="variable">$size_max</span> || <span class="variable">$stop_idx</span> &gt; <span class="variable">$size_max</span></span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;idx1, idx2 are not in acceptable range: [0..%u].\n&quot;</span>, <span class="variable">$size_max</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$i</span> = <span class="variable">$start_idx</span></span><br><span class="line"><span class="keyword">while</span> <span class="variable">$i</span> &lt;= <span class="variable">$stop_idx</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u]: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p *(<span class="variable">$arg0</span>._M_impl._M_start + <span class="variable">$i</span>)</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span>++</span><br><span class="line">end</span><br><span class="line">  end</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> &gt; 0</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Vector size = %u\n&quot;</span>, <span class="variable">$size</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Vector capacity = %u\n&quot;</span>, <span class="variable">$capacity</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Element &quot;</span></span><br><span class="line">whatis <span class="variable">$arg0</span>._M_impl._M_start</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">document pvector</span><br><span class="line">Prints std::vector&lt;T&gt; information.</span><br><span class="line">Syntax: pvector &lt;vector&gt; &lt;idx1&gt; &lt;idx2&gt;</span><br><span class="line">Note: idx, idx1 and idx2 must be <span class="keyword">in</span> acceptable range [0..&lt;vector&gt;.size()-1].</span><br><span class="line">Examples:</span><br><span class="line">pvector v - Prints vector content, size, capacity and T typedef</span><br><span class="line">pvector v 0 - Prints element[idx] from vector</span><br><span class="line">pvector v 1 2 - Prints elements <span class="keyword">in</span> range [idx1..idx2] from vector</span><br><span class="line">end </span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># std::list&lt;&gt;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">define plist</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 0</span><br><span class="line"><span class="built_in">help</span> plist</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$head</span> = &amp;<span class="variable">$arg0</span>._M_impl._M_node</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$current</span> = <span class="variable">$arg0</span>._M_impl._M_node._M_next</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$size</span> = 0</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$current</span> != <span class="variable">$head</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 2</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u]: &quot;</span>, <span class="variable">$size</span></span><br><span class="line">p *(<span class="variable">$arg1</span>*)(<span class="variable">$current</span> + 1)</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 3</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$size</span> == <span class="variable">$arg2</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u]: &quot;</span>, <span class="variable">$size</span></span><br><span class="line">p *(<span class="variable">$arg1</span>*)(<span class="variable">$current</span> + 1)</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$current</span> = <span class="variable">$current</span>._M_next</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$size</span>++</span><br><span class="line">end</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;List size = %u \n&quot;</span>, <span class="variable">$size</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 1</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;List &quot;</span></span><br><span class="line">whatis <span class="variable">$arg0</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Use plist &lt;variable_name&gt; &lt;element_type&gt; to see the elements in the list.\n&quot;</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">document plist</span><br><span class="line">Prints std::list&lt;T&gt; information.</span><br><span class="line">Syntax: plist &lt;list&gt; &lt;T&gt; &lt;idx&gt;: Prints list size, <span class="keyword">if</span> T defined all elements or just element at idx</span><br><span class="line">Examples:</span><br><span class="line">plist l - prints list size and definition</span><br><span class="line">plist l int - prints all elements and list size</span><br><span class="line">plist l int 2 - prints the third element <span class="keyword">in</span> the list (<span class="keyword">if</span> exists) and list size</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">define plist_member</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 0</span><br><span class="line"><span class="built_in">help</span> plist_member</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$head</span> = &amp;<span class="variable">$arg0</span>._M_impl._M_node</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$current</span> = <span class="variable">$arg0</span>._M_impl._M_node._M_next</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$size</span> = 0</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$current</span> != <span class="variable">$head</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 3</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u]: &quot;</span>, <span class="variable">$size</span></span><br><span class="line">p (*(<span class="variable">$arg1</span>*)(<span class="variable">$current</span> + 1)).<span class="variable">$arg2</span></span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 4</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$size</span> == <span class="variable">$arg3</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u]: &quot;</span>, <span class="variable">$size</span></span><br><span class="line">p (*(<span class="variable">$arg1</span>*)(<span class="variable">$current</span> + 1)).<span class="variable">$arg2</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$current</span> = <span class="variable">$current</span>._M_next</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$size</span>++</span><br><span class="line">end</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;List size = %u \n&quot;</span>, <span class="variable">$size</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 1</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;List &quot;</span></span><br><span class="line">whatis <span class="variable">$arg0</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Use plist_member &lt;variable_name&gt; &lt;element_type&gt; &lt;member&gt; to see the elements in the list.\n&quot;</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">document plist_member</span><br><span class="line">Prints std::list&lt;T&gt; information.</span><br><span class="line">Syntax: plist &lt;list&gt; &lt;T&gt; &lt;idx&gt;: Prints list size, <span class="keyword">if</span> T defined all elements or just element at idx</span><br><span class="line">Examples:</span><br><span class="line">plist_member l int member - prints all elements and list size</span><br><span class="line">plist_member l int member 2 - prints the third element <span class="keyword">in</span> the list (<span class="keyword">if</span> exists) and list size</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># std::map and std::multimap</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">define pmap</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 0</span><br><span class="line"><span class="built_in">help</span> pmap</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tree</span> = <span class="variable">$arg0</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span> = 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tree</span>._M_t._M_impl._M_header._M_left</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$end</span> = <span class="variable">$tree</span>._M_t._M_impl._M_header</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tree_size</span> = <span class="variable">$tree</span>._M_t._M_impl._M_node_count</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 1</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Map &quot;</span></span><br><span class="line">whatis <span class="variable">$tree</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Use pmap &lt;variable_name&gt; &lt;left_element_type&gt; &lt;right_element_type&gt; to see the elements in the map.\n&quot;</span></span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 3</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$i</span> &lt; <span class="variable">$tree_size</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$value</span> = (void *)(<span class="variable">$node</span> + 1)</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u].left: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p *(<span class="variable">$arg1</span>*)<span class="variable">$value</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$value</span> = <span class="variable">$value</span> + sizeof(<span class="variable">$arg1</span>)</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u].right: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p *(<span class="variable">$arg2</span>*)<span class="variable">$value</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_right</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span>._M_left != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_left</span><br><span class="line">end</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$node</span>._M_parent</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span> == <span class="variable">$tmp_node</span>._M_right</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$tmp_node</span>._M_parent</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span>++</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 4</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$idx</span> = <span class="variable">$arg3</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$ElementsFound</span> = 0</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$i</span> &lt; <span class="variable">$tree_size</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$value</span> = (void *)(<span class="variable">$node</span> + 1)</span><br><span class="line"><span class="keyword">if</span> *(<span class="variable">$arg1</span>*)<span class="variable">$value</span> == <span class="variable">$idx</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u].left: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p *(<span class="variable">$arg1</span>*)<span class="variable">$value</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$value</span> = <span class="variable">$value</span> + sizeof(<span class="variable">$arg1</span>)</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u].right: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p *(<span class="variable">$arg2</span>*)<span class="variable">$value</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$ElementsFound</span>++</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_right</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span>._M_left != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_left</span><br><span class="line">end</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$node</span>._M_parent</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span> == <span class="variable">$tmp_node</span>._M_right</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$tmp_node</span>._M_parent</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span>++</span><br><span class="line">end</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Number of elements found = %u\n&quot;</span>, <span class="variable">$ElementsFound</span></span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 5</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$idx1</span> = <span class="variable">$arg3</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$idx2</span> = <span class="variable">$arg4</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$ElementsFound</span> = 0</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$i</span> &lt; <span class="variable">$tree_size</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$value</span> = (void *)(<span class="variable">$node</span> + 1)</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$valueLeft</span> = *(<span class="variable">$arg1</span>*)<span class="variable">$value</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$valueRight</span> = *(<span class="variable">$arg2</span>*)(<span class="variable">$value</span> + sizeof(<span class="variable">$arg1</span>))</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$valueLeft</span> == <span class="variable">$idx1</span> &amp;&amp; <span class="variable">$valueRight</span> == <span class="variable">$idx2</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u].left: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p <span class="variable">$valueLeft</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u].right: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p <span class="variable">$valueRight</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$ElementsFound</span>++</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_right</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span>._M_left != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_left</span><br><span class="line">end</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$node</span>._M_parent</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span> == <span class="variable">$tmp_node</span>._M_right</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$tmp_node</span>._M_parent</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span>++</span><br><span class="line">end</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Number of elements found = %u\n&quot;</span>, <span class="variable">$ElementsFound</span></span><br><span class="line">end</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Map size = %u\n&quot;</span>, <span class="variable">$tree_size</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">document pmap</span><br><span class="line">Prints std::map&lt;TLeft and TRight&gt; or std::multimap&lt;TLeft and TRight&gt; information. Works <span class="keyword">for</span> std::multimap as well.</span><br><span class="line">Syntax: pmap &lt;map&gt; &lt;TtypeLeft&gt; &lt;TypeRight&gt; &lt;valLeft&gt; &lt;valRight&gt;: Prints map size, <span class="keyword">if</span> T defined all elements or just element(s) with val(s)</span><br><span class="line">Examples:</span><br><span class="line">pmap m - prints map size and definition</span><br><span class="line">pmap m int int - prints all elements and map size</span><br><span class="line">pmap m int int 20 - prints the element(s) with left-value = 20 (<span class="keyword">if</span> any) and map size</span><br><span class="line">pmap m int int 20 200 - prints the element(s) with left-value = 20 and right-value = 200 (<span class="keyword">if</span> any) and map size</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">define pmap_member</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 0</span><br><span class="line"><span class="built_in">help</span> pmap_member</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tree</span> = <span class="variable">$arg0</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span> = 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tree</span>._M_t._M_impl._M_header._M_left</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$end</span> = <span class="variable">$tree</span>._M_t._M_impl._M_header</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tree_size</span> = <span class="variable">$tree</span>._M_t._M_impl._M_node_count</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 1</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Map &quot;</span></span><br><span class="line">whatis <span class="variable">$tree</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Use pmap &lt;variable_name&gt; &lt;left_element_type&gt; &lt;right_element_type&gt; to see the elements in the map.\n&quot;</span></span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 5</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$i</span> &lt; <span class="variable">$tree_size</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$value</span> = (void *)(<span class="variable">$node</span> + 1)</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u].left: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p (*(<span class="variable">$arg1</span>*)<span class="variable">$value</span>).<span class="variable">$arg2</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$value</span> = <span class="variable">$value</span> + sizeof(<span class="variable">$arg1</span>)</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u].right: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p (*(<span class="variable">$arg3</span>*)<span class="variable">$value</span>).<span class="variable">$arg4</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_right</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span>._M_left != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_left</span><br><span class="line">end</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$node</span>._M_parent</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span> == <span class="variable">$tmp_node</span>._M_right</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$tmp_node</span>._M_parent</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span>++</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 6</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$idx</span> = <span class="variable">$arg5</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$ElementsFound</span> = 0</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$i</span> &lt; <span class="variable">$tree_size</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$value</span> = (void *)(<span class="variable">$node</span> + 1)</span><br><span class="line"><span class="keyword">if</span> *(<span class="variable">$arg1</span>*)<span class="variable">$value</span> == <span class="variable">$idx</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u].left: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p (*(<span class="variable">$arg1</span>*)<span class="variable">$value</span>).<span class="variable">$arg2</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$value</span> = <span class="variable">$value</span> + sizeof(<span class="variable">$arg1</span>)</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u].right: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p (*(<span class="variable">$arg3</span>*)<span class="variable">$value</span>).<span class="variable">$arg4</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$ElementsFound</span>++</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_right</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span>._M_left != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_left</span><br><span class="line">end</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$node</span>._M_parent</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span> == <span class="variable">$tmp_node</span>._M_right</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$tmp_node</span>._M_parent</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span>++</span><br><span class="line">end</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Number of elements found = %u\n&quot;</span>, <span class="variable">$ElementsFound</span></span><br><span class="line">end</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Map size = %u\n&quot;</span>, <span class="variable">$tree_size</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">document pmap_member</span><br><span class="line">Prints std::map&lt;TLeft and TRight&gt; or std::multimap&lt;TLeft and TRight&gt; information. Works <span class="keyword">for</span> std::multimap as well.</span><br><span class="line">Syntax: pmap &lt;map&gt; &lt;TtypeLeft&gt; &lt;TypeRight&gt; &lt;valLeft&gt; &lt;valRight&gt;: Prints map size, <span class="keyword">if</span> T defined all elements or just element(s) with val(s)</span><br><span class="line">Examples:</span><br><span class="line">pmap_member m class1 member1 class2 member2 - prints class1.member1 : class2.member2</span><br><span class="line">pmap_member m class1 member1 class2 member2 lvalue - prints class1.member1 : class2.member2 <span class="built_in">where</span> class1 == lvalue</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># std::set and std::multiset</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">define pset</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 0</span><br><span class="line"><span class="built_in">help</span> pset</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tree</span> = <span class="variable">$arg0</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span> = 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tree</span>._M_t._M_impl._M_header._M_left</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$end</span> = <span class="variable">$tree</span>._M_t._M_impl._M_header</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tree_size</span> = <span class="variable">$tree</span>._M_t._M_impl._M_node_count</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 1</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Set &quot;</span></span><br><span class="line">whatis <span class="variable">$tree</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Use pset &lt;variable_name&gt; &lt;element_type&gt; to see the elements in the set.\n&quot;</span></span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 2</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$i</span> &lt; <span class="variable">$tree_size</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$value</span> = (void *)(<span class="variable">$node</span> + 1)</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u]: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p *(<span class="variable">$arg1</span>*)<span class="variable">$value</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_right</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span>._M_left != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_left</span><br><span class="line">end</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$node</span>._M_parent</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span> == <span class="variable">$tmp_node</span>._M_right</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$tmp_node</span>._M_parent</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span>++</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 3</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$idx</span> = <span class="variable">$arg2</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$ElementsFound</span> = 0</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$i</span> &lt; <span class="variable">$tree_size</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$value</span> = (void *)(<span class="variable">$node</span> + 1)</span><br><span class="line"><span class="keyword">if</span> *(<span class="variable">$arg1</span>*)<span class="variable">$value</span> == <span class="variable">$idx</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;elem[%u]: &quot;</span>, <span class="variable">$i</span></span><br><span class="line">p *(<span class="variable">$arg1</span>*)<span class="variable">$value</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$ElementsFound</span>++</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_right</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span>._M_left != 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$node</span>._M_left</span><br><span class="line">end</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$node</span>._M_parent</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$node</span> == <span class="variable">$tmp_node</span>._M_right</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$tmp_node</span> = <span class="variable">$tmp_node</span>._M_parent</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$node</span>._M_right != <span class="variable">$tmp_node</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$node</span> = <span class="variable">$tmp_node</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span>++</span><br><span class="line">end</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Number of elements found = %u\n&quot;</span>, <span class="variable">$ElementsFound</span></span><br><span class="line">end</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Set size = %u\n&quot;</span>, <span class="variable">$tree_size</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">document pset</span><br><span class="line">Prints std::<span class="built_in">set</span>&lt;T&gt; or std::multiset&lt;T&gt; information. Works <span class="keyword">for</span> std::multiset as well.</span><br><span class="line">Syntax: pset &lt;<span class="built_in">set</span>&gt; &lt;T&gt; &lt;val&gt;: Prints <span class="built_in">set</span> size, <span class="keyword">if</span> T defined all elements or just element(s) having val</span><br><span class="line">Examples:</span><br><span class="line">pset s - prints <span class="built_in">set</span> size and definition</span><br><span class="line">pset s int - prints all elements and the size of s</span><br><span class="line">pset s int 20 - prints the element(s) with value = 20 (<span class="keyword">if</span> any) and the size of s</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># std::dequeue</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">define pdequeue</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 0</span><br><span class="line"><span class="built_in">help</span> pdequeue</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$size</span> = 0</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$start_cur</span> = <span class="variable">$arg0</span>._M_impl._M_start._M_cur</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$start_last</span> = <span class="variable">$arg0</span>._M_impl._M_start._M_last</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$start_stop</span> = <span class="variable">$start_last</span></span><br><span class="line"><span class="keyword">while</span> <span class="variable">$start_cur</span> != <span class="variable">$start_stop</span></span><br><span class="line">p *<span class="variable">$start_cur</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$start_cur</span>++</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$size</span>++</span><br><span class="line">end</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$finish_first</span> = <span class="variable">$arg0</span>._M_impl._M_finish._M_first</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$finish_cur</span> = <span class="variable">$arg0</span>._M_impl._M_finish._M_cur</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$finish_last</span> = <span class="variable">$arg0</span>._M_impl._M_finish._M_last</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$finish_cur</span> &lt; <span class="variable">$finish_last</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$finish_stop</span> = <span class="variable">$finish_cur</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$finish_stop</span> = <span class="variable">$finish_last</span></span><br><span class="line">end</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$finish_first</span> != <span class="variable">$finish_stop</span></span><br><span class="line">p *<span class="variable">$finish_first</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$finish_first</span>++</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$size</span>++</span><br><span class="line">end</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Dequeue size = %u\n&quot;</span>, <span class="variable">$size</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">document pdequeue</span><br><span class="line">Prints std::dequeue&lt;T&gt; information.</span><br><span class="line">Syntax: pdequeue &lt;dequeue&gt;: Prints dequeue size, <span class="keyword">if</span> T defined all elements</span><br><span class="line">Deque elements are listed <span class="string">&quot;left to right&quot;</span> (left-most stands <span class="keyword">for</span> front and right-most stands <span class="keyword">for</span> back)</span><br><span class="line">Example:</span><br><span class="line">pdequeue d - prints all elements and size of d</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># std::stack</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">define pstack</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 0</span><br><span class="line"><span class="built_in">help</span> pstack</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$start_cur</span> = <span class="variable">$arg0</span>.c._M_impl._M_start._M_cur</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$finish_cur</span> = <span class="variable">$arg0</span>.c._M_impl._M_finish._M_cur</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$size</span> = <span class="variable">$finish_cur</span> - <span class="variable">$start_cur</span></span><br><span class="line">        <span class="built_in">set</span> <span class="variable">$i</span> = <span class="variable">$size</span> - 1</span><br><span class="line">        <span class="keyword">while</span> <span class="variable">$i</span> &gt;= 0</span><br><span class="line">            p *(<span class="variable">$start_cur</span> + <span class="variable">$i</span>)</span><br><span class="line">            <span class="built_in">set</span> <span class="variable">$i</span>--</span><br><span class="line">        end</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Stack size = %u\n&quot;</span>, <span class="variable">$size</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">document pstack</span><br><span class="line">Prints std::stack&lt;T&gt; information.</span><br><span class="line">Syntax: pstack &lt;stack&gt;: Prints all elements and size of the stack</span><br><span class="line">Stack elements are listed <span class="string">&quot;top to buttom&quot;</span> (top-most element is the first to come on pop)</span><br><span class="line">Example:</span><br><span class="line">pstack s - prints all elements and the size of s</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># std::queue</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">define pqueue</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 0</span><br><span class="line"><span class="built_in">help</span> pqueue</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$start_cur</span> = <span class="variable">$arg0</span>.c._M_impl._M_start._M_cur</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$finish_cur</span> = <span class="variable">$arg0</span>.c._M_impl._M_finish._M_cur</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$size</span> = <span class="variable">$finish_cur</span> - <span class="variable">$start_cur</span></span><br><span class="line">        <span class="built_in">set</span> <span class="variable">$i</span> = 0</span><br><span class="line">        <span class="keyword">while</span> <span class="variable">$i</span> &lt; <span class="variable">$size</span></span><br><span class="line">            p *(<span class="variable">$start_cur</span> + <span class="variable">$i</span>)</span><br><span class="line">            <span class="built_in">set</span> <span class="variable">$i</span>++</span><br><span class="line">        end</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Queue size = %u\n&quot;</span>, <span class="variable">$size</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">document pqueue</span><br><span class="line">Prints std::queue&lt;T&gt; information.</span><br><span class="line">Syntax: pqueue &lt;queue&gt;: Prints all elements and the size of the queue</span><br><span class="line">Queue elements are listed <span class="string">&quot;top to bottom&quot;</span> (top-most element is the first to come on pop)</span><br><span class="line">Example:</span><br><span class="line">pqueue q - prints all elements and the size of q</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># std::priority_queue</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">define ppqueue</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 0</span><br><span class="line"><span class="built_in">help</span> ppqueue</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$size</span> = <span class="variable">$arg0</span>.c._M_impl._M_finish - <span class="variable">$arg0</span>.c._M_impl._M_start</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$capacity</span> = <span class="variable">$arg0</span>.c._M_impl._M_end_of_storage - <span class="variable">$arg0</span>.c._M_impl._M_start</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span> = <span class="variable">$size</span> - 1</span><br><span class="line"><span class="keyword">while</span> <span class="variable">$i</span> &gt;= 0</span><br><span class="line">p *(<span class="variable">$arg0</span>.c._M_impl._M_start + <span class="variable">$i</span>)</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$i</span>--</span><br><span class="line">end</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Priority queue size = %u\n&quot;</span>, <span class="variable">$size</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Priority queue capacity = %u\n&quot;</span>, <span class="variable">$capacity</span></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">document ppqueue</span><br><span class="line">Prints std::priority_queue&lt;T&gt; information.</span><br><span class="line">Syntax: ppqueue &lt;priority_queue&gt;: Prints all elements, size and capacity of the priority_queue</span><br><span class="line">Priority_queue elements are listed <span class="string">&quot;top to buttom&quot;</span> (top-most element is the first to come on pop)</span><br><span class="line">Example:</span><br><span class="line">ppqueue pq - prints all elements, size and capacity of pq</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># std::bitset</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">define pbitset</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 0</span><br><span class="line"><span class="built_in">help</span> pbitset</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        p /t <span class="variable">$arg0</span>._M_w</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">document pbitset</span><br><span class="line">Prints std::bitset&lt;n&gt; information.</span><br><span class="line">Syntax: pbitset &lt;bitset&gt;: Prints all bits <span class="keyword">in</span> bitset</span><br><span class="line">Example:</span><br><span class="line">pbitset b - prints all bits <span class="keyword">in</span> b</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># std::string</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">define pstring</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 0</span><br><span class="line"><span class="built_in">help</span> pstring</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;String \t\t\t= \&quot;%s\&quot;\n&quot;</span>, <span class="variable">$arg0</span>._M_data()</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;String size/length \t= %u\n&quot;</span>, <span class="variable">$arg0</span>._M_rep()._M_length</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;String capacity \t= %u\n&quot;</span>, <span class="variable">$arg0</span>._M_rep()._M_capacity</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;String ref-count \t= %d\n&quot;</span>, <span class="variable">$arg0</span>._M_rep()._M_refcount</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">document pstring</span><br><span class="line">Prints std::string information.</span><br><span class="line">Syntax: pstring &lt;string&gt;</span><br><span class="line">Example:</span><br><span class="line">pstring s - Prints content, size/length, capacity and ref-count of string s</span><br><span class="line">end </span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># std::wstring</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">define pwstring</span><br><span class="line"><span class="keyword">if</span> <span class="variable">$argc</span> == 0</span><br><span class="line"><span class="built_in">help</span> pwstring</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">call <span class="built_in">printf</span>(<span class="string">&quot;WString \t\t= \&quot;%ls\&quot;\n&quot;</span>, <span class="variable">$arg0</span>._M_data())</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;WString size/length \t= %u\n&quot;</span>, <span class="variable">$arg0</span>._M_rep()._M_length</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;WString capacity \t= %u\n&quot;</span>, <span class="variable">$arg0</span>._M_rep()._M_capacity</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;WString ref-count \t= %d\n&quot;</span>, <span class="variable">$arg0</span>._M_rep()._M_refcount</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">document pwstring</span><br><span class="line">Prints std::wstring information.</span><br><span class="line">Syntax: pwstring &lt;wstring&gt;</span><br><span class="line">Example:</span><br><span class="line">pwstring s - Prints content, size/length, capacity and ref-count of wstring s</span><br><span class="line">end </span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># C++ related beautifiers (optional)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> <span class="built_in">print</span> pretty on</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">print</span> object on</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">print</span> static-members on</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">print</span> vtbl on</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">print</span> demangle on</span><br><span class="line"><span class="built_in">set</span> demangle-style gnu-v3</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">print</span> sevenbit-strings off</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;there-are-two-methods-to-view-stl-types-under-gdb&quot;&gt;There are two methods to view STL types under GDB.&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;From Zhang</summary>
      
    
    
    
    <category term="gnu" scheme="http://vball.fun/categories/gnu/"/>
    
    
    <category term="gdb" scheme="http://vball.fun/tags/gdb/"/>
    
    <category term="linux" scheme="http://vball.fun/tags/linux/"/>
    
    <category term="stl" scheme="http://vball.fun/tags/stl/"/>
    
    <category term="gnu" scheme="http://vball.fun/tags/gnu/"/>
    
  </entry>
  
  <entry>
    <title>强大的.NET加壳工具——ILProtector</title>
    <link href="http://vball.fun/2020/06/13/z_csdn_035_106739661/"/>
    <id>http://vball.fun/2020/06/13/z_csdn_035_106739661/</id>
    <published>2020-06-13T06:53:00.000Z</published>
    <updated>2021-12-08T08:49:11.904Z</updated>
    
    <content type="html"><![CDATA[<p>ILProtector是一个你的.NET应用的程序，为了保护您的软件的知识产权。</p><p>ILProtector保护你的.NET应用不被逆向工程、反编译和修改的网络代码。ILProtector将中间语言(MSIL)代码转换为一种特定的形式，它将不会被反汇编器或反编译器如IL DASM, .NET Reflector, ILSpy, dotPeek等识别。</p><p>（以上文字翻译自官方网站，emmmm，第一次人工翻译）</p><p>主要特性：</p><blockquote></blockquote><h2><span id="main-features">Main Features</span></h2><ul><li>Software code protection</li><li>String encryption</li><li>Integrity checking</li><li>High performance</li><li>Full reflection support for protected assemblies</li><li>Supports <a href="https://en.wikipedia.org/wiki/.NET_Framework">.NET Framework</a> 2.0/3.0/3.5/4.0/4.5/4.6/4.7</li><li>Supports Windows x32/x64 desktop applications</li><li><a href="http://www.vgrsoft.net/Products/ILProtector/CommandLineMode">Command-Line</a> support</li><li>Does not use undocumented features</li></ul><p>官方提供了最新版的30天试用版供大家体验</p><p>如果你想使用注册版，你可以像我一样通过为Vgrsoft（该软件开发者）打广告的方式获得正式版的许可证</p><p>如何使用呢，很简单，官网都有详细的介绍</p><p>经过加壳后将会获得一个加过壳的exe程序和两个dll文件，如何整合起来可以参考这篇文章：</p><p>进我测试，主流的破壳软件都不能将它破解，真的很强大！！！</p>]]></content>
    
    
    <summary type="html">ILProtector是一个你的.NET应用的程序，为了保护您的软件的知识产权。ILProtector保护你的.NET应用不被逆向工程、反编译和修改的网络代码。ILProtector将中间语言(MSIL)代码转换为一种特定的形式，它将不会被反汇编器或反编译器如IL DASM,.NET Reflector,ILSpy, dotPeek等识别。（以上文字翻译自官方网站，emmmm，第一次人工翻译）主要特性：Main Features- Software code protection..</summary>
    
    
    
    
    <category term="CSDN" scheme="http://vball.fun/tags/CSDN/"/>
    
  </entry>
  
  <entry>
    <title>Hexo pure theme add mermaid support</title>
    <link href="http://vball.fun/2019/11/12/hexo-pure-theme-add-mermaid-support/"/>
    <id>http://vball.fun/2019/11/12/hexo-pure-theme-add-mermaid-support/</id>
    <published>2019-11-12T01:55:37.000Z</published>
    <updated>2021-12-08T08:49:11.892Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="一-说明">一、说明</span></h2><h3><span id="开启">开启</span></h3><ol><li>安装hexo插件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-mermaid-diagrams -s</span><br></pre></td></tr></table></figure></li><li>修改<code>themes/pure/_config.yml</code> 的 <code>mermaid.on</code>，开启主题支持<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Mermaid 支持</span></span><br><span class="line"><span class="attr">mermaid:</span></span><br><span class="line">  <span class="attr">on:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">cdn:</span> <span class="string">//cdn.jsdelivr.net/npm/mermaid@8.4.2/dist/mermaid.min.js</span></span><br><span class="line">  <span class="comment">#cdn: //cdnjs.cloudflare.com/ajax/libs/mermaid/8.3.1/mermaid.min.js</span></span><br><span class="line">  <span class="attr">options:</span> <span class="comment"># 更多配置信息可以参考 https://mermaidjs.github.io/#/mermaidAPI</span></span><br><span class="line">    <span class="attr">theme:</span> <span class="string">&#x27;default&#x27;</span></span><br><span class="line">    <span class="attr">startOnLoad:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">flowchart:</span></span><br><span class="line">      <span class="attr">useMaxWidth:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">htmlLabels:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li>添加主题渲染支持 themes/pure/layout/_common/head.ejs<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="ruby"> <span class="keyword">if</span> (theme.mermaid.enable) &#123; </span>%&gt;</span><br><span class="line">  <span class="string">&lt;script</span> <span class="string">src=&#x27;https://unpkg.com/mermaid@&lt;%=</span> <span class="string">theme.mermaid.version</span> <span class="string">%&gt;/dist/mermaid.min.js&#x27;&gt;&lt;/script&gt;</span></span><br><span class="line">  <span class="string">&lt;script&gt;</span></span><br><span class="line">    <span class="string">if</span> <span class="string">(window.mermaid)</span> &#123;</span><br><span class="line">      <span class="string">mermaid.initialize(</span>&#123;<span class="attr">theme:</span> <span class="string">&#x27;forest&#x27;</span>&#125;<span class="string">);</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="string">&lt;/script&gt;</span></span><br><span class="line">&lt;%<span class="ruby"> &#125; </span>%&gt;</span><br></pre></td></tr></table></figure></li><li>在markdown中，像写代码块一样写图表<br><img src="demo.png"></li></ol><h2><span id="二-示例">二、示例</span></h2><p>以下示例源码可以在这边查看 <a href="https://github.com/yelog/blog/blob/master/source/_posts/tools/3-hexo%E6%94%AF%E6%8C%81mermaid%E5%9B%BE%E8%A1%A8.md">本文源码</a><br>更多示例可以查看官网：<a href="https://mermaidjs.github.io/">https://mermaidjs.github.io</a></p><h3><span id="1-flowchart">1. flowchart</span></h3><pre class="mermaid">graph TD;    A-->B;    A-->C;    B-->D;    C-->D;</pre><pre class="mermaid">graph TB    c1-->a2    subgraph one    a1-->a2    end    subgraph two    b1-->b2    end    subgraph three    c1-->c2    end</pre><h3><span id="2sequence-diagrams">2.Sequence diagrams</span></h3><pre class="mermaid">sequenceDiagram    participant Alice    participant Bob    Alice->>John: Hello John, how are you?    loop Healthcheck        John->>John: Fight against hypochondria    end    Note right of John: Rational thoughts <br>prevail!    John-->>Alice: Great!    John->>Bob: How about you?    Bob-->>John: Jolly good!</pre><h3><span id="3class-diagrams">3.Class diagrams</span></h3><pre class="mermaid">classDiagram     Animal <|-- duck animal <|-- fish zebra : +int age +string gender animal: +ismammal() +mate() class duck{ beakcolor +swim() +quack() } fish{ -int sizeinfeet -caneat() zebra{ +bool is_wild +run() }< pre><h3><span id="4state-diagrams">4.State diagrams</span></h3><pre class="mermaid">stateDiagram       [*] --> Active       state Active {           [*] --> NumLockOff           NumLockOff --> NumLockOn : EvNumLockPressed           NumLockOn --> NumLockOff : EvNumLockPressed           --           [*] --> CapsLockOff           CapsLockOff --> CapsLockOn : EvCapsLockPressed           CapsLockOn --> CapsLockOff : EvCapsLockPressed           --           [*] --> ScrollLockOff           ScrollLockOff --> ScrollLockOn : EvCapsLockPressed           ScrollLockOn --> ScrollLockOff : EvCapsLockPressed       }</pre><h3><span id="5gantt-diagrams">5.Gantt diagrams</span></h3><pre class="mermaid">gantt       dateFormat  YYYY-MM-DD       title Adding GANTT diagram functionality to mermaid       section A section       Completed task            :done,    des1, 2014-01-06,2014-01-08       Active task               :active,  des2, 2014-01-09, 3d       Future task               :         des3, after des2, 5d       Future task2              :         des4, after des3, 5d       section Critical tasks       Completed task in the critical line :crit, done, 2014-01-06,24h       Implement parser and jison          :crit, done, after des1, 2d       Create tests for parser             :crit, active, 3d       Future task in critical line        :crit, 5d       Create tests for renderer           :2d       Add to mermaid                      :1d       section Documentation       Describe gantt syntax               :active, a1, after des1, 3d       Add gantt diagram to demo page      :after a1  , 20h       Add another diagram to demo page    :doc1, after a1  , 48h       section Last section       Describe gantt syntax               :after doc1, 3d       Add gantt diagram to demo page      :20h       Add another diagram to demo page    :48h</pre><h3><span id="6pie-chart-diagrams">6.Pie chart diagrams</span></h3><pre class="mermaid">pie    "Dogs" : 386    "Cats" : 85    "Rats" : 15</pre></|--></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;一-说明&quot;&gt;一、说明&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span id=&quot;开启&quot;&gt;开启&lt;/span&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;安装hexo插件&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu</summary>
      
    
    
    
    <category term="tools" scheme="http://vball.fun/categories/tools/"/>
    
    <category term="hexo" scheme="http://vball.fun/categories/tools/hexo/"/>
    
    
    <category term="mermaid" scheme="http://vball.fun/tags/mermaid/"/>
    
    <category term="hexo" scheme="http://vball.fun/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>C# 调用dll以及内置dll到exe内部</title>
    <link href="http://vball.fun/2019/01/20/z_csdn_064_86572103/"/>
    <id>http://vball.fun/2019/01/20/z_csdn_064_86572103/</id>
    <published>2019-01-20T21:39:00.000Z</published>
    <updated>2021-12-08T08:49:11.908Z</updated>
    
    <content type="html"><![CDATA[<p>包含以下几块，如果没你需要的东西，可以继续赶路了</p><p>1： C# 对的dll的两种调用</p><p>2： dll包含到exe中</p><p>3：dll的函数原型获取</p><p>最近听闻人到中年的比尔盖茨收购了github并免费了私有的代码仓库，不由的给他点了一波赞，然后嘛就顺手把一个小项目用C#重写了一下，毕竟自从net开源了mono和.net core后，以后做gui也可以用C#这种快速预言了。哈哈，不用整天纠结在C++（QT）的各种内存泄漏等问题了。</p><p>额外吐槽一下C#反编译的问题，就你麻麻的没有加密，反编译出来就是源码。。。几个意思啊</p><p>现在开始正题， Part 1： C# call dll （这里的库没有广泛测试，各位DIY一下）。</p><p>Method 1： DLLimport</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">DllImport(<span class="meta-string">&quot;kernel32&quot;</span>, CharSet = CharSet.Unicode, SetLastError = true)</span>]</span><br><span class="line"><span class="function"><span class="keyword">internal</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">FreeLibrary</span>(<span class="params">IntPtr hModule</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">&quot;kernel32&quot;</span>, CharSet = CharSet.Unicode, SetLastError = true)</span>]</span><br><span class="line"><span class="function"><span class="keyword">internal</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">LoadLibrary</span>(<span class="params"><span class="built_in">string</span> lpFileName</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">&quot;kernel32&quot;</span>, CharSet = CharSet.Unicode, SetLastError = true)</span>]</span><br><span class="line"><span class="function"><span class="keyword">internal</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">GetProcAddress</span>(<span class="params">IntPtr hModule, <span class="built_in">string</span> lpFileName</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//static load dll</span></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">&quot;test.dll&quot;</span>, CallingConvention = CallingConvention.Cdecl, CharSet = CharSet.Unicode, EntryPoint = <span class="meta-string">&quot;MemPreAlloc&quot;</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">MemPreAlloc</span>(<span class="params"><span class="built_in">byte</span>[] plaintext, <span class="built_in">int</span> plaintext_length, <span class="built_in">byte</span>[] ciphertext, <span class="built_in">int</span> ciphertext_length</span>)</span>;</span><br></pre></td></tr></table></figure><p>然后就这么简单。。哈哈</p><p>Method 2： 动态导入</p><p>有时需要动态调用dll中的函数，比如我，为了避免神奇的乙方多次搞丢dll的问题，需要把dll内嵌到exe的资源区段中，需要的时候释放出来（这个是改日聊内容）。</p><p>这里需要用到 IntPtr GetProcAddress(IntPtr hModule, string lpFileName)函数获取对应函数的地址，然后再使用C#的delegate委托方法调用。。其实感觉委托就是C语言中的函数申明。。。(C#高手放过不专业的描述)</p><p>实现逻辑如下：</p><p>1： 声明待导出函数的原型（C#变量对应问题，请自行百度）</p><p>2：打开dll (LoadLibrary)</p><p>3: 获取函数地址，通过Marshal.GetDelegateForFunctionPointer 函数对函数进行类型转换到目标的委托方法</p><p>4： 自己调用了。。</p><p>上代码：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1：委托函数的类型声明，感觉等同于C语言函数指针的声明</span></span><br><span class="line"><span class="built_in">delegate</span> <span class="built_in">int</span> _DeleGateMemPreAlloc(<span class="built_in">byte</span>[] plaintext, <span class="built_in">int</span> plaintext_length, <span class="built_in">byte</span>[]);</span><br><span class="line">/:委托函数的实例化</span><br><span class="line">_DeleGateMemPreAlloc MemPreAlloc;</span><br><span class="line"></span><br><span class="line"><span class="comment">//委托函数的赋值</span></span><br><span class="line"></span><br><span class="line">DllInvoke dllInvoke = <span class="keyword">new</span> DllInvoke(SECUREDLL);<span class="comment">//这个类看下边哈。。。包含打开dll,获取函数</span></span><br><span class="line">MemPreAlloc = (_DeleGateMemPreAlloc)dllInvoke.Invoke(<span class="string">&quot;MemPreAlloc&quot;</span>, <span class="keyword">typeof</span>(_DeleGateMemPreAlloc));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里有两个大坑导致 C# 不能导出dll中的函数地址，没经验没办法，记录下来给大家分享：</p><p>1： 调用目标程序的类型需要和dll一致，如x86，x64必须一致，至于x64能不能call x86，你们自己测试吧，理论应该可以的</p><p>2：LoadLibrary 功能不能和调用函数在同一个文件中。。原因母鸡，解决方法就是对LoadLibrary 进行一层包装，说白了定时定义一个类包起来。。。上代码不BB DllInvoke.cs： 然后就德芙巧克力一样的丝滑了。。。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DMT_AES_TOOL</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DllInvoke</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Win API</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;kernel32.dll&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">extern</span> <span class="keyword">static</span> IntPtr <span class="title">LoadLibrary</span>(<span class="params"><span class="built_in">string</span> path</span>)</span>;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;kernel32.dll&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">extern</span> <span class="keyword">static</span> IntPtr <span class="title">GetProcAddress</span>(<span class="params">IntPtr lib, <span class="built_in">string</span> funcName</span>)</span>;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;kernel32.dll&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">extern</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">FreeLibrary</span>(<span class="params">IntPtr lib</span>)</span>;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> IntPtr hLib;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DllInvoke</span>(<span class="params">String DLLPath</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            hLib = LoadLibrary(DLLPath);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ~DllInvoke()</span><br><span class="line">        &#123;</span><br><span class="line">            FreeLibrary(hLib);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将要执行的函数转换为委托</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Delegate <span class="title">Invoke</span>(<span class="params"><span class="built_in">string</span> APIName, Type t</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            IntPtr api = GetProcAddress(hLib, APIName);</span><br><span class="line">            <span class="keyword">if</span> (api == IntPtr.Zero)</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="string">&quot;找不到img资源入口&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> (Delegate)Marshal.GetDelegateForFunctionPointer(api, t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后贴一个内置dll文件到exe内，并悄悄释放，然后调用的实现。</p><p>1： 我这里dll改名成test.img， 然后在C#工程中添加一个资源文件Resource1.resx</p><p><img src="2019012113351797.png"></p><p>2： 释放dll资源到临时文件，这里直接上代码 LoadResource.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DMT_AES_TOOL</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">LoadResource</span></span><br><span class="line">    &#123;</span><br><span class="line">        LoadResource()</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Load</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> tempFile = Path.GetTempFileName();<span class="comment">//临时文件准尉</span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] byDll = Resource1.test;<span class="comment">//看这里看这里。我之前的文件是test.img这里直接就能获取到目标的byte[]数据了</span></span><br><span class="line"></span><br><span class="line">            File.WriteAllBytes(tempFile, byDll);<span class="comment">//释放了dll到临时文件</span></span><br><span class="line"><span class="comment">//          Clipboard.SetDataObject(tempFile, true);</span></span><br><span class="line"><span class="comment">//            MessageBox.Show(&quot;temp resource file -&gt; &quot; + tempFile + &quot; size -&gt;&quot; + byDll.GetLength(0).ToString());</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> tempFile;<span class="comment">//文件释放出来给DllInvoke导出函数哈哈哈</span></span><br><span class="line">        &#125;</span><br><span class="line">        ~LoadResource()</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后获取扒拉一下dll中函数名字的获取和原型的获取</p><p>名字比较简单： dll export viewer</p><p>原型获取，就需要动用大名鼎鼎的IDA了，这里安利一下看雪学院，工具都可以下载，也建议多看看。</p><p>打开dll，然后找找目标函数，然后双击进入，按一下F5 。。。不上图了。。自己看吧</p>]]></content>
    
    
    <summary type="html">包含以下几块，如果没你需要的东西，可以继续赶路了     1： C# 对的dll的两种调用     2： dll包含到exe中     3：dll的函数原型获取    最近听闻人到中年的比尔盖茨收购了github并免费了私有的代码仓库，不由的给他点了一波赞，然后嘛就顺手把一个小项目用C#重写了一下，毕竟自从net开源了mono和.net core后，以后做gui也可以用C...</summary>
    
    
    
    
    <category term="CSDN" scheme="http://vball.fun/tags/CSDN/"/>
    
  </entry>
  
  <entry>
    <title>VP9编解码标准知识总结－转载收集</title>
    <link href="http://vball.fun/2018/08/15/z_csdn_040_81707199/"/>
    <id>http://vball.fun/2018/08/15/z_csdn_040_81707199/</id>
    <published>2018-08-15T01:39:00.000Z</published>
    <updated>2021-12-08T08:49:11.904Z</updated>
    
    <content type="html"><![CDATA[<p>. How VP9 works, technical details &amp; diagrams</p><p>Doom9 论坛关于VP9的讨论（链接）</p><ol start="2"><li>技术书籍</li></ol><p>《VP9 Bitstream ­ superframe and uncompressed header DRAFT 》</p><p>《VP9 Bitstream &amp; Decoding Process Specification》</p><p>vp9于vp8一样，最多支持3个参考帧：last frame(时间上前一帧) golden frame(时间上任一帧，用于视频背景的更新，可以用来克服帧丢失) altref frame(只用于参考，不显示，质量高于普通帧)。vp9中关键帧常用作 golden frame， golden frame质量较高，QP较小。vp9有两种类型的 altref frame：第一种是通过普通编码方式得到的；第二种是由多个未编码帧拼凑而成的，它的块可能来自不同的帧。</p>]]></content>
    
    
    <summary type="html">.  How VP9 works, technical details &amp;amp;amp; diagrams   Doom9 论坛关于VP9的讨论（链接）2. 技术书籍   《VP9 Bitstream ­ superframe and uncompressed header DRAFT 》   《VP9 Bitstream &amp;amp;amp; Decoding Process Specifica...</summary>
    
    
    
    
    <category term="CSDN" scheme="http://vball.fun/tags/CSDN/"/>
    
  </entry>
  
  <entry>
    <title>ssh tunnel , ssh reverse proxy, ssh over ssh , ssh tunnel proxy 特殊网络打洞大法，突破变态网管审核</title>
    <link href="http://vball.fun/2018/07/12/z_csdn_019_81019585/"/>
    <id>http://vball.fun/2018/07/12/z_csdn_019_81019585/</id>
    <published>2018-07-12T02:38:00.000Z</published>
    <updated>2021-12-08T08:49:11.904Z</updated>
    
    <content type="html"><![CDATA[<p>修改备注：</p><p>config文件中的ProxyCommand中不需要=</p><p>大致起源是公司的网络审核超级严格，本地access美国server只能先使用link到审核服务器，然后vnc到中间服务器，然后再bbb。。。。总不能这边修改一行代码再去vnc上重新敲一遍吧。。。于是萌生了打洞的想法（操作完全违规，请参考员工离职手册，做好被fire的准备）</p><p>先描述几个概念：</p><ol><li>ssh tunnel ，简单来说就是利用ssh通讯协议做一个隧道，或者是洞让你进行数据通讯</li><li>ssh tunnel proxy 在ssh打开的洞里进行socks 5代理</li><li>ssh reverse proxy ，和第一个差不多，是从a–&gt;b 开洞，然后使用者从b-&gt;a 发起应用。</li><li>ssh over ssh , ssh 通讯是建立在另外一条ssh tunnel基础</li></ol><p>网络环境嘛。。。很常见，我从A发起对B只能绕道C，还是VNC，可以想象跨洋访问的恐怖，画面刷新感人。</p><p>me -&gt; client A (ssh 443)—-X—-firewall</p><p>| |</p><p>|–&gt;C—-vnc————————————&gt;|</p><p>public C (因为我们这里B能发起对A的连接（其实也有限制，22端口屏蔽。但是80和443开放，我就把A的ssh server端口改443了）， 我不再使用公网的C作为跳转，其实也就是多了一步而已)</p><p>下边开始干活：</p><p>第一步： 打通B-&gt;A的隧道（注意A的ssh server 端口是443，有意绕过监控为之）,通过在B上执行如下命令：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p <span class="number">443</span>  -NR <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">2222</span>:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">22</span> user_A@A</span><br></pre></td></tr></table></figure><p>成功打通了B-&gt;A的连接，同时在A上监听端口2222，所有连接A:2222的连接都会转发到B:22 ,这时核心步骤已经完成。</p><p>为了避免连接挂掉，结合autossh自动重连：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">autossh -p 443 -M 2223 -NR 0.0.0.0:2222:127.0.0.1:22 user_A@A</span><br></pre></td></tr></table></figure><p>第二步：A ssh 到 B, 注意此时地址是A的本机地址。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -P  2222 user_B@127.0.0.1</span><br></pre></td></tr></table></figure><p>此刻你就可以用B做跳板access C,D,E ，然后在反复不断敲ssh命令中，手指开始生疼，在A的~/.ssh/config中添加一行：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host B</span><br><span class="line">    hostname 127.0.0.1</span><br><span class="line">    port 2222</span><br><span class="line">    user user_B</span><br></pre></td></tr></table></figure><p>每次只要ssh B,就可以登录B了。（什么密钥登录或者sshpass登录自己的百度。懒人一个）</p><p>另外数据复制蛋疼。。。于是需要扩大战果，实现更多好处</p><p>战果1： 利用B做代理给A上网（因为B是国外服务器，然后youtube什么的404有很多红利了）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh  -NfD 0.0.0.0:1080     -P 2222   user_B@127.0.0.1</span><br></pre></td></tr></table></figure><p>然后本地打开了1080端口时能socks 5代理，浏览器配置代理什么的，自己百度</p><p>这里说明一下，如果不写0.0.0.0 ，1080端口只接受本机发起的连接，如果需要支持局域网其他client访问，可能需要增加一步，在A的/etc/ssh/sshd_config 中添加一句（懒得验证是否需要，大家可以留言告知我）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GatewayPorts yes</span><br></pre></td></tr></table></figure><p>此刻其实我们的浏览器数据的http/https —&gt; ssh –&gt; ssh –&gt;404 , 简单的就是说socks over ssh</p><p>战果2 ： A直接ssh访问C，D, E（好处就是可以使用sftp，scp等命令直接复制数据。。。。我不会告诉你可以使用用mobaxterm和filezilla管理这些东西）</p><p>这里有三种思路，</p><p>1: ssh1 over ssh2 (此时ssh2已经是ssh over ssh) ，利用第一步打通的ssh隧道过日子，</p><p>核心命令 ：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ProxyCommand=&quot;ssh -W %h:%p -P 2222 user_B@127.0.0.1&quot;</span><br></pre></td></tr></table></figure><p>完整的命令是,同样支持sftp,scp：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh  -o ProxyCommand=&quot;ssh -W %h:%p -P 2222 user_B@127.0.0.1&quot;  user_C@C</span><br></pre></td></tr></table></figure><p>简化的用法就是A的~/.ssh/config中添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">host C</span><br><span class="line">    hostname server_C</span><br><span class="line">    user user_C</span><br><span class="line">ProxyCommand ssh -W %h:%p -P 2222 user_B@127.0.0.1</span><br><span class="line"></span><br><span class="line">#这里修了一个坑。。。就是PorxyCommand后边不需要=</span><br></pre></td></tr></table></figure><p>然后直接ssh C即可</p><p>2：ssh over socks ((此时socks已经是sock over ssh))，利用战果1开通的socks过日子，好处是很多第三方软件都支持socks，此时协议就不限于ssh了。</p><p>核心命令 ：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ProxyCommand=&quot;nc -X 5 -x localhost:1080 %h %p&quot;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">完整的命令是,同样支持sftp,scp：</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh  -o ProxyCommand=&quot;nc -X 5 -x localhost:1080 %h %p&quot;  user_C@C</span><br></pre></td></tr></table></figure><p>简化的用法就是A的~/.ssh/config中添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host C</span><br><span class="line">    hostname server_C</span><br><span class="line">    user user_C</span><br><span class="line">    ProxyCommand nc -X 5 -x localhost:1080 %h %p</span><br></pre></td></tr></table></figure><p>然后直接ssh C即可</p><p>3：监听A的特殊端口，直接转发数据到目标机（麻烦，但是也好用）,实现的效果是当连接到A的20567端口，自动转发到C的22端口。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -NfL  20567:C:22   -P 2222  user_B@127.0.0.1</span><br></pre></td></tr></table></figure><p>此时执行如下命令就可以直接连接到C：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -P 20567 user_C@127.0.01</span><br></pre></td></tr></table></figure><p>简化的用法就是A的~/.ssh/config中添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host C</span><br><span class="line">    hostname 127.0.0.1</span><br><span class="line">    port 20567</span><br><span class="line">    user user_C</span><br></pre></td></tr></table></figure><p>然后直接ssh C即可</p><p>至于上边提及的public C， 就是多中转一下，隧道套隧道，，俄罗斯套娃娃</p><p>今天看到一个居然CSDN乞讨的，也来凑一下热闹。。。看看能不能买包烟。。</p><p><img src="70"></p>]]></content>
    
    
    <summary type="html">修改备注：config文件中的ProxyCommand中不需要=大致起源是公司的网络审核超级严格，本地access美国server只能先使用link到审核服务器，然后vnc到中间服务器，然后再bbb。。。。总不能这边修改一行代码再去vnc上重新敲一遍吧。。。于是萌生了打洞的想法（操作完全违规，请参考员工离职手册，做好被fire的准备）先描述几个概念：ssh tunnel...</summary>
    
    
    
    
    <category term="CSDN" scheme="http://vball.fun/tags/CSDN/"/>
    
  </entry>
  
  <entry>
    <title>管道日了狗-while read line大坑</title>
    <link href="http://vball.fun/2017/04/25/z_csdn_051_70763496/"/>
    <id>http://vball.fun/2017/04/25/z_csdn_051_70763496/</id>
    <published>2017-04-25T03:02:00.000Z</published>
    <updated>2021-12-08T08:49:11.908Z</updated>
    
    <content type="html"><![CDATA[<p>想着定义个全局变量,用sh 函数修改,结果遇到了管道的坑,先贴错误代码:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">HEIGHT=<span class="string">&quot;null&quot;</span></span><br><span class="line">WIDTH=<span class="string">&quot;default&quot;</span></span><br><span class="line">SRC_YUV=</span><br><span class="line">DEST_DIR=</span><br><span class="line">MAX_QP=</span><br><span class="line">MIN_QP=</span><br><span class="line"></span><br><span class="line"><span class="built_in">read_para_from_file</span>()&#123;</span><br><span class="line">cat $<span class="number">1</span> | <span class="keyword">while</span> read line  ##划重点---&gt;管道的最后一个命令都是在子Shell中执行的。这意味着在子Shell中赋值的变量对父Shell是无效的。所以当我们将管道输出传送到一个循环结构，填入随后将要使用的变量，那么就会产生很多问题。一旦循环完成，其所依赖的变量就不存在了。</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">echo $line</span><br><span class="line">t_name=`echo $line |awk -F <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>`</span><br><span class="line">t_value=`echo $line |awk -F <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line">echo <span class="string">&quot;k-v :$t_name -&gt; $t_value&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ $t_name = <span class="string">&quot;width&quot;</span> ] ; then</span><br><span class="line">echo <span class="string">&quot;1 -&gt;&quot;</span>$WIDTH</span><br><span class="line">WIDTH=$t_value</span><br><span class="line">echo <span class="string">&quot;1 -&gt;&quot;</span>$WIDTH</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $t_name = <span class="string">&quot;height&quot;</span> ] ; then</span><br><span class="line">echo <span class="string">&quot;2 -&gt;&quot;</span>$HEIGHT</span><br><span class="line">HEIGHT=$t_value</span><br><span class="line">echo <span class="string">&quot;2 -&gt;&quot;</span>$HEIGHT</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $t_name = <span class="string">&quot;src_yuv&quot;</span> ] ; then</span><br><span class="line">SRC_YUV=$t_value</span><br><span class="line">echo <span class="string">&quot;3 -&gt;&quot;</span>$SRC_YUV</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $t_name = <span class="string">&quot;dest_dir&quot;</span> ] ; then</span><br><span class="line">DEST_DIR=$t_value</span><br><span class="line">echo <span class="string">&quot;4&quot;</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $t_name = <span class="string">&quot;max_qp&quot;</span> ] ; then</span><br><span class="line">MIN_QP=$t_value</span><br><span class="line">echo <span class="string">&quot;5&quot;</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $t_name = <span class="string">&quot;min_qp&quot;</span> ] ; then</span><br><span class="line">MAX_QP=$t_value</span><br><span class="line">echo <span class="string">&quot;6&quot;</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">fi</span><br><span class="line">echo <span class="string">&quot;get nothing -&gt; &quot;</span>$line</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">show_global_para</span>()&#123;</span><br><span class="line">echo <span class="string">&quot;show global var -&gt;&quot;</span></span><br><span class="line">echo <span class="string">&quot;WIDTH -&gt; $WIDTH&quot;</span></span><br><span class="line">echo <span class="string">&quot;HEIGHT -&gt; $HEIGHT&quot;</span></span><br><span class="line">echo <span class="string">&quot;SRC_YUV -&gt; $SRC_YUV&quot;</span></span><br><span class="line">echo <span class="string">&quot;DEST_DIR -&gt; $DEST_DIR&quot;</span></span><br><span class="line">echo <span class="string">&quot;MAX_QP -&gt; $MAX_QP&quot;</span></span><br><span class="line">echo <span class="string">&quot;MIN_QP -&gt; $MIN_QP&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">read_para_from_file $<span class="number">1</span></span><br><span class="line">show_global_para</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">管道的最后一个命令都是在子Shell中执行的。这意味着在子Shell中赋值的变量对父Shell是无效的。所以当我们将管道输出传送到一个循环结构，填入随后将要使用的变量，那么就会产生很多问题。一旦循环完成，其所依赖的变量就不存在了。</span><br></pre></td></tr></table></figure><p>修改后:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">HEIGHT=&quot;null&quot;</span><br><span class="line">WIDTH=&quot;default&quot;</span><br><span class="line">SRC_YUV=</span><br><span class="line">DEST_DIR=</span><br><span class="line">MAX_QP=</span><br><span class="line">MIN_QP=</span><br><span class="line"></span><br><span class="line">read_para_from_file()&#123;</span><br><span class="line">#cat $1 | while read line</span><br><span class="line">#lines=`cat $1`</span><br><span class="line">while read line  ##划重点</span><br><span class="line">do</span><br><span class="line">echo $line</span><br><span class="line">t_name=`echo $line |awk -F &#x27; &#x27; &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">t_value=`echo $line |awk -F &#x27; &#x27; &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">echo &quot;k-v :$t_name -&gt; $t_value&quot;</span><br><span class="line">if [ $t_name = &quot;width&quot; ] ; then</span><br><span class="line">echo &quot;1 -&gt;&quot;$WIDTH</span><br><span class="line">WIDTH=$t_value</span><br><span class="line">echo &quot;1 -&gt;&quot;$WIDTH</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">if [ $t_name = &quot;height&quot; ] ; then</span><br><span class="line">echo &quot;2 -&gt;&quot;$HEIGHT</span><br><span class="line">HEIGHT=$t_value</span><br><span class="line">echo &quot;2 -&gt;&quot;$HEIGHT</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">if [ $t_name = &quot;src_yuv&quot; ] ; then</span><br><span class="line">SRC_YUV=$t_value</span><br><span class="line">echo &quot;3 -&gt;&quot;$SRC_YUV</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">if [ $t_name = &quot;dest_dir&quot; ] ; then</span><br><span class="line">DEST_DIR=$t_value</span><br><span class="line">echo &quot;4&quot;</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">if [ $t_name = &quot;max_qp&quot; ] ; then</span><br><span class="line">MIN_QP=$t_value</span><br><span class="line">echo &quot;5&quot;</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">if [ $t_name = &quot;min_qp&quot; ] ; then</span><br><span class="line">MAX_QP=$t_value</span><br><span class="line">echo &quot;6&quot;</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">echo &quot;get nothing -&gt; &quot;$line</span><br><span class="line">done  &lt; $1  ##重定向</span><br><span class="line">&#125;</span><br><span class="line">show_global_para()&#123;</span><br><span class="line">echo &quot;show global var -&gt;&quot;</span><br><span class="line">echo &quot;WIDTH -&gt; $WIDTH&quot;</span><br><span class="line">echo &quot;HEIGHT -&gt; $HEIGHT&quot;</span><br><span class="line">echo &quot;SRC_YUV -&gt; $SRC_YUV&quot;</span><br><span class="line">echo &quot;DEST_DIR -&gt; $DEST_DIR&quot;</span><br><span class="line">echo &quot;MAX_QP -&gt; $MAX_QP&quot;</span><br><span class="line">echo &quot;MIN_QP -&gt; $MIN_QP&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">read_para_from_file $1</span><br><span class="line">show_global_para</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">想着定义个全局变量,用sh 函数修改,结果遇到了管道的坑,先贴错误代码:#!/bin/shHEIGHT=&quot;null&quot;WIDTH=&quot;default&quot;SRC_YUV=DEST_DIR=MAX_QP=MIN_QP=read_para_from_file(){	cat $1 | while read line</summary>
    
    
    
    
    <category term="CSDN" scheme="http://vball.fun/tags/CSDN/"/>
    
  </entry>
  
  <entry>
    <title>遍历文件和文件夹oswalk</title>
    <link href="http://vball.fun/2016/11/07/z_csdn_007_53069881/"/>
    <id>http://vball.fun/2016/11/07/z_csdn_007_53069881/</id>
    <published>2016-11-07T04:02:00.000Z</published>
    <updated>2021-12-08T08:49:11.904Z</updated>
    
    <content type="html"><![CDATA[<p>懂oswalk的就不要笑我了,我只是随笔记下之前的工作</p><p>执行效果类似于linux tree 命令, 遍历所有的文件,按照需求进行处理</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os, <span class="function">fnmatch</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">def <span class="title">all_files</span><span class="params">(root, patterns = <span class="string">&#x27;*&#x27;</span>, single_level = False, yield_folders=False)</span>:</span></span><br><span class="line"><span class="function">    patterns </span>= patterns.split(<span class="string">&#x27;;&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> path, subdirs, files in os.walk(root):</span><br><span class="line">        <span class="keyword">if</span> yield_folders:</span><br><span class="line">            files.extend(subdirs)</span><br><span class="line">        files.sort()</span><br><span class="line">        <span class="keyword">for</span> name in files:</span><br><span class="line">            <span class="keyword">for</span> pattern in patterns:</span><br><span class="line">                <span class="keyword">if</span> fnmatch.fnmatch(name, pattern):</span><br><span class="line">                    yield os.path.join(path,name)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> single_level:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> path in all_files(<span class="string">&#x27;/home/dan/ownCloud/Multimedia/GPU/new/GPU&#x27;</span>,<span class="string">&#x27;*.py;*html;*pdf&#x27;</span>):</span><br><span class="line">        print path</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;懂oswalk的就不要笑我了,我只是随笔记下之前的工作&lt;/p&gt;
&lt;p&gt;执行效果类似于linux tree 命令, 遍历所有的文件,按照需求进行处理&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;</summary>
      
    
    
    
    
    <category term="CSDN" scheme="http://vball.fun/tags/CSDN/"/>
    
  </entry>
  
  <entry>
    <title>python 发送邮件,支持邮件内容定义</title>
    <link href="http://vball.fun/2016/11/07/z_csdn_062_53069439/"/>
    <id>http://vball.fun/2016/11/07/z_csdn_062_53069439/</id>
    <published>2016-11-07T03:49:00.000Z</published>
    <updated>2021-12-08T08:49:11.908Z</updated>
    
    <content type="html"><![CDATA[<p>很久很久以前的事情了,今天整理发现一团代码,扔生来吧</p><p>花了很多搞了gerrit 服务docker化, 账户添加完毕,老大说你给他们每个人发个邮件通知,另外把邮件内容写的漂亮点,格式化一下,顺便把使用向导镐一下,使用向导中直接使用目标的用户名密码…..—囧…..几十号人,挨个发邮件,顺便把用户名密码更新一进去,死人的会.</p><p>功能:</p><p>1:从邮件用户名列表读取用户名和密码</p><p>2: 载入邮件header信息</p><p>3: 载入email内容信息,并替换其中的关键字为对应的用户名和密码</p><p>so ,写个代码吧,</p><p>载入一个邮件模板,然后替换其中的用户名密码标志,按照用户名挨个发呗..</p><p>直接贴代码了</p><p>发送代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">#导入smtplib和MIMEText</span></span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">import</span>  base64</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">mailto_list=[<span class="string">&quot;bright.jiang@infotm.com&quot;</span>,<span class="string">&quot;sam.zhou@infotm.com&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">########smtp setting#############</span></span><br><span class="line">mail_host=<span class="string">&quot;smtp.exmail.qq.com&quot;</span></span><br><span class="line">mail_user=<span class="string">&quot;xxx@xxx.com&quot;</span></span><br><span class="line">mail_pass=<span class="string">&quot;xxx&quot;</span></span><br><span class="line">mail_postfix=<span class="string">&quot;xxx.com&quot;</span></span><br><span class="line"><span class="comment">######################</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_mail</span>(<span class="params">to_list,sub,content,<span class="built_in">type</span>=<span class="string">&#x27;html&#x27;</span></span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    to_list:发给谁</span></span><br><span class="line"><span class="string">    sub:主题</span></span><br><span class="line"><span class="string">    content:内容</span></span><br><span class="line"><span class="string">    send_mail(&quot;aaa@126.com&quot;,&quot;sub&quot;,&quot;content&quot;)</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    me=mail_user+<span class="string">&quot;&quot;</span></span><br><span class="line">    msg = MIMEText(content,_subtype=<span class="built_in">type</span>,_charset=<span class="string">&#x27;UTF-8&#x27;</span>)</span><br><span class="line">    msg[<span class="string">&#x27;Subject&#x27;</span>] = sub</span><br><span class="line">    msg[<span class="string">&#x27;From&#x27;</span>] = me</span><br><span class="line">    msg[<span class="string">&#x27;To&#x27;</span>] = <span class="string">&quot;;&quot;</span>.join(to_list)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = smtplib.SMTP()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;@@!@@&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span> s.connect(mail_host)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;@@!@@&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span> s.login(mail_user,mail_pass)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;@@!@@&quot;</span>)</span><br><span class="line">        s.sendmail(me, to_list, msg.as_string())</span><br><span class="line"></span><br><span class="line">        s.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> Exception, e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;@@!@@&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span> <span class="built_in">str</span>(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_email_title</span>(<span class="params">file</span>) :</span></span><br><span class="line">    <span class="keyword">try</span> :</span><br><span class="line">        fd = codecs.<span class="built_in">open</span>(file,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;UTF-8&#x27;</span>)</span><br><span class="line">        data =  fd.read()</span><br><span class="line">        fd.close()</span><br><span class="line">    <span class="keyword">except</span> :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;read mail title error&quot;</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_email_content_template</span>(<span class="params">file</span>) :</span></span><br><span class="line">    <span class="keyword">try</span> :</span><br><span class="line">        fd = <span class="built_in">open</span>(file,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        data =  fd.read()</span><br><span class="line">        fd.close()</span><br><span class="line">    <span class="keyword">except</span> :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;read mail content error&quot;</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user_list</span>(<span class="params">file</span>):</span></span><br><span class="line">    <span class="keyword">try</span> :</span><br><span class="line">        fd = <span class="built_in">open</span>(file,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        data =  fd.readlines()</span><br><span class="line">        fd.close()</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(data) )</span><br><span class="line">    <span class="keyword">except</span> :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;read user list error&quot;</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line">    userPass = []</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> data :</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(line) == <span class="number">0</span> :</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> line[<span class="number">0</span>] <span class="keyword">in</span> [<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;\n&#x27;</span>] :</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        userPass.append(line.split() )</span><br><span class="line">    <span class="keyword">return</span> userPass</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_email_from_template</span>(<span class="params">template,userPass</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(userPass[<span class="number">0</span>]))</span><br><span class="line">    temp= userPass[<span class="number">0</span>].split(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">    big_name = <span class="string">&quot;&quot;</span>.join([temp[<span class="number">0</span>][<span class="number">0</span>:<span class="number">1</span>].upper(),temp[<span class="number">0</span>][<span class="number">1</span>:],<span class="string">&quot; &quot;</span>,temp[<span class="number">1</span>][<span class="number">0</span>:<span class="number">1</span>].upper(),temp[<span class="number">1</span>][<span class="number">1</span>:] ] )</span><br><span class="line">    <span class="built_in">print</span>(big_name)</span><br><span class="line">    template = template.replace(<span class="string">&quot;##USER_NAME&quot;</span>,userPass[<span class="number">0</span>]).replace(<span class="string">&quot;##USER_PASS&quot;</span>,userPass[<span class="number">1</span>]).replace(<span class="string">&quot;##USER_FULL&quot;</span>,big_name)</span><br><span class="line">    <span class="keyword">return</span> template</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    parser = OptionParser(usage=<span class="string">&quot;usage:%prog [optinos] filepath&quot;</span>)</span><br><span class="line">    parser.add_option(<span class="string">&quot;-u&quot;</span>, <span class="string">&quot;--userfile&quot;</span>,</span><br><span class="line">                    action = <span class="string">&quot;store&quot;</span>,</span><br><span class="line">                    <span class="built_in">type</span> = <span class="string">&#x27;str&#x27;</span>,</span><br><span class="line">                    dest = <span class="string">&quot;userFile&quot;</span>,</span><br><span class="line">                    default = <span class="string">&quot;user.lst&quot;</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&quot;user list file ,will delete all users not include in the file and update the password in the file&quot;</span></span><br><span class="line">                    )</span><br><span class="line"></span><br><span class="line">    parser.add_option(<span class="string">&quot;-t&quot;</span>, <span class="string">&quot;--title&quot;</span>,</span><br><span class="line">                    action = <span class="string">&quot;store&quot;</span>,</span><br><span class="line">                    <span class="built_in">type</span> = <span class="string">&#x27;str&#x27;</span>,</span><br><span class="line">                    dest = <span class="string">&quot;title&quot;</span>,</span><br><span class="line">                    default = <span class="string">&quot;title.t&quot;</span>,</span><br><span class="line">                    <span class="built_in">help</span> = <span class="string">&quot;email tile template&quot;</span></span><br><span class="line">                    )</span><br><span class="line">    parser.add_option(<span class="string">&quot;-c&quot;</span>, <span class="string">&quot;--content&quot;</span>,</span><br><span class="line">                    action = <span class="string">&quot;store&quot;</span>,</span><br><span class="line">                    <span class="built_in">type</span> = <span class="string">&#x27;str&#x27;</span>,</span><br><span class="line">                    dest = <span class="string">&quot;content&quot;</span>,</span><br><span class="line">                    default = <span class="string">&quot;mail.t&quot;</span>,</span><br><span class="line">                    <span class="built_in">help</span> = <span class="string">&quot;mail content template&quot;</span></span><br><span class="line">                    )</span><br><span class="line">    (options, args) = parser.parse_args()</span><br><span class="line">    userList = get_user_list(options.userFile)</span><br><span class="line">    <span class="built_in">print</span> (userList)</span><br><span class="line"></span><br><span class="line">    mail_title =  get_email_title(options.title)</span><br><span class="line">    mail_content = get_email_content_template(options.content)</span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> userList :</span><br><span class="line">        <span class="built_in">print</span> user</span><br><span class="line">        send_user =  <span class="string">&quot;%s@infotm.com&quot;</span>%(user[<span class="number">0</span>])</span><br><span class="line">        content = update_email_from_template(mail_content,user)</span><br><span class="line"><span class="comment">##        break</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;begin send&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> send_mail([send_user ],mail_title,content):</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;send to %s  ok&quot;</span> %(user[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;send to %s  fail&quot;</span> %(user[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>收件人列表:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#user password file ,just edit it ,will update new password to the passwd file</span></span><br><span class="line"><span class="meta">#format :user  password  ,no space in the start char</span></span><br><span class="line"><span class="meta">#left password empty ,will generate randon password</span></span><br><span class="line"><span class="meta">#tools developed by Bright.Jiang</span></span><br><span class="line">#</span><br><span class="line">#BSP leader</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">warits.wang           236890</span></span><br><span class="line">#</span><br><span class="line">#BSP</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">bright.jiang          098765</span></span><br><span class="line"><span class="meta">#sam.zhou  099032</span></span><br></pre></td></tr></table></figure><p>邮件主题:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Gerrit服务器升级通知</span><br></pre></td></tr></table></figure><p>邮件内容:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Dear All :     </span><br><span class="line"></span><br><span class="line">       为提升Gerrit服务器稳定性以及满足空间的需求，我们将从11月16日（下周一）开始统一切换到新服务器。新服务器的代码为旧服务器11/14日最新的版本。为保证代码统一，原服务器将同时停用。届时请大家花几分钟时间重新配置自已的Gerrit环境。</span><br><span class="line"></span><br><span class="line">       1. 使用以下用户名和密码登录新的Gerrit服务器: http://gerrit.in.infotm.com .</span><br><span class="line"></span><br><span class="line">           新的用户名密码为：##USER_NAME             ##USER_PASS      </span><br><span class="line"></span><br><span class="line">       2. 点击右上角Anonymous Coward -&gt; Settings -&gt; Contact  Information，添写自己的个人信息，如##USER_FULL，(统一格式：英文名空格姓，首字母大写)。点击Register New Email，添写自己的邮箱：##USER_NAME@infotm.com(注意，请使用公司新邮箱)，最后点击Save Changes</span><br><span class="line"></span><br><span class="line">       3.  添加SSH Public Key，左边选则SSH Public Keys，执行命令 </span><br><span class="line"></span><br><span class="line">            $cat ~/.ssh/id_rsa.pub </span><br><span class="line"></span><br><span class="line">            复制全部内容到gerrit ssh key文本框中，点击Add。 如果没有id_rsa.pub，使用以下命令生成：</span><br><span class="line"></span><br><span class="line">            $ ssh-keygen -t rsa  -C &quot;##USER_NAME@infotm.com&quot;</span><br><span class="line"></span><br><span class="line">       4.  修改本地git配置：</span><br><span class="line"></span><br><span class="line">$ git config --global user.name   &quot;##USER_NAME&quot;</span><br><span class="line"></span><br><span class="line">             $ git config --global user.email  &quot;##USER_NAME@infotm.com&quot;    </span><br><span class="line"></span><br><span class="line">       5.  更新本地repo，需要使用新的repo地址重新repo init ， 常用的repo地址可以从Wiki上检索：常用Repo地址</span><br><span class="line"></span><br><span class="line">       6.  常见的repo使用的错误，也会在wiki上不定期更新，欢迎各位参阅和修订，也欢迎 大家把工作中的经验总结更新到Wiki页面。</span><br><span class="line"></span><br><span class="line">Enjoy It!</span><br><span class="line"></span><br><span class="line">Gerrit Admin</span><br></pre></td></tr></table></figure><p>仅作参考,仅作收藏,不惜勿喷</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;很久很久以前的事情了,今天整理发现一团代码,扔生来吧&lt;/p&gt;
&lt;p&gt;花了很多搞了gerrit 服务docker化, 账户添加完毕,老大说你给他们每个人发个邮件通知,另外把邮件内容写的漂亮点,格式化一下,顺便把使用向导镐一下,使用向导中直接使用目标的用户名密码…..—囧…..</summary>
      
    
    
    
    
    <category term="CSDN" scheme="http://vball.fun/tags/CSDN/"/>
    
  </entry>
  
</feed>
