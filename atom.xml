<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Godvmxi Blog</title>
  
  <subtitle>Ball Virtual Blog | 蛋种的博客</subtitle>
  <link href="http://vball.fun/atom.xml" rel="self"/>
  
  <link href="http://vball.fun/"/>
  <updated>2022-05-19T09:41:15.170Z</updated>
  <id>http://vball.fun/</id>
  
  <author>
    <name>Bright Jiang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ubuntu18 install vnc server and start xfce</title>
    <link href="http://vball.fun/2022/01/29/ubuntu18-install-vnc/"/>
    <id>http://vball.fun/2022/01/29/ubuntu18-install-vnc/</id>
    <published>2022-01-29T02:16:44.000Z</published>
    <updated>2022-05-19T09:41:15.170Z</updated>
    
    <content type="html"><![CDATA[<p>核心两块： xfc4 and vnc4server</p><h1><span id="code-talk">code talk</span></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install xfce4* vnc4server</span><br></pre></td></tr></table></figure><h1><span id="setup-xstart">setup xstart</span></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.vnc/xstartup </span><br><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">xrdb $HOME/.Xresources</span><br><span class="line">unset SESSION_MANAGER</span><br><span class="line">unset DBUS_SESSION_BUS_ADDRESS</span><br><span class="line">startxfce4 &amp;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1><span id="add-run-exex-to-xstartup">add run exex to xstartup</span></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ~/.vcn/xstartup</span><br></pre></td></tr></table></figure><h1><span id="start-vcn4server">Start vcn4server</span></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vnc4server </span><br></pre></td></tr></table></figure><h1><span id="enjoy-it">Enjoy it</span></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;核心两块： xfc4 and vnc4server&lt;/p&gt;
&lt;h1&gt;&lt;span id=&quot;code-talk&quot;&gt;code talk&lt;/span&gt;&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;</summary>
      
    
    
    
    
    <category term="Ubuntu" scheme="http://vball.fun/tags/Ubuntu/"/>
    
    <category term="VNC" scheme="http://vball.fun/tags/VNC/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu18.04 安装wine以及添加mono和gecko打开简单.net应用的方法</title>
    <link href="http://vball.fun/2022/01/29/ubuntu18-install-wine-and-font/"/>
    <id>http://vball.fun/2022/01/29/ubuntu18-install-wine-and-font/</id>
    <published>2022-01-29T01:48:30.000Z</published>
    <updated>2022-05-19T09:41:15.170Z</updated>
    
    <content type="html"><![CDATA[<p>考虑到国内网络的内容隔天可能就没有，所以做一个记录吧。<br>转载自： <a href="https://www.cnblogs.com/hfclszs/p/13760531.html">https://www.cnblogs.com/hfclszs/p/13760531.html</a><br>安装wine 但是过程略坑..这里简单说一下总结之后的过程.</p><ol start="2"><li>第一步安装wine相关内容</li></ol><p>查了下有winehq和wine两种. 我认为应该没啥区别. 但是第一次采坑是用的winhq但是爬出坑的用的是 wine.. 所以简单记录一下 wine的过程.</p><ol start="3"><li>ubuntu现在很牛B 都不需要改apt-get的source.list就可以直接安装了.</li></ol><p>安装wine</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install wine64 mono-complete </span><br><span class="line"><span class="comment"># 注意一定不要使用 root用户进行安装.</span></span><br><span class="line"><span class="comment"># 安装mono 用来开启.net应用</span></span><br><span class="line">sudo apt-get install axel</span><br><span class="line"><span class="comment"># 多线程下载。哈哈</span></span><br></pre></td></tr></table></figure><ol start="4"><li>但是安装完之后发现还是不行. 会报错 提示没有 一些gecko进行html的渲染操作.</li></ol><p>百度,google一翻得到的结果是需要安装gecko还有mono的内容. 只能从网上下载.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">wine的地址</span><br><span class="line">http://dl.winehq.org/wine/wine-mono/4.9.4/wine-mono-4.9.4.msi</span><br><span class="line">gecko的地址</span><br><span class="line">http://dl.winehq.org/wine/wine-gecko/2.47/wine_gecko-2.47-x86_64.msi</span><br><span class="line">这里面我被坑的基本上生活不能自理了.</span><br><span class="line">````</span><br><span class="line"></span><br><span class="line">下载完成之后需要放到/home/ubuntu1804/.wine/的目录下面执行安装</span><br><span class="line"></span><br><span class="line">注意一定要是放到 wine相关目录里面不然就是白瞎会报错. 提示</span><br><span class="line"></span><br><span class="line">err:mscoree:LoadLibraryShim error reading registry key <span class="keyword">for</span> installroot</span><br><span class="line">安装命令很简单</span><br><span class="line">```bash</span><br><span class="line">wine   msiexec /i  wine-mono-4.9.4.msi</span><br><span class="line">wine   msiexec /i  wine_gecko-2.47-x86_64.msi</span><br></pre></td></tr></table></figure><p>5.之后就可以了 不过需要改进一下中文乱码的问题等有时间了再看, </p><ol start="6"><li>解决中文显示的问题</li></ol><p>来源:<br><a href="http://blog.sina.com.cn/s/blog_686efeba0102vwtj.html">http://blog.sina.com.cn/s/blog_686efeba0102vwtj.html</a><br>3、设置中文问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">先把字体simsun.ttc（在你的windows的安装目录里的font文件夹里找，找不到可以从网上下到） 复制到 /home/你的用户名/.wine/drive_c/windows/fonts 文件夹中，要显示隐藏文件夹按Ctrl+H</span><br><span class="line"></span><br><span class="line">修改注册表，在命令行输入 gedit ~/.wine/system.reg</span><br><span class="line"></span><br><span class="line">找到“[System\\CurrentControlSet\\Hardware Profiles\\Current\\Software\\Fonts]”，将其中的““LogPixels”=dword:00000060”改成 ““LogPixels”=dword:00000070“。</span><br><span class="line"></span><br><span class="line">再找到”[Software\\Microsoft\\Windows NT\\CurrentVersion\\FontSubstitutes] xxxx“项，将其中的”MS Shell Dlg“相关的两项修改成如下内容（即更换字体为宋体）：</span><br><span class="line"></span><br><span class="line">“MS Shell Dlg”=”SimSun”</span><br><span class="line">“MS Shell Dlg 2&amp;Prime;=”SimSun”</span><br><span class="line"></span><br><span class="line">然后：gedit ~/.wine/drive_c/windows/win.ini</span><br><span class="line"></span><br><span class="line">在其中加上（如果没有），有的话修改成如下</span><br><span class="line"></span><br><span class="line">[Desktop]</span><br><span class="line">menufontsize=13</span><br><span class="line">messagefontsize=13</span><br><span class="line">statusfontsize=13</span><br><span class="line">IconTitleSize=13</span><br></pre></td></tr></table></figure><p>现在中文显示应该正常了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;考虑到国内网络的内容隔天可能就没有，所以做一个记录吧。&lt;br&gt;转载自： &lt;a href=&quot;https://www.cnblogs.com/hfclszs/p/13760531.html&quot;&gt;https://www.cnblogs.com/hfclszs/p/13760531.</summary>
      
    
    
    
    
    <category term="Ubuntu" scheme="http://vball.fun/tags/Ubuntu/"/>
    
    <category term="Wine" scheme="http://vball.fun/tags/Wine/"/>
    
    <category term="Mono" scheme="http://vball.fun/tags/Mono/"/>
    
    <category term="Gecko" scheme="http://vball.fun/tags/Gecko/"/>
    
  </entry>
  
  <entry>
    <title>C bit And Big Little Endian</title>
    <link href="http://vball.fun/2021/12/16/c-bit-and-big-little-end/"/>
    <id>http://vball.fun/2021/12/16/c-bit-and-big-little-end/</id>
    <published>2021-12-16T23:30:49.000Z</published>
    <updated>2022-05-19T09:41:15.134Z</updated>
    
    <content type="html"><![CDATA[<p>The tencent engineer asked a question about the C bit, I could not answer it with a pretty description. so there is a summary for it.</p><h1><span id="bit-little-endule">Bit Little Endule</span></h1><p>for exmaple: 32bit int（uint32_t） data : 0x12345678，store in address : 0x08004000:</p><table><thead><tr><th>Address</th><th>Little Endian</th><th>Big Endian</th></tr></thead><tbody><tr><td>0x08004003</td><td>0x12</td><td>0x78</td></tr><tr><td>0x08004002</td><td>0x34</td><td>0x56</td></tr><tr><td>0x08004001</td><td>0x56</td><td>0x34</td></tr><tr><td>0x08004000</td><td>0x78</td><td>0x12</td></tr></tbody></table><h1><span id="cpu">CPU</span></h1><p>little-endian</p><blockquote><p>X86<br>ARM(default)</p></blockquote><p>big-endian</p><blockquote><p>PowerPC<br>IBM</p></blockquote><h2><span id="host-to-network-bit">Host to network bit</span></h2><blockquote><p>htonl()<br>htons()</p></blockquote><h2><span id="network-to-host-bit">Network to host bit</span></h2><blockquote><p>ntohl()<br>ntohs()</p></blockquote><h1><span id="check-big-amp-little-endian">Check Big &amp; Little Endian</span></h1><h2><span id="int-char-check">Int char check</span></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;   </span><br><span class="line"><span class="keyword">char</span> *p = (<span class="keyword">char</span> *)&amp;i;   </span><br><span class="line"><span class="keyword">if</span>(*p == <span class="number">1</span>)     </span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Little Endian&quot;</span>); </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Big Endian&quot;</span>);</span><br></pre></td></tr></table></figure><h2><span id="union-check">union check</span></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">checkCPUendian</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="class"><span class="keyword">union</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> b; </span><br><span class="line">  &#125;c;</span><br><span class="line">  c.a = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> (c.b == <span class="number">1</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1><span id="parse-bit-field">Parse bit field</span></h1><p>We need to parse the data protocal, and there are many key-value in bit mode, usually we will use the right shift to get the target bit.<br><img src="/bit.png"></p><blockquote><p>D will be :  ((pucPktAddr + 3)&gt;&gt;6) &amp; 0x3  –point shift 3 bytes, and right shift 6 bit，then apply mask 0x3</p></blockquote><blockquote><p>E will be :  ((pucPktAddr + 3)&gt;&gt;3) &amp; 0x7</p></blockquote><p>Now we try bit mode</p><h1><span id="bit-mode">Bit mode</span></h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">XXX</span> &#123;</span></span><br><span class="line"><span class="number">2</span>     <span class="keyword">unsigned</span> <span class="keyword">char</span> D:<span class="number">2</span></span><br><span class="line"><span class="number">3</span>     <span class="keyword">unsigned</span> <span class="keyword">char</span> E:<span class="number">3</span></span><br><span class="line"><span class="number">4</span>     <span class="keyword">unsigned</span> <span class="keyword">char</span> F:<span class="number">3</span>  </span><br><span class="line"><span class="number">5</span> &#125;</span><br></pre></td></tr></table></figure><p>then we can use xxx-&gt;D，xxx-&gt;E，xxx-&gt;F to access the data，but this is only in big end mode, if you want to use light end mode,try to reverse it:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">XXX</span> &#123;</span></span><br><span class="line"><span class="number">2</span>     <span class="keyword">unsigned</span> <span class="keyword">char</span> F:<span class="number">3</span></span><br><span class="line"><span class="number">3</span>     <span class="keyword">unsigned</span> <span class="keyword">char</span> E:<span class="number">3</span></span><br><span class="line"><span class="number">4</span>     <span class="keyword">unsigned</span> <span class="keyword">char</span> D:<span class="number">2</span>  </span><br><span class="line"><span class="number">5</span> &#125;</span><br></pre></td></tr></table></figure><h1><span id="大小端序数据相互转换函数">大小端序数据相互转换函数</span></h1><h2><span id="将unsigned-char数组转换成大端序整数">将unsigned char数组转换成“大端序”整数；</span></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*    Function:        ConverseArrayToBeUI</span></span><br><span class="line"><span class="comment">*    Description:    将无符号字符数组数据转换成“大端序”整数</span></span><br><span class="line"><span class="comment">*    Parameter:        srcArray    --[in]    源数组数据</span></span><br><span class="line"><span class="comment">*                    desBeData    --[out]    目标“大端序”整数</span></span><br><span class="line"><span class="comment">*    Return            0    成功</span></span><br><span class="line"><span class="comment">*                    非0    失败</span></span><br><span class="line"><span class="comment">*    Note:            </span></span><br><span class="line"><span class="comment">*    Other:</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> MULCONVERSE_CALL <span class="title">ConverseArrayToBeUI</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *srcArray,<span class="keyword">unsigned</span> <span class="keyword">int</span> *desBeData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (srcArray == NULL_POINT || desBeData == NULL_POINT)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERR_NULL_POINT;</span><br><span class="line">    &#125;</span><br><span class="line">    *desBeData = (<span class="keyword">unsigned</span> <span class="keyword">int</span>)(srcArray[<span class="number">0</span>]&lt;&lt;<span class="number">24</span>) + (<span class="keyword">unsigned</span> <span class="keyword">int</span>)(srcArray[<span class="number">1</span>]&lt;&lt;<span class="number">16</span>) + </span><br><span class="line">                    (<span class="keyword">unsigned</span> <span class="keyword">int</span>)(srcArray[<span class="number">2</span>]&lt;&lt;<span class="number">8</span>) + (<span class="keyword">unsigned</span> <span class="keyword">int</span>)srcArray[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">return</span> _SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="将unsigned-char数组转换成小端序整数">将unsigned char数组转换成“小端序”整数；</span></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*    Function:        ConverseArrayToLeUI</span></span><br><span class="line"><span class="comment">*    Description:    将无符号字符数组数据转换成“小端序”整数</span></span><br><span class="line"><span class="comment">*    Parameter:        srcArray    --[in]    源数组数据</span></span><br><span class="line"><span class="comment">*                    desLeData    --[out]    目标“小端序”整数</span></span><br><span class="line"><span class="comment">*    Return            0    成功</span></span><br><span class="line"><span class="comment">*                    非0    失败</span></span><br><span class="line"><span class="comment">*    Note:            </span></span><br><span class="line"><span class="comment">*    Other:</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> MULCONVERSE_CALL <span class="title">ConverseArrayToLeUI</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *srcArray,<span class="keyword">unsigned</span> <span class="keyword">int</span> *desLeData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (srcArray == NULL_POINT || desLeData == NULL_POINT)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERR_NULL_POINT;</span><br><span class="line">    &#125;</span><br><span class="line">    *desLeData = (<span class="keyword">unsigned</span> <span class="keyword">int</span>)(srcArray[<span class="number">3</span>]&lt;&lt;<span class="number">24</span>) + (<span class="keyword">unsigned</span> <span class="keyword">int</span>)(srcArray[<span class="number">2</span>]&lt;&lt;<span class="number">16</span>) + </span><br><span class="line">                    (<span class="keyword">unsigned</span> <span class="keyword">int</span>)(srcArray[<span class="number">1</span>]&lt;&lt;<span class="number">8</span>) + (<span class="keyword">unsigned</span> <span class="keyword">int</span>)srcArray[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">return</span> _SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="将整数按照大端序格式存储在数组中">将整数按照“大端序”格式存储在数组中；</span></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*    Function:        ConverseUItoBeArray</span></span><br><span class="line"><span class="comment">*    Description:    将无符号整数转换成“大端序”存储的无符号字符数组</span></span><br><span class="line"><span class="comment">*    Parameter:        srcData        --[in]    源整数</span></span><br><span class="line"><span class="comment">*                    desBeArray    --[out]    目标“大端序”存储的数组数据</span></span><br><span class="line"><span class="comment">*    Return            0    成功</span></span><br><span class="line"><span class="comment">*                    非0    失败</span></span><br><span class="line"><span class="comment">*    Note:            </span></span><br><span class="line"><span class="comment">*    Other:</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> MULCONVERSE_CALL <span class="title">ConverseUItoBeArray</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> srcData,<span class="keyword">unsigned</span> <span class="keyword">char</span> *desBeArray)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (desBeArray == NULL_POINT)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERR_NULL_POINT;</span><br><span class="line">    &#125;</span><br><span class="line">    desBeArray[<span class="number">0</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(srcData&gt;&gt;<span class="number">24</span>);</span><br><span class="line">    desBeArray[<span class="number">1</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(srcData&gt;&gt;<span class="number">16</span>);</span><br><span class="line">    desBeArray[<span class="number">2</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(srcData&gt;&gt;<span class="number">8</span>);</span><br><span class="line">    desBeArray[<span class="number">3</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)srcData;</span><br><span class="line">    <span class="keyword">return</span> _SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="将整数按照小端序格式存储在数组中">将整数按照“小端序”格式存储在数组中。</span></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*    Function:        ConverseUItoLeArray</span></span><br><span class="line"><span class="comment">*    Description:    将无符号整数转换成“小端序”存储的无符号字符数组</span></span><br><span class="line"><span class="comment">*    Parameter:        srcData        --[in]    源整数</span></span><br><span class="line"><span class="comment">*                    desLeArray    --[out]    目标“小端序”存储的数组数据</span></span><br><span class="line"><span class="comment">*    Return            0    成功</span></span><br><span class="line"><span class="comment">*                    非0    失败</span></span><br><span class="line"><span class="comment">*    Note:            </span></span><br><span class="line"><span class="comment">*    Other:</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> MULCONVERSE_CALL <span class="title">ConverseUItoLeArray</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> srcData,<span class="keyword">unsigned</span> <span class="keyword">char</span> *desLeArray)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (desLeArray == NULL_POINT)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERR_NULL_POINT;</span><br><span class="line">    &#125;</span><br><span class="line">    desLeArray[<span class="number">3</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(srcData&gt;&gt;<span class="number">24</span>);</span><br><span class="line">    desLeArray[<span class="number">2</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(srcData&gt;&gt;<span class="number">16</span>);</span><br><span class="line">    desLeArray[<span class="number">1</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(srcData&gt;&gt;<span class="number">8</span>);</span><br><span class="line">    desLeArray[<span class="number">0</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)srcData;</span><br><span class="line">    <span class="keyword">return</span> _SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="big-endian-to-little-endian">Big-Endian to Little-Endian</span></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BigtoLittle16(A) ((((uint16)(A) &amp; 0xff00) &gt;&gt; 8) | (((uint16)(A) &amp; 0x00ff) &lt;&lt; 8))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BigtoLittle32(A) ((((uint32)(A) &amp; 0xff000000) &gt;&gt; 24) | (((uint32)(A) &amp; 0x00ff0000) &gt;&gt; 8) | \</span></span><br><span class="line"><span class="meta">             (((uint32)(A) &amp; 0x0000ff00) &lt;&lt; 8) | (((uint32)(A) &amp; 0x000000ff) &lt;&lt; 24))</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;The tencent engineer asked a question about the C bit, I could not answer it with a pretty description. so there is a summary for it.&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="C" scheme="http://vball.fun/tags/C/"/>
    
    <category term="Interview" scheme="http://vball.fun/tags/Interview/"/>
    
    <category term="Bit Endian" scheme="http://vball.fun/tags/Bit-Endian/"/>
    
    <category term="Little Endian" scheme="http://vball.fun/tags/Little-Endian/"/>
    
  </entry>
  
  <entry>
    <title>Video Codec Reference Code Summary</title>
    <link href="http://vball.fun/2021/12/16/codec-reference-summary/"/>
    <id>http://vball.fun/2021/12/16/codec-reference-summary/</id>
    <published>2021-12-16T06:52:11.000Z</published>
    <updated>2022-05-19T09:41:15.134Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="code-talk">Code talk</span></h1><p>I summary all main video codecs JM&#x2F;HM to github, you can find in : <a href="https://github.com/godvmxi/codec_refer_code">JM&#x2F;HM</a></p><h1><span id="why-do-this-useless-work">Why do this useless work</span></h1><p>The code can only build in the the legacy GCC, so I modify it to adapt to the modern GCC.</p><h1><span id="jvet-repo">JVET REPO</span></h1><p><a href="https://vcgit.hhi.fraunhofer.de/jvet">JVET REPO</a><br>All the codec reference code has been moved into a gitlab account (JVET), you can find all origin code.<br><img src="/jvet.png" alt="jvet.png"></p><h1><span id="todo-build-code-on-modern-gnu-gcc">TODO build code on modern GNU GCC</span></h1><p>GCC10 as a standard :</p><ul><li><input checked disabled type="checkbox"> JM build</li><li><input disabled type="checkbox"> HM build</li><li><input disabled type="checkbox"> SVC build</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;code-talk&quot;&gt;Code talk&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;I summary all main video codecs JM&amp;#x2F;HM to github, you can find in : &lt;a href=&quot;https://gi</summary>
      
    
    
    
    
    <category term="H264" scheme="http://vball.fun/tags/H264/"/>
    
    <category term="AVC" scheme="http://vball.fun/tags/AVC/"/>
    
    <category term="HEVC" scheme="http://vball.fun/tags/HEVC/"/>
    
    <category term="SVC" scheme="http://vball.fun/tags/SVC/"/>
    
  </entry>
  
  <entry>
    <title>H264/AVC 编解码器原理总结</title>
    <link href="http://vball.fun/2021/12/16/h264-avc-codec/"/>
    <id>http://vball.fun/2021/12/16/h264-avc-codec/</id>
    <published>2021-12-16T06:41:20.000Z</published>
    <updated>2022-05-19T09:41:15.166Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="h264x2favc的应用">H.264&#x2F;AVC的应用</span></h1><p>H.264 支持三个不同档次：</p><blockquote><p>基本档次：主要用于“视频会话”，如会议电视，可视电话，远程医疗、远程教学等；<br>扩展档次：主要用于网络的视频流，如视频点播；<br>主要档次：主要用于消费电子应用，如数字电视广播，数字视频存储等。</p></blockquote><h1><span id="h264x2favc编解码器">H.264&#x2F;AVC编解码器</span></h1><h2><span id="编码器">编码器</span></h2><p>H.264 编码器的功能组成如下图所示</p><p><img src="/h264_enc_flow_2.png"><br><img src="/h264_enc_flow.png"></p><h2><span id="解码器">解码器</span></h2><p>H.264解码器的功能组成如下图所示<br><img src="/h264_dec_flow.png"></p><h1><span id="h264x2favc的结构">H.264&#x2F;AVC的结构</span></h1><h2><span id="术语">术语</span></h2><h3><span id="场和帧">场和帧</span></h3><p>视频的一场或一帧可用来产生一个编码图像。通常，视频帧可分成两种类型：连续或隔行视频帧。在电视中，为减少大面积闪烁现象，把一帧分成两个隔行的场。显然，这时场内邻行之间的空间相关性较强，而帧内邻近行空间相关性强，因此活动量较小或静止的图像宜采用帧编码方式，对活动量较大的运动图像则宜采用场编码方式。</p><h3><span id="宏块-片">宏块、片</span></h3><p>一个编码图像通常划分成若干宏块组成，一个宏块由一个 16×16 亮度像素和附加的一个 8×8 Cb和一个 8×8 Cr 彩色像素块组成。每个图象中，若干宏块被排列成片的形式。<br>I 片只包含 I 宏块， P 片可包含 P 和 I 宏块，而 B 片可包含 B 和 I 宏块。<br>I 宏块利用从当前片中已解码的像素作为参考进行帧内预测（不能取其它片中的已解码像素作为参考进行帧内预测）。<br>P 宏块利用前面已编码图象作为参考图象进行帧内预测，一个帧内编码的宏块可进一步作宏块的分割：即 16×16、 16×8、 8×16 或 8×8 亮度像素块（以及附带的彩色像素）；如果选了 8×8 的子宏块，则可再分成各种子宏块的分割，其尺寸为 8×8、 8×4、 4×8 或 4×4 亮度像素块（以及附带的彩色像素）。<br>B 宏块则利用双向的参考图象（当前和未来的已编码图象帧）进行帧内预测。</p><h2><span id="档次和级">档次和级</span></h2><p>H.264 规定了三种档次，每个档次支持一组特定的编码功能如下图所示，并支持一类特定的应用。每一档次设置不同参数（如取样速率、图像尺寸、编码比特率等），得到编解码器性能不同的级。<br><img src="/h264_enc_profile.png"></p><blockquote><p>基本档次：利用 I 片和 P 片支持帧内和帧间编码，支持利用基于上下文的自适应的变长编码进行的熵编码（CAVLC）。主要用于可视电话、会议电视、无线通信等实时视频通信；<br>主要档次：支持隔行视频，采用 B 片的帧间编码和采用加权预测的帧内编码；支持利用基于上下文的自适应的算术编码（CABAC）。主要用于数字广播电视与数字视频存储；<br>扩展档次：支持码流之间有效的切换（SP 和 SI 片）、改进误码性能（数据分割），但不支持隔行视频和 CABAC。展档次包括了基本档次的所有功能，而不能包括主要档次的。</p></blockquote><p><a href="https://www.cnblogs.com/CoderTian/p/8596068.html">REF</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;h264x2favc的应用&quot;&gt;H.264&amp;#x2F;AVC的应用&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;H.264 支持三个不同档次：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;基本档次：主要用于“视频会话”，如会议电视，可视电话，远程医疗、远程教学等；&lt;br&gt;扩</summary>
      
    
    
    
    
    <category term="H264" scheme="http://vball.fun/tags/H264/"/>
    
    <category term="AVC" scheme="http://vball.fun/tags/AVC/"/>
    
  </entry>
  
  <entry>
    <title>CABAC vs CAVLC</title>
    <link href="http://vball.fun/2021/12/16/cabac-cavlc/"/>
    <id>http://vball.fun/2021/12/16/cabac-cavlc/</id>
    <published>2021-12-16T03:54:25.000Z</published>
    <updated>2022-05-19T09:41:15.134Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="什么是熵编码">什么是熵编码？</span></h1><p>熵编码压缩是一种无损压缩，其实现原理是使用新的编码来表示输入的数据，从而达到压缩的效果。常用的熵编码有游程编码，哈夫曼编码和CAVLC编码等。<br>CAVLC是在H.264&#x2F;MPEG-4AVC中使用的熵编码方式。在H.264中，CAVLC以zig-zag顺序用于对变换后的残差块进行编码。CAVLC是CABAC的替代品，虽然其压缩效率不如CABAC，但CAVLC实现简单，并且在所有的H.264profile中都支持。<br><img src="/flow.png"></p><h1><span id="cabac">CABAC</span></h1><p>CABAC: 基于上下文自适应的二进制算术编码(Context-based Adaptive Binary Arithmetic Coding)</p><h1><span id="cavlc">CAVLC</span></h1><p>CAVLC: 基于上下文自适应变长编码(Context-based Adaptive Variable Length Coding)</p><h1><span id="perf">Perf</span></h1><p>CABAC和CAVLC是H.264中的两种熵编码算法.通过序列foreman和coastguard对CABAC和CAVLC的压缩性能进行了比较,在给定的实验条件下得出CABAC的比特率比CAVLC节省5%～14%,并且随量化步长的增大,比特率节省增多.但是CABAC计算复杂度高,耗时比CAVLC长,</p><h2><span id="cabac编码详情">CABAC编码详情</span></h2><p>CABAC编码之所以能取得很高的压缩比，是因为：</p><blockquote><p>a) 根据每一个语法元素的上下文来选取预测模型;<br>b) 使用本地的统计数据来估计概率；<br>c) 使用算术编码而不是变长编码。</p></blockquote><p>编码一个符号需要经过下面几步：</p><blockquote><ol><li>二值化。CABAC使用的算术编码是基于二进制的算术编码，因此非二进制形式的编码首先要转化为二进制的形式表示。</li><li>选择上下文模型。“上下文模型”是指对二值化后的符号中的bit位进行编码时使用的概率模型。概率模型与最近编码的符号相关，会有多个概率模型可供选择。</li><li>算术编码。算术编码器根据第2步选择的概率模型对每个bit进行编码。需要注意的是每个bit的子范围只有两个数：0和1。</li><li>更新预测模型。根据实际编码的值来更新所选择的预测模型。例如，如果所编码的二进制bit为1,则预测模型中的1计数要增加。</li></ol></blockquote><h2><span id="cavlc的编码过程如下">CAVLC的编码过程如下：</span></h2><h3><span id="1-计算非零系数totalcoeffs和拖尾系数trailingones的数目">1. 计算非零系数（TotalCoeffs）和拖尾系数（TrailingOnes）的数目。</span></h3><p>拖尾系数指值为 +1&#x2F;-1的系数，最大数目为 3。如果超过 3个，那么只有最后三个被视为拖尾系数。拖尾系数的数目被赋值到变量 TrailingOnes。<br>非零系数包括所有的拖尾系数，其数目被赋值到变量 TotalCoeffs)。</p><h3><span id="2-计算ncnumbercurrent当前块值">2. 计算nC(numberCurrent，当前块值)。</span></h3><p>nC值由左边块的非零系数 nA和上面块非零系数 nB来确定，计算公式为： nC&#x3D;round((nA+nB)&#x2F;2)；若 nA存在 nB不存在，则 nC&#x3D;nA；若 nA不存在而 nB存在，则 nC&#x3D;nB；若 nA和 nB都不存在，则 nC&#x3D;0。<br>nC值用于选择 VLC编码表，如下图所示。这里体现了上下文相关 (contextadaptive)的特性，例如当 nC值较小即周围块的非零系数较少时，就会选择比较短的码，从而实现了数据压缩。<br><img src="/cal_2.gif"></p><h3><span id="3查表获得coff_token的编码">3.查表获得coff_token的编码。</span></h3><p>根据之前编码和计算过程所得的变量 TotalCoeffs 、 TrailingOnes 和 nC 值可以查 H.264 标准附录 CAVLC 码表，即可得出 coeff_token 编码序列。</p><h3><span id="4-编码每个拖尾系数的符号按zig-zag的逆序进行编码">4. 编码每个拖尾系数的符号，按zig-zag的逆序进行编码。</span></h3><p>每个符号用 1个 bit位来表示， 0表示“ +”， 1表示“—”。<br>当拖尾系数超过三个时只有最后三个被认定为拖尾系数，引词编码顺序为从后向前编码。</p><h3><span id="5-编码除拖尾系数之外非零系数的levellevels">5. 编码除拖尾系数之外非零系数的level（Levels）。</span></h3><p>每个非零系数的 level包括 sign和 magnitude，扫描顺序是逆 zig-zag序。<br>level的编码由前缀 (level_prefix)和后缀 (level_suffix)组成。前缀的长度在 0到 6之间，后缀的长度则可通过下面的步骤来确定：<br>将后缀初始化为 0。（若非零系数的总数超过 10且拖尾系数不到 3，则初始化为 1）。<br>编码频率最高（即按扫描序最后）的除拖尾系数之外的非零系数。<br>若这个系数的 magnitude 超过某个门槛值 (threshold) ，则增加后缀的长度。下表是门槛值的列表：<br><img src="/cal_5.gif"></p><h3><span id="6-编码最后一个非零系数之前0的个数totalzeos">6. 编码最后一个非零系数之前0的个数（totalZeos）。</span></h3><p>TotalZeros 指的是在最后一个非零系数前零的数目，此非零系数指的是按照正向扫描的最后一个非零系数<br>根据 TotalCoeffs 值， H.264 标准共提供了 25 个变长表格供查找，其中编码亮度数据时有 15 个表格供查找，编码色度 DC2 × 2 块（ 4 ： 2:0 格式）有 3 个表格、编码色度 DC2 × 4 块（ 4 ： 2:2 格式）有 7 个表格。</p><h3><span id="7-编码每个系数前面0的数目run_before">7. 编码每个系数前面0的数目（run_before）。</span></h3><p>扫描顺序为 zig-zag 的逆序。<br>若 ∑ [run_before]&#x3D;&#x3D; total_zeros ，则不需再计算run_before<br>扫描序中的最后一个元素不需要计算 run_before<br>每个 run_before 的 VLC 编码取决于 run_before 自身及未编码的 0 的个数 ZerosLeft 。例如若 ZerosLeft&#x3D;&#x3D; 2 ，那么 run_before 只可能是 0,1 或 2 ，因此使用两个 bit 即可表示。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;什么是熵编码&quot;&gt;什么是熵编码？&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;熵编码压缩是一种无损压缩，其实现原理是使用新的编码来表示输入的数据，从而达到压缩的效果。常用的熵编码有游程编码，哈夫曼编码和CAVLC编码等。&lt;br&gt;CAVLC是在H.264&amp;#x2F;MPE</summary>
      
    
    
    
    
    <category term="H264" scheme="http://vball.fun/tags/H264/"/>
    
    <category term="AVC" scheme="http://vball.fun/tags/AVC/"/>
    
  </entry>
  
  <entry>
    <title>Force Download View Only Video From Microsoft Sharepoint / Streams</title>
    <link href="http://vball.fun/2021/12/10/download-view-only-video-from-microsoft-sharepoint/"/>
    <id>http://vball.fun/2021/12/10/download-view-only-video-from-microsoft-sharepoint/</id>
    <published>2021-12-10T06:06:45.000Z</published>
    <updated>2022-05-19T09:41:15.138Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="background">Background</span></h1><p>There are some many teams meeting records shared by other teams, but only be available for 21 days, view only but no download. Hate it. &amp;#x1F643;&amp;#x1F928;</p><h1><span id="talk-is-cheap-show-me-the-code">Talk is cheap, show me the code.</span></h1><h2><span id="force-downlaod-from-share-point">Force downlaod from Share Point</span></h2><p>Chrome&#x2F;Edge(F12) -&gt; Inspector -&gt; Network -&gt; <strong>videomanifest?privode</strong></p><ol><li><p>Open the Sharepoint page with the video you want to download</p></li><li><p>Press F12 or Ctrl + Shift + C on your keyboard to open the browser inspector. (Cmd + Option + C on Mac OS X)</p></li><li><p>In the top part, click on the Network tab</p></li><li><p>In the top left part - right below the Network tab - you should see a field with the word “Filter” inside it. Click it to gain focus and type: <code>videomanifest</code></p></li><li><p>Refresh the Sharepoint page</p></li><li><p>After a few seconds you should now see 1 result in the browser inspector’s network part. That should be something looking like:<br>videomanifest?provider&#x3D;spo… &#x3D;&gt; that right there is the manifest URL you will need later on. Right-click on it and copy the link address.</p></li><li><p>Use ffmpeg to download the video.</p></li></ol><p><img src="/sharepoint_inspection.png" alt="inspection"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i <span class="string">&quot;https://theURLtoTheManifestYouCopiedHere&quot;</span> -codec copy downloadedVideo.mp4</span><br></pre></td></tr></table></figure><h2><span id="force-downlaod-from-stream">Force downlaod from Stream</span></h2><p>Get <a href="https://github.com/snobu/destreamer">destreamer</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/snobu/destreamer</span><br><span class="line">$ <span class="built_in">cd</span> destreamer</span><br><span class="line">$ npm install</span><br><span class="line">$ npm run build</span><br></pre></td></tr></table></figure><h3><span id="download-a-video">Download a video</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./destreamer.sh -i <span class="string">&quot;https://web.microsoftstream.com/video/VIDEO-1&quot;</span></span><br></pre></td></tr></table></figure><h3><span id="download-a-video-and-re-encode-with-hevc">Download a video and re-encode with HEVC</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./destreamer.sh -i <span class="string">&quot;https://web.microsoftstream.com/video/VIDEO-1&quot;</span> --vcodec libx265</span><br></pre></td></tr></table></figure><h3><span id="download-many-videos-but-read-urls-from-a-file-">Download many videos but read URLs from a file -</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./destreamer.sh -f list.txt</span><br></pre></td></tr></table></figure><h3><span id="you-can-get-more-usage-from-the-origin-code-repo">You can get more usage from the origin code repo</span></h3><p>Enjoy it.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;background&quot;&gt;Background&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;There are some many teams meeting records shared by other teams, but only be available fo</summary>
      
    
    
    
    
    <category term="Ffmpeg" scheme="http://vball.fun/tags/Ffmpeg/"/>
    
    <category term="Microsoft" scheme="http://vball.fun/tags/Microsoft/"/>
    
    <category term="Sharepoint" scheme="http://vball.fun/tags/Sharepoint/"/>
    
  </entry>
  
  <entry>
    <title>Best Practice Of Vscode</title>
    <link href="http://vball.fun/2021/12/09/best-practice-on-vscode/"/>
    <id>http://vball.fun/2021/12/09/best-practice-on-vscode/</id>
    <published>2021-12-09T03:29:50.000Z</published>
    <updated>2022-05-19T09:41:15.134Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="plugin">Plugin</span></h1><h2><span id="english-grammar-check">English grammar check</span></h2><table><thead><tr><th>name</th><th>description</th><th>more</th></tr></thead><tbody><tr><td>Grammarly</td><td>grammar checking</td><td></td></tr></tbody></table><h3><span id="jump-tools">Jump Tools</span></h3><table><thead><tr><th>name</th><th>description</th><th>more</th></tr></thead><tbody><tr><td>Bookmarks</td><td>easy jump in bookmarks</td><td></td></tr></tbody></table><h3><span id="code-format">Code Format</span></h3><table><thead><tr><th>name</th><th>description</th><th>more</th></tr></thead><tbody><tr><td>Trailing Spaces</td><td>remove space</td><td></td></tr></tbody></table><h3><span id="markdown">Markdown</span></h3><table><thead><tr><th>name</th><th>description</th><th>more</th></tr></thead><tbody><tr><td>Markdown Preview Markmap Support</td><td>markdown preview</td><td></td></tr><tr><td>Markdown Preview Mermaid Support</td><td>mermaid flow draw</td><td></td></tr><tr><td>Mermaid Export</td><td>mermaid png export</td><td></td></tr></tbody></table><h3><span id="fun">Fun</span></h3><table><thead><tr><th>name</th><th>description</th><th>more</th></tr></thead><tbody><tr><td>Power Mode</td><td>Make Screen screaming and set your coding on fire</td><td></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;plugin&quot;&gt;Plugin&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span id=&quot;english-grammar-check&quot;&gt;English grammar check&lt;/span&gt;&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;name&lt;</summary>
      
    
    
    
    
    <category term="Vscode" scheme="http://vball.fun/tags/Vscode/"/>
    
    <category term="Plugin" scheme="http://vball.fun/tags/Plugin/"/>
    
    <category term="Grammar" scheme="http://vball.fun/tags/Grammar/"/>
    
  </entry>
  
  <entry>
    <title>Automatic Release With Github Actions</title>
    <link href="http://vball.fun/2021/12/09/auto-release-with-github-actions/"/>
    <id>http://vball.fun/2021/12/09/auto-release-with-github-actions/</id>
    <published>2021-12-09T03:12:10.000Z</published>
    <updated>2022-05-19T09:41:15.134Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="brief">Brief</span></h2><p>Based on my last auto release for my blog, I am considering to release my snap package to the release page automatically.</p><h2><span id="talk-is-cheap-show-me-the-code">Talk is cheap. Show me the code.</span></h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Publish</span> <span class="string">Release</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">tags:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;v*&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build_7yuv_snap:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-18.04</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Check</span> <span class="string">out</span> <span class="string">Git</span> <span class="string">repository</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Snapcraft</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">samuelmeuli/action-snapcraft@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">use_lxd:</span> <span class="literal">true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">Snap</span> <span class="string">package</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          sg lxd -c &#x27;snapcraft --use-lxd&#x27;</span></span><br><span class="line"><span class="string">          ls -lah</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">&quot;marvinpinto/action-automatic-releases@latest&quot;</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">repo_token:</span> <span class="string">&quot;$<span class="template-variable">&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span>&quot;</span></span><br><span class="line">          <span class="attr">automatic_release_tag:</span> <span class="string">&quot;latest&quot;</span></span><br><span class="line">          <span class="attr">prerelease:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">title:</span> <span class="string">&quot;Development Build&quot;</span></span><br><span class="line">          <span class="attr">files:</span> <span class="string">|</span></span><br><span class="line">            <span class="string">*.snap</span></span><br></pre></td></tr></table></figure><h2><span id="release-contents">Release contents</span></h2><p>It will package the whole source package based on new tag, and if you want to package other files, use the files flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">files:</span> <span class="string">|</span></span><br><span class="line">  <span class="string">*.snap</span></span><br></pre></td></tr></table></figure><h2><span id="github_token">GITHUB_TOKEN</span></h2><p>you can generate it in your personal token page and fill it in the secret pages. so cheap and skip.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;brief&quot;&gt;Brief&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;Based on my last auto release for my blog, I am considering to release my snap package to the relea</summary>
      
    
    
    
    
    <category term="Github actions" scheme="http://vball.fun/tags/Github-actions/"/>
    
    <category term="Yaml" scheme="http://vball.fun/tags/Yaml/"/>
    
    <category term="Automatic" scheme="http://vball.fun/tags/Automatic/"/>
    
  </entry>
  
  <entry>
    <title>Switch to Github Actions and F Travis CI</title>
    <link href="http://vball.fun/2021/12/08/use-github-actions-push-blog/"/>
    <id>http://vball.fun/2021/12/08/use-github-actions-push-blog/</id>
    <published>2021-12-08T07:43:07.000Z</published>
    <updated>2022-05-19T09:41:15.170Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="fxxk-travis-ci-stopped-generating-my-page">Fxxk Travis Ci stopped generating my page</span></h1><p>One day, After I updated some blog and there was no update on my Github page blog, then I checked the Travis-CI, it showed <strong>Builds have been temporarily disabled for public repositories</strong><br><img src="/travis_down.png" alt="Down"><br>Then, whatever, F it. I spent more than 2 hours setting up my Credit Card to activate the Travis-CI service, and now It just down and without any notifications.</p><h1><span id="back-to-github-actions">Back to GitHub actions</span></h1><p>Luckily, Github provides the workflows with actions.</p><pre class="mermaid">sequenceDiagramparticipant LA as Localparticipant RM as Repo Master Branchparticipant RP as Repo gh-pages Branchparticipant GA as Github ActionsLA ->> LA: hexo new pageLA ->> LA: hexo s, setup preview serverLA ->> LA: http://127.0.0.1:4000 previewLA --> LA: add github actions workflow yamlLA ->> RM: Push to MasterRM ->> GA: Trigger actionsGA ->> GA: Setup nodeGA ->> GA: Install packageGA ->> GA: Generate static blog pageGA ->> RP: Push to Repo publish branch</pre><h2><span id="github-workflow-yaml-setting">Github workflow yaml setting</span></h2><p>Code talks firstly</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This workflow will do a clean install of</span></span><br><span class="line"><span class="comment"># node dependencies, cache/restore them,</span></span><br><span class="line"><span class="comment"># build the source code and run tests across different versions of node</span></span><br><span class="line"><span class="comment"># For more information see:</span></span><br><span class="line"><span class="comment"># https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">Node.js</span> <span class="string">CI</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;14&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Env</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm install -g hexo-cli@4.0.0</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string">          hexo generate</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">deploy_key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_PRI</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">          <span class="attr">publish_branch:</span> <span class="string">gh_pages</span>  <span class="comment"># deploying branch</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1><span id="workflow-detail">Workflow detail</span></h1><h2><span id="setup-basic-node-based-on-ubuntu">Setup basic Node based on ubuntu</span></h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;14&#x27;</span></span><br></pre></td></tr></table></figure><h2><span id="install-hexo-to-ci-system-and-build">Install hexo to CI system and build</span></h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Env</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">hexo-cli@4.0.0</span></span><br></pre></td></tr></table></figure><p>if we do not install this version globally, then the CI will not find the hexo command.</p><h2><span id="install-other-packages-and-generate-the-static-page">Install other packages and generate the static page</span></h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">generate</span></span><br></pre></td></tr></table></figure><h2><span id="deploy-to-repo-gh-pages-branch-with-deploy-tools">Deploy to Repo gh-pages branch with deploy tools</span></h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">deploy_key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_PRI</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">    <span class="attr">publish_branch:</span> <span class="string">gh_pages</span>  <span class="comment"># deploying branch</span></span><br></pre></td></tr></table></figure><p>It will deploy your Ci public directory to your repo gh_pages branch.</p><h2><span id="actions-related-resource">Actions Related Resource</span></h2><p>If you need more help, just <a href="https://github.com/marketplace/actions/github-pages-action">peaceiris&#x2F;actions-gh-pages@v3</a> pages for more help.</p><h3><span id="this-actions-support-many-tokens">This actions support many tokens</span></h3><p><img src="/tokens.png" alt="Tokens"></p><p>If you just need https, choose github_token, and if you prefer to ssh, you can use deploy_key(it’s my style)</p><h2><span id="last-do-not-forget-to-update-your-page-setting-to-your-gh-pages-branch">Last, DO NOT forget to update your page setting to your gh-pages branch</span></h2><p><img src="/gh_pages.png" alt="Page"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;fxxk-travis-ci-stopped-generating-my-page&quot;&gt;Fxxk Travis Ci stopped generating my page&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;One day, After I updated so</summary>
      
    
    
    
    
    <category term="Github" scheme="http://vball.fun/tags/Github/"/>
    
    <category term="Actions" scheme="http://vball.fun/tags/Actions/"/>
    
  </entry>
  
  <entry>
    <title>pynput stop key echo in bash</title>
    <link href="http://vball.fun/2021/12/07/pynput-stop-echo-in-bash/"/>
    <id>http://vball.fun/2021/12/07/pynput-stop-echo-in-bash/</id>
    <published>2021-12-07T09:16:18.000Z</published>
    <updated>2022-05-19T09:41:15.166Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="optional-descriptions">Optional descriptions</span></h1><ol><li>optionally block propagation of keyboard events</li><li>python block key events</li><li>python listen to keyboards and stop the event message</li></ol><h1><span id="code-talk-first">Code talk first</span></h1><p>set suppress&#x3D;True will swallow. ALL keypresses</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">from</span> pynput.keyboard <span class="keyword">import</span> Key, Listener</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_press</span>(<span class="params">key</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;0&#125; pressed&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">        key))</span><br><span class="line">    <span class="keyword">if</span> key == Key.esc:</span><br><span class="line">        <span class="comment"># Stop listener</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Collect events until released</span></span><br><span class="line"><span class="keyword">with</span> Listener(</span><br><span class="line">        on_press=on_press, suppress=<span class="literal">True</span>) <span class="keyword">as</span> listener:</span><br><span class="line">    listener.join()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1><span id="issue">Issue</span></h1><p>When use pynput to capture keyboard input like this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> Listener(</span><br><span class="line">        on_press=on_press) <span class="keyword">as</span> listener:</span><br><span class="line">    listener.join()</span><br></pre></td></tr></table></figure><p>the terminal will auto echo the key info, even special echo for up&#x2F;down , such as:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ python3 key_listener.py </span><br><span class="line">Key.up pressed</span><br><span class="line">^[[AKey.right pressed</span><br><span class="line">^[[CKey.left pressed</span><br><span class="line">^[[DKey.down pressed</span><br><span class="line">^[[BKey.right pressed</span><br><span class="line">^[[CKey.left pressed</span><br><span class="line">^[[DKey.up pressed</span><br><span class="line">^[[A<span class="string">&#x27;a&#x27;</span> pressed</span><br><span class="line">a<span class="string">&#x27;s&#x27;</span> pressed</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Now the world is slient and clean.</p><h1><span id="note">NOTE</span></h1><p>but if you forget to exit the app, other apps will never get a valid key input forever.</p><h1><span id="you-can-also-just-read-input-from-stdinuse-get_char-to-do-it">You can also just read input from stdin,use get_char to do it</span></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;optional-descriptions&quot;&gt;Optional descriptions&lt;/span&gt;&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;optionally block propagation of keyboard events&lt;/li&gt;
&lt;li&gt;pyth</summary>
      
    
    
    
    
    <category term="Python" scheme="http://vball.fun/tags/Python/"/>
    
    <category term="pynput" scheme="http://vball.fun/tags/pynput/"/>
    
  </entry>
  
  <entry>
    <title>build 7yuv snap package, run 7yuv in no-qt4 system</title>
    <link href="http://vball.fun/2021/11/23/build-7yuv-snap-package/"/>
    <id>http://vball.fun/2021/11/23/build-7yuv-snap-package/</id>
    <published>2021-11-23T07:00:53.000Z</published>
    <updated>2022-05-19T09:41:15.134Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#7yuv">7YUV</a></li><li><a href="#about-snap">About Snap</a></li><li><a href="#my-snap-build-file-for-7yuv">My snap build file for 7yuv</a></li><li><a href="#snap-build-instructions">Snap build instructions</a><ul><li><a href="#snap-base">snap base</a></li><li><a href="#build-plugin">build plugin</a></li><li><a href="#add-qt4-runtime-to-snap">add Qt4 runtime to snap</a></li><li><a href="#add-dbus-and-slot">Add dbus and slot</a></li></ul></li><li><a href="#manual-build-snap-from-code">manual build snap from code</a><ul><li><a href="#i-will-ignore-steps-about-installing-snap-and-snapcrash">I will ignore steps about installing snap and snapcrash</a></li><li><a href="#build-snap-package-with-lxd">build snap package – with lxd</a></li><li><a href="#install-your-snap">Install your snap</a></li></ul></li></ul><!-- tocstop --><h1><span id="7yuv">7YUV</span></h1><p>As a video software developer, 7yuv is a nice YUV sequence analysis tool(Of course, Vooya is another good option), but the developer of 7YUV does not punish the Qt5 version and the latest Linux system has removed the support of Qt4. So I chose to build a snap package for 7yuv to make sure it can works well in any snap supported system. </p><h1><span id="about-snap">About Snap</span></h1><p>Snaps are app packages for desktop, cloud and IoT that are easy to install, secure, cross‐platform and dependency‐free. Snaps are discoverable and installable from the Snap Store, the app store for Linux with an audience of millions.</p><h1><span id="my-snap-build-file-for-7yuv">My snap build file for 7yuv</span></h1><p>You can find my full code in <a href="https://github.com/godvmxi/7yuv_snap_wrap">LINK</a></p><h1><span id="snap-build-instructions">Snap build instructions</span></h1><h2><span id="snap-base">snap base</span></h2><p>The qt4 is still support on snap core18, so I choose the core18 as the base system</p><h2><span id="build-plugin">build plugin</span></h2><p>I have the raw 7yuv binnary, so I choose the dump plugin to install the 7yuv to my snap packge, the plugin will install all source dirtory to the system and keep the origin directory layout.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">parts:</span><br><span class="line">  7yuv:</span><br><span class="line">    <span class="comment"># See &#x27;snapcraft plugins&#x27;</span></span><br><span class="line">    plugin: dump</span><br><span class="line">    <span class="built_in">source</span>: 7yuv-2.5_x64_pre_build/</span><br></pre></td></tr></table></figure><h2><span id="add-qt4-runtime-to-snap">add Qt4 runtime to snap</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">parts:</span><br><span class="line">  7yuv:</span><br><span class="line">------------</span><br><span class="line">    stage-packages:</span><br><span class="line">      - libqtcore4</span><br><span class="line">      - libqtgui4</span><br><span class="line">      - libstdc++6</span><br><span class="line">      - libqt4-opengl</span><br><span class="line">      - libalglib3.11</span><br><span class="line">      - libgcc1</span><br><span class="line">      - libgl1</span><br><span class="line">      - libgl1-mesa-glx</span><br><span class="line">      - libgl2ps1.4</span><br><span class="line">      - libglu1</span><br><span class="line">      - libglu1-mesa</span><br><span class="line">      - libgsl23</span><br><span class="line">      - libgslcblas0</span><br><span class="line">      - libmuparser2v5</span><br><span class="line">      - libqt4-network</span><br><span class="line">      - libqt4-qt3support</span><br><span class="line">      - libqt4-svg</span><br><span class="line">      - libqt4-xml</span><br><span class="line">      - libqtassistantclient4</span><br><span class="line">      - libqtexengine1</span><br><span class="line">      - libtamuanova-0.2</span><br><span class="line">      - zlib1g</span><br><span class="line">      - sip-api-12.3</span><br></pre></td></tr></table></figure><h2><span id="add-dbus-and-slot">Add dbus and slot</span></h2><p>Do not ask why, I do not know, you can check the snap doc for it.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">slots:</span><br><span class="line">  dbus-daemon:</span><br><span class="line">    interface: dbus</span><br><span class="line">    bus: session</span><br><span class="line">    name: de.datahammer.7yuv</span><br><span class="line"></span><br><span class="line">plugs:</span><br><span class="line">  config-7yuv:</span><br><span class="line">    interface: system-files</span><br><span class="line">    <span class="built_in">read</span>:</span><br><span class="line">      - /</span><br><span class="line">    write:</span><br><span class="line">      - /</span><br></pre></td></tr></table></figure><h1><span id="manual-build-snap-from-code">manual build snap from code</span></h1><h2><span id="i-will-ignore-steps-about-installing-snap-and-snapcrash">I will ignore steps about installing snap and snapcrash</span></h2><h2><span id="build-snap-package-with-lxd">build snap package – with lxd</span></h2><p>I use the lxd to replace the multpass, the multipass has a lot trouble in ubuntu20, so I give up it.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snapcraft --debug --use-lxd</span><br></pre></td></tr></table></figure><p>you will find the target snap file in build directory.</p><h2><span id="install-your-snap">Install your snap</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap install --devmode --dangerous   7yuv_0.1_amd64.snap</span><br></pre></td></tr></table></figure><p>Now you can run 7yuv from any snap system</p>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#7yuv&quot;&gt;7YUV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#about-snap&quot;&gt;About Snap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#my-snap-build-file-for-7yuv</summary>
      
    
    
    
    
    <category term="7yuv" scheme="http://vball.fun/tags/7yuv/"/>
    
    <category term="Snap" scheme="http://vball.fun/tags/Snap/"/>
    
    <category term="Qt4" scheme="http://vball.fun/tags/Qt4/"/>
    
    <category term="Ubuntu" scheme="http://vball.fun/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>add watermarker to bitstream tool</title>
    <link href="http://vball.fun/2021/11/16/add-watermarker-to-h264-tool/"/>
    <id>http://vball.fun/2021/11/16/add-watermarker-to-h264-tool/</id>
    <published>2021-11-16T07:58:29.000Z</published>
    <updated>2022-05-19T09:41:15.130Z</updated>
    
    <content type="html"><![CDATA[<p>Index:</p><!-- toc --><ul><li><a href="#usage">Usage</a><ul><li><a href="#read-and-write-bitstream-by-frames-with-opencv2">read and write bitstream by frames with opencv2</a></li><li><a href="#use-freetype-to-render-the-string-and-add-to-frame">use freetype to render the string and add to frame</a></li><li><a href="#show-new-frame-with-opencv2">Show new frame with opencv2</a></li><li><a href="#font-load-note">font load note</a></li></ul></li><li><a href="#usage-guide">Usage Guide</a><ul><li><a href="#code-help">Code Help:</a></li><li><a href="#basic-usage">Basic Usage:</a></li><li><a href="#advanced-usage">Advanced Usage:</a></li><li><a href="#parameters-guide">Parameters Guide</a></li></ul></li><li><a href="#talk-is-cheap-show-me-the-code">Talk is cheap, show me the code</a></li></ul><!-- tocstop --><h2><span id="usage">Usage</span></h2><p>In daily test, I need to add number watermarker to the bitstream, then dump it to different yuv formats.</p><h3><span id="read-and-write-bitstream-by-frames-with-opencv2">read and write bitstream by frames with opencv2</span></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">cap = cv2.VideoCapture(args.<span class="built_in">input</span>)</span><br><span class="line">total_frames = <span class="built_in">int</span>( cap.get(cv2.CAP_PROP_FRAME_COUNT) )</span><br><span class="line">input_width = <span class="built_in">int</span>(cap.get(<span class="number">3</span>))</span><br><span class="line">input_height = <span class="built_in">int</span>(cap.get(<span class="number">4</span>))</span><br><span class="line">video_info = <span class="string">&#x27;video : &#123;0&#125;x&#123;1&#125; frames:&#123;2&#125;&#x27;</span>.<span class="built_in">format</span>(input_width, input_height, total_frames)</span><br><span class="line"><span class="built_in">print</span>(video_info)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;total frames :&quot;</span>, total_frames)</span><br><span class="line"></span><br><span class="line">fourcc = cv2.VideoWriter_fourcc(*<span class="string">&#x27;X264&#x27;</span>)</span><br><span class="line">video_output = cv2.VideoWriter(args.output, fourcc, <span class="number">30.0</span>, (input_width, input_height))</span><br><span class="line"><span class="keyword">if</span> args.frame_number &gt; <span class="number">0</span> <span class="keyword">and</span> args.frame_number &lt; total_frames:</span><br><span class="line">    total_frames = args.frame_number</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;processing frame number is : &quot;</span>, total_frames)</span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(total_frames):</span><br><span class="line">    <span class="comment"># set frame position</span></span><br><span class="line">    <span class="comment">#cap.set(cv2.CAP_PROP_POS_FRAMES,index)</span></span><br><span class="line">    ret, frame = cap.read()</span><br><span class="line">    marker_text = <span class="string">&#x27;&#123;0&#125;&#123;1:0&gt;2&#125;&#x27;</span>.<span class="built_in">format</span>(args.prefix, index)</span><br><span class="line">    add_watermark_to_frame(frame, marker_text,args.text_height, (args.offset_x, args.offset_y))</span><br><span class="line">    video_output.write(frame)</span><br><span class="line">    <span class="keyword">if</span> args.show:</span><br><span class="line">        cv2.imshow(<span class="string">&quot;Video&quot;</span>, frame)</span><br><span class="line">        <span class="keyword">if</span> cv2.waitKey(<span class="number">5000</span>) &amp; <span class="number">0xFF</span> == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">cap.release()</span><br><span class="line">video_output.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h3><span id="use-freetype-to-render-the-string-and-add-to-frame">use freetype to render the string and add to frame</span></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_watermark_to_frame</span>(<span class="params">frame, txt, text_height,offset</span>):</span></span><br><span class="line">    ft = cv2.freetype.createFreeType2()</span><br><span class="line">    ft.loadFontData(fontFileName=<span class="string">&#x27;UbuntuMono-Regular.ttf&#x27;</span>,</span><br><span class="line">                    <span class="built_in">id</span>=<span class="number">0</span>)</span><br><span class="line">    ft_size, baseline= ft.getTextSize(txt, text_height, -<span class="number">1</span>)</span><br><span class="line">    <span class="comment">#print(&quot;Msg: &#123;0&#125; &#123;1&#125; dat: &#123;2&#125;&quot;.format(ft_size, baseline, txt))</span></span><br><span class="line">    magin_pixel = <span class="number">5</span></span><br><span class="line">    rectangle_start = (offset[<span class="number">0</span>] + baseline - magin_pixel, offset[<span class="number">1</span>] - ft_size[<span class="number">1</span>] - baseline - magin_pixel )</span><br><span class="line">    rectangle_end = (offset[<span class="number">0</span>] + ft_size[<span class="number">0</span>] + magin_pixel ,  offset[<span class="number">1</span>] + baseline + magin_pixel) <span class="comment">#</span></span><br><span class="line">    <span class="comment">#print(&quot;start: &#123;0&#125; -&gt; end: &#123;1&#125;&quot;.format(rectangle_start, rectangle_end))</span></span><br><span class="line">    cv2.rectangle(frame,</span><br><span class="line">        rectangle_start,</span><br><span class="line">        rectangle_end,</span><br><span class="line">        (<span class="number">250</span>,<span class="number">240</span>,<span class="number">240</span>),</span><br><span class="line">        -<span class="number">1</span></span><br><span class="line">        )</span><br><span class="line">    ft.putText(img=frame,</span><br><span class="line">            text=txt,</span><br><span class="line">            org=(offset[<span class="number">0</span>], offset[<span class="number">1</span>]),</span><br><span class="line">            fontHeight=text_height,</span><br><span class="line">            color=(<span class="number">255</span>,  <span class="number">10</span>, <span class="number">10</span>),</span><br><span class="line">            thickness=-<span class="number">1</span>,</span><br><span class="line">            line_type=cv2.LINE_AA,</span><br><span class="line">            bottomLeftOrigin=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> frame</span><br></pre></td></tr></table></figure><h3><span id="show-new-frame-with-opencv2">Show new frame with opencv2</span></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cv2.imshow(<span class="string">&quot;Video&quot;</span>, frame)</span><br></pre></td></tr></table></figure><h3><span id="font-load-note">font load note</span></h3><ol><li>the code will auto load “UbuntuMono-Regular.ttf” to render the picture with freetype, please put this font to the script dir</li><li>the code need opencv2 support, install it by yourself</li></ol><h2><span id="usage-guide">Usage Guide</span></h2><h3><span id="code-help">Code Help:</span></h3><p><img src="/image2021-4-26_16-44-37.png" alt="usage"></p><h3><span id="basic-usage">Basic Usage:</span></h3><p>It will get first 10 frames and add number watermarker in each frame, then save to output.mp4 file.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 cv_watermark.py -i origin.mp4 -o output.mp4 -n 10</span><br></pre></td></tr></table></figure><p><img src="/image2021-4-26_16-48-17.png" alt="usage"></p><h3><span id="advanced-usage">Advanced Usage:</span></h3><p>It will get first 10 frames and add number watermarker in each frame, then save to output.mp4 file.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 ./cv_watermark.py -i Mix_BostonHarbor_MainStreet_GrandBendPatio_1920x1088.mp4  -prefix  <span class="string">&quot;AMD is awesome: &quot;</span>  -s</span><br></pre></td></tr></table></figure><p><img src="/image2021-4-26_17-15-37.png" alt="usage"></p><h3><span id="parameters-guide">Parameters Guide</span></h3><table><thead><tr><th>parameter</th><th>description</th></tr></thead><tbody><tr><td>test</td><td>tset</td></tr><tr><td>i</td><td>input bitstream file name</td></tr><tr><td>n</td><td>frame number</td></tr><tr><td>o</td><td>output bitstream file name</td></tr><tr><td>ox</td><td>watermarker offset x in target bitstream</td></tr><tr><td>oy</td><td>watermarker offset y in target bitstream</td></tr><tr><td>prefix</td><td>prefix info in front of the number watermarker</td></tr><tr><td>s</td><td>show the picture frame by frame, q: exit ; space : next frame</td></tr><tr><td>th</td><td>watermarker text height</td></tr></tbody></table><h2><span id="talk-is-cheap-show-me-the-code">Talk is cheap, show me the code</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> sp</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line">args = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_args_parse</span>():</span></span><br><span class="line">    parser = argparse.ArgumentParser(<span class="string">&#x27;传入参数：***.py&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-iw&#x27;</span>,<span class="string">&#x27;--width&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">1920</span>, <span class="built_in">help</span>=<span class="string">&quot;input frame width&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-ih&#x27;</span>,<span class="string">&#x27;--height&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">1088</span>, <span class="built_in">help</span>=<span class="string">&quot;input frame height&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-ox&#x27;</span>,<span class="string">&#x27;--offset_x&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">64</span>, <span class="built_in">help</span>=<span class="string">&quot;watermark start offset x&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-oy&#x27;</span>,<span class="string">&#x27;--offset_y&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">128</span>, <span class="built_in">help</span>=<span class="string">&quot;watermark start offset y&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-i&#x27;</span>,<span class="string">&#x27;--input&#x27;</span>, default=<span class="string">&quot;input.yuv&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-o&#x27;</span>,<span class="string">&#x27;--output&#x27;</span>, default=<span class="string">&quot;out.yuv&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-th&#x27;</span>,<span class="string">&#x27;--text_height&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">100</span>, <span class="built_in">help</span>=<span class="string">&quot;watermark text height&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-prefix&#x27;</span>,<span class="string">&#x27;--prefix&#x27;</span>, default=<span class="string">&quot;&quot;</span>, <span class="built_in">help</span>=<span class="string">&quot;watermarker prefix, such as AMD-0&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-s&#x27;</span>,<span class="string">&#x27;--show&#x27;</span>,<span class="built_in">help</span>=<span class="string">&quot;show image one by one&quot;</span>, action=<span class="string">&quot;store_true&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-n&#x27;</span>,<span class="string">&#x27;--frame_number&#x27;</span>,<span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">0</span>,<span class="built_in">help</span>=<span class="string">&quot;handle n frames&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> parser</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_watermark_to_frame</span>(<span class="params">frame, txt, text_height,offset</span>):</span></span><br><span class="line">    ft = cv2.freetype.createFreeType2()</span><br><span class="line">    ft.loadFontData(fontFileName=<span class="string">&#x27;UbuntuMono-Regular.ttf&#x27;</span>,</span><br><span class="line">                    <span class="built_in">id</span>=<span class="number">0</span>)</span><br><span class="line">    ft_size, baseline= ft.getTextSize(txt, text_height, -<span class="number">1</span>)</span><br><span class="line">    <span class="comment">#print(&quot;Msg: &#123;0&#125; &#123;1&#125; dat: &#123;2&#125;&quot;.format(ft_size, baseline, txt))</span></span><br><span class="line">    magin_pixel = <span class="number">5</span></span><br><span class="line">    rectangle_start = (offset[<span class="number">0</span>] + baseline - magin_pixel, offset[<span class="number">1</span>] - ft_size[<span class="number">1</span>] - baseline - magin_pixel )</span><br><span class="line">    rectangle_end = (offset[<span class="number">0</span>] + ft_size[<span class="number">0</span>] + magin_pixel ,  offset[<span class="number">1</span>] + baseline + magin_pixel) <span class="comment">#</span></span><br><span class="line">    <span class="comment">#print(&quot;start: &#123;0&#125; -&gt; end: &#123;1&#125;&quot;.format(rectangle_start, rectangle_end))</span></span><br><span class="line">    cv2.rectangle(frame,</span><br><span class="line">        rectangle_start,</span><br><span class="line">        rectangle_end,</span><br><span class="line">        (<span class="number">250</span>,<span class="number">240</span>,<span class="number">240</span>),</span><br><span class="line">        -<span class="number">1</span></span><br><span class="line">        )</span><br><span class="line">    ft.putText(img=frame,</span><br><span class="line">            text=txt,</span><br><span class="line">            org=(offset[<span class="number">0</span>], offset[<span class="number">1</span>]),</span><br><span class="line">            fontHeight=text_height,</span><br><span class="line">            color=(<span class="number">255</span>,  <span class="number">10</span>, <span class="number">10</span>),</span><br><span class="line">            thickness=-<span class="number">1</span>,</span><br><span class="line">            line_type=cv2.LINE_AA,</span><br><span class="line">            bottomLeftOrigin=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> frame</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    args = get_args_parse().parse_args()</span><br><span class="line">    <span class="built_in">print</span>(args)</span><br><span class="line">    <span class="built_in">print</span>(args.width)</span><br><span class="line">    <span class="comment">#get_watermark(&quot;temp&quot;)</span></span><br><span class="line">    cap = cv2.VideoCapture(args.<span class="built_in">input</span>)</span><br><span class="line">    total_frames = <span class="built_in">int</span>( cap.get(cv2.CAP_PROP_FRAME_COUNT) )</span><br><span class="line">    input_width = <span class="built_in">int</span>(cap.get(<span class="number">3</span>))</span><br><span class="line">    input_height = <span class="built_in">int</span>(cap.get(<span class="number">4</span>))</span><br><span class="line">    video_info = <span class="string">&#x27;video : &#123;0&#125;x&#123;1&#125; frames:&#123;2&#125;&#x27;</span>.<span class="built_in">format</span>(input_width, input_height, total_frames)</span><br><span class="line">    <span class="built_in">print</span>(video_info)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;total frames :&quot;</span>, total_frames)</span><br><span class="line"></span><br><span class="line">    fourcc = cv2.VideoWriter_fourcc(*<span class="string">&#x27;X264&#x27;</span>)</span><br><span class="line">    video_output = cv2.VideoWriter(args.output, fourcc, <span class="number">30.0</span>, (input_width, input_height))</span><br><span class="line">    <span class="keyword">if</span> args.frame_number &gt; <span class="number">0</span> <span class="keyword">and</span> args.frame_number &lt; total_frames:</span><br><span class="line">        total_frames = args.frame_number</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;processing frame number is : &quot;</span>, total_frames)</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(total_frames):</span><br><span class="line">        <span class="comment"># set frame position</span></span><br><span class="line">        <span class="comment">#cap.set(cv2.CAP_PROP_POS_FRAMES,index)</span></span><br><span class="line">        ret, frame = cap.read()</span><br><span class="line">        marker_text = <span class="string">&#x27;&#123;0&#125;&#123;1:0&gt;2&#125;&#x27;</span>.<span class="built_in">format</span>(args.prefix, index)</span><br><span class="line">        add_watermark_to_frame(frame, marker_text,args.text_height, (args.offset_x, args.offset_y))</span><br><span class="line">        video_output.write(frame)</span><br><span class="line">        <span class="keyword">if</span> args.show:</span><br><span class="line">            cv2.imshow(<span class="string">&quot;Video&quot;</span>, frame)</span><br><span class="line">            <span class="keyword">if</span> cv2.waitKey(<span class="number">5000</span>) &amp; <span class="number">0xFF</span> == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    cap.release()</span><br><span class="line">    video_output.release()</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Index:&lt;/p&gt;
&lt;!-- toc --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#usage&quot;&gt;Usage&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#read-and-write-bitstream-by-frames-with-opencv2&quot;&gt;read and </summary>
      
    
    
    
    
    <category term="Python" scheme="http://vball.fun/tags/Python/"/>
    
    <category term="Opencv" scheme="http://vball.fun/tags/Opencv/"/>
    
    <category term="Freetype" scheme="http://vball.fun/tags/Freetype/"/>
    
    <category term="Font" scheme="http://vball.fun/tags/Font/"/>
    
  </entry>
  
  <entry>
    <title>generate different yuv in different formats</title>
    <link href="http://vball.fun/2021/11/16/ffmpeg-generate-yuv-format/"/>
    <id>http://vball.fun/2021/11/16/ffmpeg-generate-yuv-format/</id>
    <published>2021-11-16T07:44:02.000Z</published>
    <updated>2022-05-19T09:41:15.138Z</updated>
    
    <content type="html"><![CDATA[<p>Index:</p><!-- toc --><ul><li><a href="#ffmpeg-convet-basic-usage">FFMPEG convet basic usage</a><ul><li><a href="#show-all-support-formats-by-ffmpeg">Show all support formats by ffmpeg</a></li><li><a href="#ffmpeg-convert-mp4-to-yuv-with-resolution-and-format">FFMPEG convert mp4 to yuv with resolution and format</a></li><li><a href="#convert-yuv-to-h264mp4">Convert yuv to H264&#x2F;mp4</a></li></ul></li><li><a href="#how-to-generate-rgb444-fp16-file">How to generate RGB444 FP16 file</a><ul><li><a href="#install-ffmpeg-and-imagemagick">Install ffmpeg and imagemagick.</a></li><li><a href="#first-convert-the-image-to-rgb-format-from-yuv420">First convert the image to RGB format from YUV420.</a></li><li><a href="#convert-more-formats">Convert more formats</a></li><li><a href="#display-the-rgba-fp16-image">Display the RGBA FP16 image</a></li></ul></li><li><a href="#my-work-flow-to-generate-custom-yuv-formats">My work flow to generate custom yuv formats</a></li><li><a href="#yuv-view-tools">YUV view tools</a></li></ul><!-- tocstop --><p>ffmpeg can be used to generate many kinds of format. just enum it and record it.</p><h1><span id="ffmpeg-convet-basic-usage">FFMPEG convet basic usage</span></h1><h2><span id="show-all-support-formats-by-ffmpeg">Show all support formats by ffmpeg</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -pix_fmts</span><br></pre></td></tr></table></figure><p>use “-pix_fmt “ to define the output formats in ffmpeg</p><table><thead><tr><th>name</th><th>format</th><th>bit depth</th><th>Note</th></tr></thead><tbody><tr><td>yuv420p</td><td>YUV420</td><td>8</td><td>NV12</td></tr><tr><td>yuv420p16le</td><td>YUV420</td><td>10</td><td>P0101?</td></tr><tr><td>yuv444p</td><td>YUV444</td><td>8</td><td></td></tr><tr><td>yuv444p10le</td><td>YUV444</td><td>10</td><td></td></tr></tbody></table><h2><span id="ffmpeg-convert-mp4-to-yuv-with-resolution-and-format">FFMPEG convert mp4 to yuv with resolution and format</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -y -i <span class="variable">$&#123;file_name&#125;</span>_<span class="variable">$&#123;in_res&#125;</span>.mp4 -pix_fmt yuv420p -s <span class="variable">$out_res</span> <span class="variable">$&#123;file_name&#125;</span>_<span class="variable">$&#123;out_res&#125;</span>.yuv</span><br></pre></td></tr></table></figure><h2><span id="convert-yuv-to-h264x2fmp4">Convert yuv to H264&#x2F;mp4</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -f rawvideo -pix_fmt yuv420p -s:v 720x480 -r 25 -i Mix_BostonHarbor_MainStreet_GrandBendPatio_720x480.yuv -c:v libx264 output.mp4</span><br></pre></td></tr></table></figure><h1><span id="how-to-generate-rgb444-fp16-file">How to generate RGB444 FP16 file</span></h1><p>Here is the guideline from Osman</p><h2><span id="install-ffmpeg-and-imagemagick">Install ffmpeg and imagemagick.</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install imagemagick ffmpeg</span><br></pre></td></tr></table></figure><h2><span id="first-convert-the-image-to-rgb-format-from-yuv420">First convert the image to RGB format from YUV420.</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -pix_fmt yuv420p -s 1920x1080 -i BostonHarbor_1920x1080.yuv -frames:v 10 -pix_fmt rgb48le BostonHarbor_1920x1080-rgb48le.rgb</span><br></pre></td></tr></table></figure><h2><span id="convert-more-formats">Convert more formats</span></h2><p>Then use the following imagemagick command to convert from RGB to RGBA FP16 format.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -size 1920x1080 -depth 16 -colorspace rgb rgb:BostonHarbor_1920x1080-rgb48le.rgb -size 1920x1080 -depth 16 -define quantum:format=floating-point -colorspace rgb rgba:BostonHarbor_1920x1080-rgbafp16.rgb</span><br></pre></td></tr></table></figure><h2><span id="display-the-rgba-fp16-image">Display the RGBA FP16 image</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display -size 1920x1080 -depth 16 -define quantum:format=floating-point -endian lsb rgba:BostonHarbor_1920x1080-rgbafp16.rgb</span><br></pre></td></tr></table></figure><h1><span id="my-work-flow-to-generate-custom-yuv-formats">My work flow to generate custom yuv formats</span></h1><blockquote><ol><li>Get some reference yuv files with ffmpeg or from web</li><li>Manual split and combine your custom YUV files with split\cat&gt;&gt; commond.</li><li>Encode your custom yuv to h264 with FFMPEG</li><li>Add number watermarker to your custom yuv file</li><li>Decode your custom bitstreams to different resolutions and formats.</li></ol></blockquote><h1><span id="yuv-view-tools">YUV view tools</span></h1><blockquote><p>vooya<br>7yuv</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Index:&lt;/p&gt;
&lt;!-- toc --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#ffmpeg-convet-basic-usage&quot;&gt;FFMPEG convet basic usage&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#show-all-support-f</summary>
      
    
    
    
    
    <category term="H264" scheme="http://vball.fun/tags/H264/"/>
    
    <category term="FFMPEG" scheme="http://vball.fun/tags/FFMPEG/"/>
    
    <category term="YUV" scheme="http://vball.fun/tags/YUV/"/>
    
  </entry>
  
  <entry>
    <title>Zhuyin Pinyin 拼音注音編輯器</title>
    <link href="http://vball.fun/2021/11/02/toneoz/"/>
    <id>http://vball.fun/2021/11/02/toneoz/</id>
    <published>2021-11-02T08:37:22.000Z</published>
    <updated>2022-05-19T09:41:15.166Z</updated>
    
    <content type="html"><![CDATA[<p>好东西记录下来，并且安利一下。如果有人能看到的话。</p><h1><span id="遇到了一个好东西刚好给孩子学习拼音使用toneoz">遇到了一个好东西，刚好给孩子学习拼音使用–toneoz</span></h1><p>作者实现方法比较有意思，直接使用字体来实现注音标注，于是这个就可以在任意一个编辑器上使用，如果你的应用支持字体更换，那应用范围就更广了。</p><blockquote><p><a href="https://toneoz.com/">https://toneoz.com/</a><br><img src="/ksnip_20211103-154448.png"></p></blockquote><h2><span id="字体安装">字体安装</span></h2><p><a href="https://github.com/jeffreyxuan/toneoz-font-pinyin-kai">github</a>上边直接下载安装到系统字体库即可。。。大神，跪了</p><h2><span id="在线选音编辑器">在线选音编辑器</span></h2><p><a href="https://toneoz.com/ime">https://toneoz.com/ime</a></p><h2><span id="多音字处理">多音字处理</span></h2><p>考虑到中文存在多音字问题，作者提供了一个选音编辑器，可以非常方便的支持多音字的标注选择，选择完成后可以直接复制到word或者导出成图片。<br><img src="/ksnip_20211103-154040.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;好东西记录下来，并且安利一下。如果有人能看到的话。&lt;/p&gt;
&lt;h1&gt;&lt;span id=&quot;遇到了一个好东西刚好给孩子学习拼音使用toneoz&quot;&gt;遇到了一个好东西，刚好给孩子学习拼音使用–toneoz&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;作者实现方法比较有意思，直接使用字体来实现注音标</summary>
      
    
    
    
    
    <category term="toneoz" scheme="http://vball.fun/tags/toneoz/"/>
    
    <category term="pinyin" scheme="http://vball.fun/tags/pinyin/"/>
    
  </entry>
  
  <entry>
    <title>COVID-1984 is ready, will infect all the world, no one can survive</title>
    <link href="http://vball.fun/2021/10/27/1984/"/>
    <id>http://vball.fun/2021/10/27/1984/</id>
    <published>2021-10-27T07:56:47.000Z</published>
    <updated>2022-05-19T09:41:15.130Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="covid-1984-is-ready-will-infect-all-the-world-no-one-can-survive">COVID-1984 is ready, will infect all the world, no one can survive!</span></h1><p><img src="/ksnip_20211027-161028.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;covid-1984-is-ready-will-infect-all-the-world-no-one-can-survive&quot;&gt;COVID-1984 is ready, will infect all the world, no one can s</summary>
      
    
    
    
    
    <category term="1984" scheme="http://vball.fun/tags/1984/"/>
    
    <category term="Shit" scheme="http://vball.fun/tags/Shit/"/>
    
  </entry>
  
  <entry>
    <title>csdn blog export / 博客导出</title>
    <link href="http://vball.fun/2021/10/27/csdn-export/"/>
    <id>http://vball.fun/2021/10/27/csdn-export/</id>
    <published>2021-10-27T06:46:42.000Z</published>
    <updated>2022-05-19T09:41:15.138Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="csdn垃圾">CSDN垃圾</span></h2><p>CSDN 垃圾不用多说了，以前只是看不到别人的博客，不过还有谷歌可以弥补，不过最近朋友和我说你的几个文章怎么变成vip独享了。。。我突然发现我的烂文字竟然还被CSDN偷偷摸摸对部分用户VIP，汗颜。。导出来算了</p><h2><span id="导出到hexo">导出到hexo</span></h2><p>考虑导出到hexo，搜罗了半天，没有合适的工具和代码，就自己写一个吧，需要解决三个问题</p><ol><li>博客列表获取</li><li>博客文章内容转换成markdown</li><li>导出配套的图片数据</li></ol><h3><span id="博客列表获取">博客列表获取</span></h3><h4><span id="csdn-文章列表接口-httpsblogcsdnnetgodvmxiarticlelistid">CSDN 文章列表接口： </span></h4><p>获得后从html中提取对应的xpath节点，使用lxml提取出来博客的目录link id.<br><img src="/ksnip_20211027-145628.png" alt="获取节点的xpath"><br>然后拼接文章接口获取到文章链接： <a href="https://blog.csdn.net/godvmxi/article/details/%7Blink">https://blog.csdn.net/godvmxi/article/details/{link</a> id}<br>二话不说贴代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> locale</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> pprint</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sys.getfilesystemencoding())</span><br><span class="line"><span class="built_in">print</span>(locale.getpreferredencoding())</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_acticle_list</span>(<span class="params">user, page_start, page_end</span>):</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.81 Safari/537.36&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    link_list = []</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(page_start), <span class="built_in">int</span>(page_end)+<span class="number">1</span> ):</span><br><span class="line">        <span class="built_in">print</span>(index)</span><br><span class="line">        base_url= <span class="string">&quot;https://blog.csdn.net/godvmxi/article/list/%s&quot;</span>%index</span><br><span class="line">        res = requests.get(url = base_url,headers=headers)</span><br><span class="line">        <span class="built_in">print</span>(res.url)</span><br><span class="line">        <span class="built_in">print</span>(res.status_code)</span><br><span class="line"></span><br><span class="line">        page_html = etree.HTML(res.content)</span><br><span class="line">        article_list = page_html.xpath(<span class="string">&#x27;//*[@id=&quot;articleMeList-blog&quot;]/div[2]&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">len</span>(article_list))</span><br><span class="line">        <span class="keyword">for</span> obj <span class="keyword">in</span> article_list:</span><br><span class="line">            <span class="built_in">id</span> =  obj.attrib[<span class="string">&quot;data-articleid&quot;</span>]</span><br><span class="line">            link = <span class="string">&quot;https://blog.csdn.net/godvmxi/article/details/%s\n&quot;</span>%<span class="built_in">id</span></span><br><span class="line">            link_list.append(link)</span><br><span class="line">    pprint.pprint(link_list)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;link.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)  <span class="keyword">as</span> fd:</span><br><span class="line">        fd.writelines(link_list)</span><br><span class="line">    <span class="comment">#print(len(link_list))</span></span><br><span class="line">    <span class="keyword">return</span> link_list</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">down_load_articals</span>(<span class="params">link_list</span>):</span></span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> link_list:</span><br><span class="line">        link = link.replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Download : %s&quot;</span>%link)</span><br><span class="line">        file_name = link.split(<span class="string">&quot;/&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;target file name-&gt;%s&quot;</span>%file_name)</span><br><span class="line">        cmd = <span class="string">&quot;clean-mark %s -o download/%s&quot;</span>%(link,file_name)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;cmd-&gt;   %s&quot;</span>%cmd)</span><br><span class="line">        os.system(cmd)</span><br><span class="line">        time.sleep(<span class="number">5</span>)</span><br><span class="line">        <span class="comment">#break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span> :</span><br><span class="line">    user= sys.argv[<span class="number">1</span>]</span><br><span class="line">    page_start = sys.argv[<span class="number">2</span>]</span><br><span class="line">    page_end  = sys.argv[<span class="number">3</span>]</span><br><span class="line">    link_list  = get_acticle_list(user, page_start, page_end)</span><br><span class="line">    down_load_articals(link_list)</span><br></pre></td></tr></table></figure><h3><span id="使用clean-mark-将网页转换成markdown">使用clean-mark  将网页转换成markdown</span></h3><ol><li>安装clean-mark<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g  clean-mark</span><br></pre></td></tr></table></figure>2: 网页转换<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clean-mark <span class="variable">$&#123;link&#125;</span> -o download/target.md<span class="string">&quot;</span></span><br></pre></td></tr></table></figure></li></ol><h2><span id="处理markdown中的图片">处理markdown中的图片</span></h2><p>因为图片都在csdn服务器或者其他第三方服务器，这里需要处理脚本，把对应的图片下载下来。 解析，上代码了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> locale</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> pprint</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_image_line</span>(<span class="params">line, img_dir, index</span>):</span></span><br><span class="line">    line = line.replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;![](&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;)&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;will handle line -&gt; &quot;</span> + line)</span><br><span class="line">    link_name = line</span><br><span class="line">    file_name = line.split(<span class="string">&quot;/&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">    </span><br><span class="line">    post_fix = file_name.split(<span class="string">&quot;.&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(post_fix) &gt; <span class="number">0</span>:</span><br><span class="line">        post_fix = post_fix.lower()</span><br><span class="line">    final_file_name = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;link file_name -&gt; &quot;</span> + file_name + <span class="string">&quot;  post-&gt;&quot;</span> + post_fix + <span class="string">&quot;&lt;-&quot;</span>)</span><br><span class="line">    cmd = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> line.find(<span class="string">&quot;img-blog&quot;</span>) &gt; <span class="number">0</span>:</span><br><span class="line">        link_name = link_name.split(<span class="string">&quot;?&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">        file_name = link_name.split(<span class="string">&quot;/&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line">        target_file_name = img_dir + <span class="string">&quot;/&quot;</span> + file_name</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;csdn img link name:&quot;</span> + link_name)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;csdn file name : &quot;</span> + file_name)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;target_file_name: &quot;</span> + target_file_name)</span><br><span class="line">        cmd=<span class="string">&quot;wget %s -O %s&quot;</span>%(link_name, target_file_name)</span><br><span class="line">    <span class="keyword">elif</span> post_fix <span class="keyword">in</span> [<span class="string">&quot;png&quot;</span>, <span class="string">&#x27;jpg&#x27;</span>, <span class="string">&#x27;jpeg&#x27;</span>, <span class="string">&quot;gif&quot;</span>]:</span><br><span class="line">        target_file_name = img_dir + <span class="string">&quot;/&quot;</span> + file_name</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;##normal target file : &quot;</span>+ target_file_name)</span><br><span class="line">        cmd =  <span class="string">&quot;wget %s -O %s&quot;</span>%(link_name, target_file_name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;downlink is not support&quot;</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;will run cmd: &quot;</span> + cmd)</span><br><span class="line">    os.system(cmd)</span><br><span class="line">    line = <span class="string">&quot;![](%s)\n&quot;</span>%file_name</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> line</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_origin_markdown</span>(<span class="params">source_dir, file_name, target_dir, index</span>):</span></span><br><span class="line">    <span class="comment">#img_dir = target_dir  + &quot;/csdn_&quot; + file_name.replace(&quot;.md&quot;, &quot;&quot;)</span></span><br><span class="line">    <span class="comment">#target_file = target_dir + &quot;/csdn_&quot; + file_name</span></span><br><span class="line">    img_dir = <span class="string">&quot;%s/z_csdn_%03d_%s&quot;</span>%(target_dir, index, file_name.replace(<span class="string">&quot;.md&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    target_file = <span class="string">&quot;%s/z_csdn_%03d_%s&quot;</span>%(target_dir, index, file_name)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;target file   -&gt; &quot;</span> + target_file)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;target img dir-&gt; &quot;</span> + img_dir)</span><br><span class="line">    <span class="comment">#os.remove(target_file)</span></span><br><span class="line">    shutil.rmtree(path = img_dir,ignore_errors=<span class="literal">True</span>)</span><br><span class="line">    os.mkdir(img_dir)</span><br><span class="line">    out_lines = []</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(source_dir + <span class="string">&quot;/&quot;</span> +file_name, <span class="string">&quot;r&quot;</span>)  <span class="keyword">as</span> fd:</span><br><span class="line">        lines = fd.readlines()</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">            <span class="keyword">if</span> line.startswith(<span class="string">&quot;link&quot;</span>):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> line.startswith(<span class="string">&quot;keywords:&quot;</span>):</span><br><span class="line">                line = <span class="string">&quot;tags: CSDN\n&quot;</span></span><br><span class="line">            <span class="keyword">if</span> line.startswith(<span class="string">&quot;![]&quot;</span>) : </span><br><span class="line">                line = handle_image_line(line, img_dir, index) + <span class="string">&quot;\n&quot;</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;img line : &quot;</span> + line)</span><br><span class="line">            out_lines.append(line)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(out_lines) &gt; <span class="number">0</span> :</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(target_file, <span class="string">&quot;w+&quot;</span>)  <span class="keyword">as</span> fd:</span><br><span class="line">            fd.writelines(out_lines)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    source_dir = sys.argv[<span class="number">1</span>]</span><br><span class="line">    target_dir = sys.argv[<span class="number">2</span>]</span><br><span class="line">    start_files = <span class="built_in">int</span>(sys.argv[<span class="number">3</span>])</span><br><span class="line">    end_files = <span class="built_in">int</span>(sys.argv[<span class="number">4</span>])</span><br><span class="line">    source_file_list = os.listdir(source_dir)</span><br><span class="line">    <span class="comment">#pprint.pprint(source_file_list)</span></span><br><span class="line">    index = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> source_file_list :</span><br><span class="line">        <span class="keyword">if</span> index &gt; end_files:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;########################## handle file -&gt; start: %3d end:%3d index:%3d file: %s&quot;</span>%(start_files,end_files, index, file))</span><br><span class="line">        <span class="keyword">if</span> index &gt;= start_files:</span><br><span class="line">            process_origin_markdown(source_dir,  file, target_dir,index)</span><br><span class="line">        index  = index + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3><span id="手动处理部分冲突问题">手动处理部分冲突问题</span></h3><p>因为hexo对部分的关键词不好，这里需要对部分关键词进行修改，比如：</p><blockquote><p>link 删掉即可<br>description , 手动截断或者删除特殊字符</p></blockquote><p>脚本提供了调试方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python3 get_img.py  download/  /srv/chia/disk/1/work/code/github/blog/<span class="built_in">source</span>/_posts/ 74 90</span><br><span class="line"></span><br><span class="line">arg1： 原始markdown文件位置</span><br><span class="line">arg2： hexo博客陌路</span><br><span class="line">arg3： 起始文件index</span><br><span class="line">arg4： 结束文件index</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;csdn垃圾&quot;&gt;CSDN垃圾&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;CSDN 垃圾不用多说了，以前只是看不到别人的博客，不过还有谷歌可以弥补，不过最近朋友和我说你的几个文章怎么变成vip独享了。。。我突然发现我的烂文字竟然还被CSDN偷偷摸摸对部分用户VIP，汗</summary>
      
    
    
    
    
    <category term="Python" scheme="http://vball.fun/tags/Python/"/>
    
    <category term="CSDN" scheme="http://vball.fun/tags/CSDN/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://vball.fun/2021/10/25/hello-world/"/>
    <id>http://vball.fun/2021/10/25/hello-world/</id>
    <published>2021-10-25T12:46:25.000Z</published>
    <updated>2022-05-19T09:41:15.166Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2><span id="quick-start">Quick Start</span></h2><h3><span id="create-a-new-post">Create a new post</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3><span id="run-server">Run server</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3><span id="generate-static-files">Generate static files</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3><span id="deploy-to-remote-sites">Deploy to remote sites</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mount samba with current user</title>
    <link href="http://vball.fun/2021/10/25/mount-samba-with-user/"/>
    <id>http://vball.fun/2021/10/25/mount-samba-with-user/</id>
    <published>2021-10-25T07:35:08.000Z</published>
    <updated>2022-05-19T09:41:15.166Z</updated>
    
    <content type="html"><![CDATA[<p>When you want to mount a samba to modify the file , there are always some issues :</p><ul><li>all kind of file permission issues</li><li>how to auto mount samba</li><li>Samba server setting</li></ul><h2><span id="file-permission">file permission</span></h2><p>gid&#x3D;1000,uid&#x3D;1000,<code>you can use id command to find your current user info </code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ id</span><br><span class="line">uid=1000(user) gid=1000(user) groups=1000(user),4(adm),</span><br><span class="line">24(cdrom),27(sudo),30(dip),46(plugdev),112(lpadmin),128(sambashare)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="how-to-auto-mount-samba">how to auto mount samba</span></h2><p>here is my &#x2F;etc&#x2F;fstab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//dbs-04/data /nfs/data/ cifs credentials=/home/.smbcredentials,uid=1000,gid=1000 0 0</span><br><span class="line">//dbs-04/home /nfs/home/ cifs credentials=/home/.smbcredentials,uid=1000,gid=1000 0 0</span><br></pre></td></tr></table></figure><p>the client user info is in &#x2F;home&#x2F;user&#x2F;.smbcredentials,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat /home/user/.smbcredentials</span><br><span class="line">username=smbuser</span><br><span class="line">password=smbuserpasswd</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="my-server-setting">my server setting</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[data]</span><br><span class="line">    comment = user</span><br><span class="line">    path = /data/user</span><br><span class="line">    browseable = yes</span><br><span class="line">    writeable = yes</span><br><span class="line">    guest ok = yes</span><br><span class="line">    force user = jbright</span><br></pre></td></tr></table></figure><p>remember add your samba user into your server</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;When you want to mount a samba to modify the file , there are always some issues :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;all kind of file permission issues&lt;/li&gt;
&lt;</summary>
      
    
    
    
    
    <category term="Linux" scheme="http://vball.fun/tags/Linux/"/>
    
    <category term="Samba" scheme="http://vball.fun/tags/Samba/"/>
    
  </entry>
  
  <entry>
    <title>老头乐 Batocera plus 2.0 精美界面-中文64G复古游戏包-by游戏方块 + 飞行模拟器</title>
    <link href="http://vball.fun/2021/10/25/game/betocera_all_pc/"/>
    <id>http://vball.fun/2021/10/25/game/betocera_all_pc/</id>
    <published>2021-10-25T02:44:42.000Z</published>
    <updated>2022-05-19T09:41:15.138Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="最近又燃起了玩老头乐的想法">最近又燃起了玩老头乐的想法</span></h2><p>于是就有了这篇垃圾</p><h2><span id="batocera-plus-20-精美界面-中文64g复古游戏包-by游戏方块64位电脑">Batocera plus 2.0 精美界面-中文64G复古游戏包-by游戏方块（64位电脑）</span></h2><p>Batocera plus 2.0 精美界面-中文64G复古游戏包-by游戏方块（64位电脑)–<a href="https://www.bilibili.com/video/BV1oZ4y1G7SX?from=search&seid=17388397281457202904">游戏方块</a><br><a href="https://batocera.org/">About Batocera.linux</a><br><img src="/ksnip_20211025-104753.png" alt="游戏方块"></p><h2><span id="凤凰模拟器">凤凰模拟器</span></h2><p><img src="/20201121221905300.png" alt="凤凰模拟器"></p><h2><span id="无聊就玩老头乐">无聊就玩老头乐</span></h2><p>既然是老头乐，伴随了童年的接机+小霸王肯定是必须，之前用了905机顶盒改装的游戏盒子（各种坑，什么tf卡丢失，数据丢失，无法启动各种问题），但是麻，又想玩飞行模拟器，干脆二合一算了，果断换回了Batocera这款神器，但是你让我重新从零开始搭建一套游戏包，还是不符合老头乐的风格。</p><h2><span id="batocera">Batocera</span></h2><h2><span id="飞行模拟器">飞行模拟器</span></h2><h3><span id="硬件方案">硬件方案</span></h3><table><thead><tr><th>设备</th><th>来源</th><th>价格</th><th>是否必须</th></tr></thead><tbody><tr><td>H61主板</td><td>海鲜市场</td><td>80</td><td>是</td></tr><tr><td>i3 3220</td><td>海鲜市场</td><td>60</td><td>是</td></tr><tr><td>DDR3 4G</td><td>主板赠送</td><td>0</td><td>是</td></tr><tr><td>风扇</td><td>主办赠送</td><td>0</td><td>是</td></tr><tr><td>游戏硬盘</td><td>海鲜市场</td><td>20</td><td>是</td></tr><tr><td>VGA转HDMI</td><td>海鲜市场</td><td>20</td><td>非</td></tr><tr><td>以下是飞行模拟器，非必须</td><td>—-</td><td>—-</td><td>—-</td></tr><tr><td>模拟器硬盘</td><td>海鲜市场</td><td>20</td><td>是</td></tr><tr><td>模拟器手柄MC6C</td><td>海鲜市场</td><td>80</td><td>是</td></tr><tr><td>USB加密狗</td><td>海鲜市场</td><td>20</td><td>是</td></tr></tbody></table><h2><span id="batocera-下载">Batocera 下载</span></h2><h3><span id></span></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">magnet:?xt=urn:btih:CE3792AEED1D44CA57897C8AAC86883A6A42345B=</span><br></pre></td></tr></table></figure><h3><span id="55寸大屏玩游戏真爽">55寸大屏玩游戏真爽</span></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;最近又燃起了玩老头乐的想法&quot;&gt;最近又燃起了玩老头乐的想法&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;于是就有了这篇垃圾&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;batocera-plus-20-精美界面-中文64g复古游戏包-by游戏方块64位电脑&quot;&gt;Batocera </summary>
      
    
    
    
    <category term="game" scheme="http://vball.fun/categories/game/"/>
    
    
    <category term="game" scheme="http://vball.fun/tags/game/"/>
    
    <category term="daily" scheme="http://vball.fun/tags/daily/"/>
    
  </entry>
  
</feed>
